{"version":3,"sources":["Images/Users/user-4.jpg","Pages/Profile/MyPosts.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","Pages/Profile/MyPosts/Post/Post.module.scss","components/Common/Preloader/Preloader.module.scss","Pages/Footer/Footer.module.scss","store/store.ts","store/DialogsReducer.tsx","Pages/EditProfile/EditProfile.module.scss","store/AppReducer.tsx","Pages/Chat/Messages.module.scss","components/Common/Selectors/Selectors.ts","components/Header/Header.module.scss","utils/error.utils.ts","Pages/Error404/Error404.module.scss","Pages/Profile/ContactBlock/ContactBlock.module.scss","components/Common/Preloader/Preloader.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","components/HOC/withSuspense.tsx","Images/Logo.svg","components/Header/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoutes.tsx","Pages/EditProfile/EditProfile.tsx","Images/404Text.svg","Images/astronaut.svg","Images/earth.svg","Images/moon.svg","Images/rocket.svg","Pages/Error404/Error404.tsx","Pages/Events/Events.tsx","Pages/Events/EventsContainer.tsx","Pages/Footer/Footer.tsx","Pages/Login/Login.tsx","Pages/Photos/Photos.tsx","Pages/Photos/PhotosContainer.tsx","Pages/Chat/Message.tsx","Pages/Chat/Messages.tsx","Pages/Chat/Chat.tsx","Pages/Chat/ChatPage.tsx","Pages/Profile/MyPosts/Post/Post.tsx","Pages/Profile/AnyUserPosts/AnyUserPost.tsx","Pages/Profile/AnyUserPosts/AnyUserPosts.tsx","Pages/Profile/MyPosts.tsx","constants.ts","Pages/Profile/ContactBlock/ContactBlock.tsx","Pages/Profile/OnlineFriends/ChatBlock.tsx","Pages/Profile/ProfileStatus.tsx","Pages/Profile/ProfileInfo/ProfileInfo.tsx","Pages/Profile/ProfileFC.tsx","Pages/Profile/ProfileContainerFC.tsx","Pages/Users/Users.tsx","Pages/Users/UsersContainerFC.tsx","App.tsx","index.tsx","api/api.tsx","store/ProfileReducer.tsx","store/AuthReducer.tsx","Pages/Profile/AnyUserPosts/AnyUserPosts.module.scss","Pages/Chat/Message.module.scss","Pages/Profile/ProfileInfo/ProfileInfo.module.scss","api/chatAPI.ts","store/chatReducer.tsx","Pages/Login/login.module.scss","Images/defaultUserImage.jpg","store/UserPostsReducer.tsx","Images/Post photo.png","Images/Users/user-1.jpg","Images/Users/user-2.jpg","Images/Users/user-3.jpg","Images/Users/user-5.jpg","Images/Users/user-6.jpg","Images/Users/user-7.jpg","Images/Users/user-8.jpg","Images/Users/user-9.jpg","Pages/Users/users.module.scss","store/UsersReducer.tsx","Pages/Profile/Profile.module.scss","Pages/Profile/OnlineFriends/ChatBlock.module.scss","Pages/Chat/ChatPage.module.scss","components/Common/TextAreaForm/textAreaData.ts"],"names":["module","exports","MyProfilePhoto","React","memo","navigate","useNavigate","myPhoto","useAppSelector","state","Auth","myProfile","photos","small","myLoginName","fullName","userID","useSelector","myIDSelector","navigateToMyMage","onKeyUp","tabIndex","role","onClick","className","styles","myProfilePhotoWrapper","mySmallPhoto","src","defaultUserPhoto","alt","jobDescription","TextAreaForm","props","formik","useFormik","initialValues","text","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","formWrapper","multiline","textArea","placeholder","placeholderText","getFieldProps","onBlur","e","webSocketStatusDisabled","key","ctrlKey","iconButton","type","disabled","style","color","useAppDispatch","useDispatch","rootReducer","combineReducers","ProfilePage","profileReducer","DialogPage","dialogsReducer","HardcodedUsers","hardcodedUsersReducer","UsersPage","userReducer","authReducer","App","appReducer","ChatPage","chatReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ACTIONS_TYPE","initialState","dialogs","id","v1","name","avatar","user4","message","messages","action","ADD_DIALOG_MESSAGE","addMessageAC","error","status","APP_SET_ERROR","APP_SET_STATUS","setAppErrorAC","setAppStatusAC","statusSelector","data","profileSelector","profile","isLoggedInSelector","isLoggedIn","isInitializedSelector","isInitialized","isFetchingSelector","isFetching","usersSelector","items","pageSizeSelector","pageSize","currentPageSelector","currentPage","totalUserCountSelector","totalCount","followingArrSelector","following","chatMessageSelector","chatStatusSelector","chatStartMessageCountSelector","startMessagesCount","handleNetworkError","Error","dispatch","response","handleServerAppError","handleServerNetworkError","Preloader","main","progress","CircularProgress","size","ErrorSnackBar","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","sx","width","AlertTitle","withSuspense","Component","Suspense","fallback","Navigation","logOutHandler","logOutTC","myID","headerContent","logo","sideWrapper","NavItem","to","PATH","PROFILE","isActive","activeNavLink","unActiveNavLink","fontSize","hideForMobile","DIALOGS","USERS","LastNavItem","EDIT_PROFILE","loginBlock","profilePhoto","Button","variant","loginButton","IconButton","logOutIcon","Header","headerWrapper","PrivateRoutes","location","useLocation","encodeURIComponent","pathname","replace","EditProfile","userId","s","editProfileWrapper","content","enableReinitialize","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","updateProfileTC","formRow","contactText","TextField","inputProps","textField","onChange","handleChange","handleBlur","value","helperText","formRowWithoutMargin","FormControlLabel","labelPlacement","label","control","Checkbox","checked","button","Error404","ErrorWrapper","stars","centralBody","image404","errorText","HOME","btnGoHome","objects","objectRocket","rocket","earthMoon","objectEarth","earth","objectMoon","moon","boxAstronaut","objectAstronaut","astronaut","glowingStars","star","Events","EventsContainer","Footer","year","Date","getFullYear","LastContactContainer","error404Display","href","Login","serverError","captchaUrl","useState","isPassType","setIsPassType","email","test","password","rememberMe","captcha","loginTC","useEffect","listener","code","preventDefault","document","addEventListener","removeEventListener","Grid","loginWrapper","container","justifyContent","login","item","h2","FormControl","textFields","FormLabel","rel","target","FormGroup","mTop","InputLabel","htmlFor","Input","onFocus","touched","emailError","endAdornment","InputAdornment","position","aria-label","onMouseDown","VisibilityOff","Visibility","passError","checkbox","marginTop","marginBottom","Photos","PhotosContainer","Message","myId","devChatMessageBlock","myImgAndMessage","someUserImgAndMessage","myNameAndMessage","someUserNameAndMessage","userName","marginLeft","photo","defaultUserImage","Messages","isAutoScroll","setIsAutoScroll","messagesAnchorRef","useRef","current","scrollIntoView","messagesBlock","onScroll","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","ref","Chat","startMessagesListeningTC","stopMessagesListeningTC","sendMessageTC","filter","isChatOpen","setIsChatOpen","startMessagesLength","setStartMessagesLength","newMessagesCount","setStartMessagesCountAC","chatPageBlockOpen","chatPageBlockCollapsed","chatTitle","messageFlag","noMessageFlag","minimizeIcon","Post","likeCount","updated","likeObj","setLikeObj","addLikeHandler","likeGenerator","round","random","generateLike","itemWrapper","avatarAndClose","height","deleteMyPostAC","likeBlock","AnyUserPost","postText","postPhoto","anyUserPost","userWrapper","userPhotoAndDescriptionBlock","userDescription","userPosition","deleteUsersPostAC","AnyUserPosts","anyPostsElements","anyUserPostsData","post","MyPosts","postsElements","postsData","p","reverse","postBlock","myPostForm","newPostHeader","posts","maxPictureSize","Yup","shape","min","max","required","matches","nullable","url","ContactBlock","contactsBlock","contactsBlockItem","icon","faVk","faInstagram","faYoutube","faGithub","faTwitter","faFacebook","faFirefoxBrowser","faGoogle","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","ProfileStatus","localStatus","setLocalStatus","editMode","setEditMode","activateEditMode","deactivateEditMode","updateUserStatusTC","data-testid","onKeyDown","editableDiv","input","onKeyPress","top","left","transform","bgcolor","boxShadow","borderRadius","ProfileInfo","userPhoto","large","Number","useParams","photoRef","onlineFriends","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","openPopover","setOpenPopover","popoverAnchor","show","Object","every","handleCloseModal","onlineFriendsArr","f","profileInfoWrapper","avatarWrapper","isNaN","menu","statusBlock","profileName","popover","profileStatus","profileDescription","Title","Modal","Box","display","flexDirection","alignItems","right","accept","reader","FileReader","file","files","onloadend","result","readAsDataURL","textTransform","click","uploadAvatarTC","Popover","anchorEl","transformOrigin","Typography","ProfileFC","myPostsData","profileWrapper","allPostsBlock","profileAreaText","addPostActionAC","ProfileContainerFC","myUserID","getProfileTC","getUserStatusTC","LOGIN","Users","users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","ceil","usersWrapper","Pagination","page","count","user","usersBlock","avatarAndFollowButton","followed","some","nameAndStatus","UserContainerFC","followingArr","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","SuspendedDialogContainer","lazy","ERROR404","ANY_ROUTE","EVENTS","PHOTOS","appStatus","initializeAppTC","path","UsersContainerFC","ReactDOM","render","getElementById","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","get","profileAPI","getProfile","getStatus","updateStatus","put","uploadAvatar","photoFile","formData","FormData","append","updateProfile","authAPI","me","delete","logout","getFollowers","securityAPI","setStatusAC","SET_STATUS","SET_SOME_USER_PROFILE","SAVE_MY_PROFILE_PHOTO","isMyProfile","a","res","setMyProfileAC","console","log","resultCode","getState","undefined","SET_IS_LOGGED_IN","SET_IS_INITIALIZED","SET_AUTH_DATA","GET_CAPTCHA","SET_AUTH_PROFILE_DATA","setIsLoggedInAC","getCaptchaAC","profileData","subscribers","messageReceived","statusChanged","isShowCloseAlert","ws","alertCounter","notifySubscribersAboutStatus","forEach","openHandler","alert","errorHandler","closeHandler","setTimeout","createChannel","messageHandler","newMessages","JSON","parse","cleanUp","close","WebSocket","chatAPI","eventName","callback","push","send","SET_MESSAGES","CHANGE_STATUS","SAVE_MESSAGES_COUNT","_newMessageHandler","newMessageHandlerCreator","setMessagesAC","_statusChangedHandler","statusChangedHandlerCreator","changeStatusAC","likesCount","user1","user2","user3","user5","user6","user7","user8","user9","ADD_POST","DELETE_MY_POST","DELETE_USERS_POST","UserPostsReducer","FOLLOW","u","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROGRESS","followingIsProgress","followSuccessAC","unFollowSuccessAC","setUsersAC","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","dialogsAreaText"],"mappings":"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","file":"static/js/main.89d6d614.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user-4.f2ebe3cd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__awBB3\",\"myPostForm\":\"MyPosts_myPostForm__1W6yS\",\"newPostHeader\":\"MyPosts_newPostHeader__2cgix\",\"posts\":\"MyPosts_posts__2-aqw\"};","import React from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport defaultUserPhoto from '../../../Images/defaultUserImage.jpg';\nimport { useAppSelector } from '../../../store/store';\nimport { myIDSelector } from '../Selectors/Selectors';\n\nimport styles from './MyProfilePhoto.module.scss';\n\nexport const MyProfilePhoto = React.memo(() => {\n  const navigate = useNavigate();\n  const myPhoto = useAppSelector<string | undefined>(\n    state => state.Auth.myProfile?.photos?.small,\n  );\n  const myLoginName = useAppSelector<string | undefined>(\n    state => state.Auth.myProfile?.fullName,\n  );\n  const userID = useSelector(myIDSelector);\n  const navigateToMyMage = () => navigate(`/profile/${userID}`);\n\n  return (\n    <div\n      onKeyUp={navigateToMyMage}\n      tabIndex={0}\n      role=\"button\"\n      onClick={navigateToMyMage}\n      className={styles.myProfilePhotoWrapper}\n    >\n      <img\n        className={styles.mySmallPhoto}\n        src={myPhoto || defaultUserPhoto}\n        alt=\"userPhoto\"\n      />\n      <div>\n        <strong>{myLoginName}</strong>\n        <div className={styles.jobDescription}>Frontend developer</div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport SendIcon from '@mui/icons-material/Send';\nimport { TextField } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useFormik } from 'formik';\n\nimport { MyPostsPropsType } from '../../../Pages/Profile/MyPosts';\n\nimport { maxMessageLength } from './textAreaData';\nimport styles from './TextAreaForm.module.scss';\n\ntype TexAreaPostType = MyPostsPropsType & {\n  webSocketStatusDisabled?: boolean;\n};\n\nexport const TextAreaForm = React.memo((props: TexAreaPostType) => {\n  type FormikErrorType = {\n    text?: string;\n  };\n  const formik = useFormik({\n    initialValues: {\n      text: '',\n    },\n    validate: values => {\n      const errors: FormikErrorType = {};\n      if (values.text.length >= maxMessageLength) {\n        errors.text = `Max length of message is ${maxMessageLength} symbols.`;\n      }\n      return errors;\n    },\n\n    onSubmit: (values, { resetForm }) => {\n      if (values.text !== '') props.callBack(values.text);\n      resetForm();\n    },\n  });\n  const onKeyUpHandler = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (!props?.webSocketStatusDisabled && e.key === 'Enter' && e.ctrlKey) {\n      formik.handleSubmit();\n    }\n  };\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div className={styles.formWrapper}>\n        <TextField\n          multiline\n          className={styles.textArea}\n          placeholder={props.placeholderText}\n          {...formik.getFieldProps('text')}\n          onBlur={() => (formik.errors.text = '')}\n          onKeyUp={onKeyUpHandler}\n        />\n        <>\n          {formik.values.text && (\n            <IconButton\n              className={styles.iconButton}\n              type=\"submit\"\n              disabled={props?.webSocketStatusDisabled}\n            >\n              <SendIcon />\n            </IconButton>\n          )}\n        </>\n      </div>\n      {formik.errors.text && <div style={{ color: 'red' }}> {formik.errors.text}</div>}\n    </form>\n  );\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__ujXj7\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__2CA9x\",\"jobDescription\":\"MyProfilePhoto_jobDescription__1Re2c\",\"jobStatus\":\"MyProfilePhoto_jobStatus__1rH_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__1ppx3\",\"textArea\":\"TextAreaForm_textArea__1pfwG\",\"iconButton\":\"TextAreaForm_iconButton__3YTtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__36K0p\",\"avatarAndClose\":\"Post_avatarAndClose__10YEY\",\"likeBlock\":\"Post_likeBlock__2ZQLA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__3pqhT\",\"progress\":\"Preloader_progress__aJfYS\",\"scaling\":\"Preloader_scaling__1TF5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LastContactContainer\":\"Footer_LastContactContainer__1b38W\",\"error404Display\":\"Footer_error404Display__2vHdz\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunkMiddleware, { ThunkDispatch } from 'redux-thunk';\n\nimport { appReducer, AppActionsType } from './AppReducer';\nimport { AuthActionsType, authReducer } from './AuthReducer';\nimport { ChatActionsType, chatReducer } from './chatReducer';\nimport { dialogsReducer } from './DialogsReducer';\nimport { ProfileActionsType, profileReducer } from './ProfileReducer';\nimport hardcodedUsersReducer from './UserPostsReducer';\nimport { UsersActionsType, userReducer } from './UsersReducer';\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>;\nexport type RootActionsType =\n  | AuthActionsType\n  | AppActionsType\n  | ProfileActionsType\n  | UsersActionsType\n  | ChatActionsType;\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\nconst rootReducer = combineReducers({\n  ProfilePage: profileReducer,\n  DialogPage: dialogsReducer,\n  HardcodedUsers: hardcodedUsersReducer,\n  UsersPage: userReducer,\n  Auth: authReducer,\n  App: appReducer,\n  ChatPage: chatReducer,\n});\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunkMiddleware)),\n);\nexport type AppStoreType = ReturnType<typeof rootReducer>;\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\n","import { v1 } from 'uuid';\n\nimport user4 from '../Images/Users/user-4.jpg';\n\n// types\nexport type MessagesType = {\n  id: string;\n  message: string;\n};\nexport enum ACTIONS_TYPE {\n  ADD_DIALOG_MESSAGE = 'DIALOGS/ADD-DIALOG-MESSAGE',\n}\nexport type DialogActionsType = ReturnType<typeof addMessageAC>;\nexport type DialogsType = {\n  id: string;\n  name: string;\n  avatar: string;\n  message: string;\n};\nexport type DialogsStateType = {\n  dialogs: Array<DialogsType>;\n  messages: Array<MessagesType>;\n};\nconst initialState: DialogsStateType = {\n  dialogs: [\n    {\n      id: v1(),\n      name: 'Kyle Fisher',\n      avatar: user4,\n      message: 'What is the weather forecast for tomorrow?',\n    },\n  ],\n  messages: [{ id: v1(), message: 'Looks like it will be sunny tomorrow=)' }],\n};\n// reducer\nexport const dialogsReducer = (\n  state: DialogsStateType = initialState,\n  action: DialogActionsType,\n): DialogsStateType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\n      return {\n        ...state,\n        messages: [...state.messages, { id: v1(), message: action.text }],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\n// action creators\nexport const addMessageAC = (text: string) =>\n  ({ type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text } as const);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editProfileWrapper\":\"EditProfile_editProfileWrapper__OZsZF\",\"content\":\"EditProfile_content__yeo62\",\"checkBox\":\"EditProfile_checkBox__3_9ZV\",\"formRowWithoutMargin\":\"EditProfile_formRowWithoutMargin__2qdG4\",\"formRow\":\"EditProfile_formRow__x-fvC\",\"contactText\":\"EditProfile_contactText__16E2y\",\"textField\":\"EditProfile_textField__6lKce\",\"checkBoxLabel\":\"EditProfile_checkBoxLabel__7g5NV\",\"button\":\"EditProfile_button__XUxZk\"};","// types\nexport type NullableType<T> = null | T;\nexport enum ACTIONS_TYPE {\n  APP_SET_ERROR = 'APP-SET-ERROR',\n  APP_SET_STATUS = 'APP/SET-STATUS',\n}\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\nexport type AppActionsType =\n  | ReturnType<typeof setAppErrorAC>\n  | ReturnType<typeof setAppStatusAC>;\n\ntype InitialStateType = typeof initialState;\nconst initialState = {\n  error: null as NullableType<string>,\n  status: 'idle' as RequestStatusType,\n};\n\n// reducer\nexport const appReducer = (\n  state: InitialStateType = initialState,\n  action: AppActionsType,\n): InitialStateType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.APP_SET_ERROR:\n      return { ...state, error: action.error };\n    case ACTIONS_TYPE.APP_SET_STATUS:\n      return { ...state, status: action.status };\n    default:\n      return state;\n  }\n};\n// action creators\nexport const setAppErrorAC = (error: NullableType<string>) =>\n  ({ type: ACTIONS_TYPE.APP_SET_ERROR, error } as const);\nexport const setAppStatusAC = (status: RequestStatusType) =>\n  ({ type: ACTIONS_TYPE.APP_SET_STATUS, status } as const);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesBlock\":\"Messages_messagesBlock__n1krz\"};","import { ChatMessageType, StatusType } from '../../../store/chatReducer';\nimport { ProfileDataType } from '../../../store/ProfileReducer';\nimport { AppRootStateType } from '../../../store/store';\nimport { UserType } from '../../../store/UsersReducer';\n\nexport const statusSelector = (state: AppRootStateType): string =>\n  state.ProfilePage.status;\nexport const myIDSelector = (state: AppRootStateType): number => state.Auth.data.id;\nexport const profileSelector = (state: AppRootStateType): ProfileDataType =>\n  state.ProfilePage.profile;\nexport const isLoggedInSelector = (state: AppRootStateType): boolean =>\n  state.Auth.isLoggedIn;\nexport const isInitializedSelector = (state: AppRootStateType): boolean =>\n  state.Auth.isInitialized;\nexport const isFetchingSelector = (state: AppRootStateType): boolean =>\n  state.UsersPage.isFetching;\nexport const usersSelector = (state: AppRootStateType): UserType[] =>\n  state.UsersPage.items;\nexport const pageSizeSelector = (state: AppRootStateType): number =>\n  state.UsersPage.pageSize;\nexport const currentPageSelector = (state: AppRootStateType): number =>\n  state.UsersPage.currentPage;\nexport const totalUserCountSelector = (state: AppRootStateType): number =>\n  state.UsersPage.totalCount;\nexport const followingArrSelector = (state: AppRootStateType): Array<string> =>\n  state.UsersPage.following;\nexport const chatMessageSelector = (state: AppRootStateType): Array<ChatMessageType> =>\n  state.ChatPage.messages;\nexport const chatStatusSelector = (state: AppRootStateType): StatusType =>\n  state.ChatPage.status;\nexport const chatStartMessageCountSelector = (state: AppRootStateType): number =>\n  state.ChatPage.startMessagesCount;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__ieoh3\",\"sideWrapper\":\"Header_sideWrapper__1xkaz\",\"NavItem\":\"Header_NavItem__1l6qi\",\"LastNavItem\":\"Header_LastNavItem__t7uwd\",\"hideForMobile\":\"Header_hideForMobile__2r21P\",\"unActiveNavLink\":\"Header_unActiveNavLink__S8Dvm\",\"activeNavLink\":\"Header_activeNavLink__FTlHl\",\"logo\":\"Header_logo__3DKsg\",\"headerContent\":\"Header_headerContent__1GBc_\",\"logOutIcon\":\"Header_logOutIcon__13SK4\",\"loginBlock\":\"Header_loginBlock__2Vz7d\",\"profilePhoto\":\"Header_profilePhoto__2JnBf\",\"loginButton\":\"Header_loginButton__3L0rf\"};","import { AxiosError } from 'axios';\n\nimport { RespType } from '../api/api';\nimport { setAppErrorAC, setAppStatusAC } from '../store/AppReducer';\nimport { AppThunkDispatch } from '../store/store';\n\nexport const handleNetworkError = (\n  Error: AxiosError<{ error: string }>,\n  dispatch: AppThunkDispatch,\n) => {\n  dispatch(setAppStatusAC('failed'));\n  dispatch(setAppErrorAC(Error.response?.data.error || 'some Error'));\n};\n\nexport const handleServerAppError = <D>(\n  data: RespType<D>,\n  dispatch: AppThunkDispatch,\n) => {\n  if (data.messages.length) {\n    dispatch(setAppErrorAC(data.messages[0]));\n  } else {\n    dispatch(setAppErrorAC('Some error occupied'));\n  }\n  dispatch(setAppStatusAC('failed'));\n};\nexport const handleServerNetworkError = (error: Error, dispatch: AppThunkDispatch) => {\n  dispatch(setAppErrorAC(error.message));\n  dispatch(setAppStatusAC('failed'));\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinEarthOnHover\":\"Error404_spinEarthOnHover__1b0Fw\",\"ErrorWrapper\":\"Error404_ErrorWrapper__1uC5B\",\"stars\":\"Error404_stars__mdnOj\",\"centralBody\":\"Error404_centralBody__2CXaR\",\"image404\":\"Error404_image404__303rd\",\"btnGoHome\":\"Error404_btnGoHome__1YTZO\",\"objects\":\"Error404_objects__3JyeS\",\"objectRocket\":\"Error404_objectRocket__2hYkb\",\"rocketMovement\":\"Error404_rocketMovement__2b-w6\",\"earthMoon\":\"Error404_earthMoon__1EI0X\",\"objectEarth\":\"Error404_objectEarth__3clmu\",\"spinEarth\":\"Error404_spinEarth__3Qgkn\",\"objectMoon\":\"Error404_objectMoon__23mNN\",\"boxAstronaut\":\"Error404_boxAstronaut__3qClC\",\"moveAstronaut\":\"Error404_moveAstronaut__3_sW1\",\"objectAstronaut\":\"Error404_objectAstronaut__3pH88\",\"rotateAstronaut\":\"Error404_rotateAstronaut__1Y_ck\",\"glowingStars\":\"Error404_glowingStars__3ILxB\",\"star\":\"Error404_star__3zlhp\",\"glowStar\":\"Error404_glowStar__2B4_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"ContactBlock_contactsBlock__1UYE4\",\"contactsBlockItem\":\"ContactBlock_contactsBlockItem__mCkW3\",\"icon\":\"ContactBlock_icon__3gBow\",\"lastContactBlockItem\":\"ContactBlock_lastContactBlockItem__3UFiP\"};","import React from 'react';\n\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport styles from './Preloader.module.scss';\n\nexport const Preloader = () => (\n  <div className={styles.main}>\n    <div className={styles.progress}>\n      <CircularProgress size={50} />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport { AlertTitle } from '@mui/material';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\n\nimport { NullableType, setAppErrorAC } from '../../store/AppReducer';\nimport { useAppDispatch, useAppSelector } from '../../store/store';\n\nexport const ErrorSnackBar = () => {\n  const dispatch = useAppDispatch();\n\n  const error = useAppSelector<NullableType<string>>(state => state.App.error);\n\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(setAppErrorAC(null));\n  };\n\n  return (\n    <Snackbar\n      open={error !== null}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n    >\n      <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%' }}>\n        <AlertTitle>Error</AlertTitle>\n        <strong>{error}</strong>\n      </Alert>\n    </Snackbar>\n  );\n};\n","import React, { ReactElement } from 'react';\n\nimport { Preloader } from '../Common/Preloader/Preloader';\n\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\n  return (props: T): ReactElement => (\n    <React.Suspense fallback={<Preloader />}>\n      <Component {...props} />\n    </React.Suspense>\n  );\n}\nexport default withSuspense;\n","export default __webpack_public_path__ + \"static/media/Logo.f593821f.svg\";","import React from 'react';\n\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport MessageIcon from '@mui/icons-material/Message';\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { IconButton } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\nimport { PATH } from '../../App';\nimport logo from '../../Images/Logo.svg';\nimport { logOutTC } from '../../store/AuthReducer';\nimport { MyProfilePhoto } from '../Common/MyProfilePhoto/MyProfilePhoto';\nimport { isLoggedInSelector, myIDSelector } from '../Common/Selectors/Selectors';\n\nimport styles from './Header.module.scss';\n\nexport const Navigation = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const logOutHandler = () => {\n    dispatch(logOutTC());\n    navigate('/login');\n  };\n  const myID = useSelector(myIDSelector);\n\n  const navigateToMyMage = () => {\n    navigate(`/profile/${myID}`);\n  };\n  return (\n    <div className={styles.headerContent}>\n      <div className={styles.logo}>\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <nav className={styles.sideWrapper}>\n        <div className={styles.NavItem}>\n          <NavLink\n            to={`${PATH.PROFILE}/${myID}`}\n            className={({ isActive }) =>\n              isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`\n            }\n          >\n            <RssFeedIcon fontSize=\"large\" />\n            <div className={styles.hideForMobile}>Feed</div>\n          </NavLink>\n        </div>\n        <div className={styles.NavItem}>\n          <NavLink\n            to={PATH.DIALOGS}\n            className={({ isActive }) =>\n              isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`\n            }\n          >\n            <MessageIcon fontSize=\"large\" />\n            <div className={styles.hideForMobile}>Dialogs</div>\n          </NavLink>\n        </div>\n\n        <div className={styles.NavItem}>\n          <NavLink\n            to={PATH.USERS}\n            className={({ isActive }) =>\n              isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`\n            }\n          >\n            <PeopleAltIcon fontSize=\"large\" />\n            <div className={styles.hideForMobile}>All Users</div>\n          </NavLink>\n        </div>\n        <div className={styles.LastNavItem}>\n          <NavLink\n            to={PATH.EDIT_PROFILE}\n            className={({ isActive }) =>\n              isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`\n            }\n          >\n            <SettingsIcon fontSize=\"large\" />\n            <div className={styles.hideForMobile}>Edit Profile</div>\n          </NavLink>\n        </div>\n      </nav>\n\n      <div className={styles.loginBlock}>\n        <div\n          onKeyUp={navigateToMyMage}\n          tabIndex={0}\n          role=\"button\"\n          className={styles.profilePhoto}\n          onClick={navigateToMyMage}\n        >\n          <MyProfilePhoto />\n        </div>\n        {/* <div className={styles.jobStatus}>\n                    <div className={styles.userName} onClick={navigateToMyMage}>\n                        {myLoginName}\n                    </div>\n                </div> */}\n        {isLoggedIn && (\n          <>\n            <Button\n              variant=\"outlined\"\n              className={styles.loginButton}\n              onClick={logOutHandler}\n            >\n              Log out\n            </Button>\n\n            <IconButton className={styles.logOutIcon} onClick={logOutHandler}>\n              <LogoutIcon fontSize=\"large\" />\n            </IconButton>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport styles from './Header.module.scss';\nimport { Navigation } from './Navigation';\n\nexport const Header = () => (\n  <header className={styles.headerWrapper}>\n    <Navigation />\n  </header>\n);\n","import React from 'react';\n\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\n\nimport { useAppSelector } from '../store/store';\n\nimport { isLoggedInSelector } from './Common/Selectors/Selectors';\nimport { Header } from './Header/Header';\n\nconst PrivateRoutes = () => {\n  const location = useLocation();\n\n  const isLoggedIn = useAppSelector<boolean>(isLoggedInSelector);\n\n  if (!isLoggedIn) {\n    return (\n      <Navigate\n        to={`/login?redirectTo=${encodeURIComponent(location.pathname)}`}\n        replace\n      />\n    );\n  }\n\n  return (\n    <>\n      <Header />\n      <Outlet />\n    </>\n  );\n};\n\nexport default PrivateRoutes;\n","import React from 'react';\n\nimport { TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { PATH } from '../../App';\nimport { updateProfileTC } from '../../store/ProfileReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport s from './EditProfile.module.scss';\n\nexport const EditProfile = React.memo(() => {\n  const userId = useAppSelector(state => state.Auth.data.id);\n  const myProfile = useAppSelector(state => state.Auth.myProfile);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  return (\n    <div className={s.editProfileWrapper}>\n      <div className={s.content}>\n        <h3>Edit profile</h3>\n\n        <Formik\n          enableReinitialize\n          initialValues={{\n            userId,\n            lookingForAJob: myProfile && myProfile.lookingForAJob,\n            lookingForAJobDescription: myProfile && myProfile.lookingForAJobDescription,\n            fullName: myProfile && myProfile.fullName,\n            aboutMe: myProfile && myProfile.aboutMe,\n            contacts: {\n              facebook: myProfile && myProfile.contacts.facebook,\n              website: myProfile && myProfile.contacts.website,\n              vk: myProfile && myProfile.contacts.vk,\n              twitter: myProfile && myProfile.contacts.twitter,\n              instagram: myProfile && myProfile.contacts.instagram,\n              youtube: myProfile && myProfile.contacts.youtube,\n              github: myProfile && myProfile.contacts.github,\n              mainLink: myProfile && myProfile.contacts.mainLink,\n            },\n          }}\n          onSubmit={values => {\n            dispatch(updateProfileTC(values));\n            navigate(`${PATH.PROFILE}/${userId}`);\n          }}\n        >\n          {props => (\n            <form onSubmit={props.handleSubmit}>\n              <div className={s.formRow}>\n                <div className={s.contactText}>Github: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.github\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.contacts.github}\n                  error={!!props.errors.contacts?.github}\n                  helperText={props.errors.contacts?.github}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>Facebook: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.facebook\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.contacts.facebook}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>VK: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.vk\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.contacts.vk}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>Instagram: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.instagram\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.contacts.instagram}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>Twitter: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.twitter\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.contacts.twitter}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>YouTube: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.youtube\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>WebSite: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.website\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>Main link: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"contacts.mainLink\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                />\n              </div>\n              <div className={s.formRow}>\n                <div className={s.contactText}>About me: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  multiline\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"aboutMe\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.aboutMe}\n                />\n              </div>\n              <div className={s.formRowWithoutMargin}>\n                <div className={s.contactText}>Full name: </div>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  size=\"small\"\n                  type=\"text\"\n                  name=\"fullName\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.fullName}\n                />\n              </div>\n              <div className={s.formRowWithoutMargin}>\n                <FormControlLabel\n                  labelPlacement=\"start\"\n                  label=\"Looking for a job:\"\n                  name=\"lookingForAJob\"\n                  control={<Checkbox />}\n                  checked={props.values.lookingForAJob}\n                  onChange={props.handleChange}\n                />\n              </div>\n              <div className={s.formRow}>\n                <p className={s.contactText}>Job description: </p>\n                <TextField\n                  inputProps={{ className: s.textField }}\n                  multiline\n                  size=\"small\"\n                  name=\"lookingForAJobDescription\"\n                  type=\"text\"\n                  onChange={props.handleChange}\n                  onBlur={props.handleBlur}\n                  value={props.values.lookingForAJobDescription}\n                />\n              </div>\n\n              <div className={s.button}>\n                <Button variant=\"contained\" type=\"submit\">\n                  Submit changes\n                </Button>\n              </div>\n            </form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/404Text.154db121.svg\";","export default __webpack_public_path__ + \"static/media/astronaut.efda7730.svg\";","export default __webpack_public_path__ + \"static/media/earth.e0fbdf02.svg\";","export default __webpack_public_path__ + \"static/media/moon.5a77d87b.svg\";","export default __webpack_public_path__ + \"static/media/rocket.9c039dba.svg\";","import React, { FC } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { PATH } from '../../App';\nimport errorText from '../../Images/404Text.svg';\nimport astronaut from '../../Images/astronaut.svg';\nimport earth from '../../Images/earth.svg';\nimport moon from '../../Images/moon.svg';\nimport rocket from '../../Images/rocket.svg';\n\nimport styles from './Error404.module.scss';\n\nexport const Error404: FC = () => (\n  <div className={styles.ErrorWrapper}>\n    <div className={styles.stars}>\n      <div className={styles.centralBody}>\n        <img className={styles.image404} src={errorText} alt=\"img404\" />\n        <NavLink to={`${PATH.HOME}`} className={styles.btnGoHome}>\n          GO BACK HOME\n        </NavLink>\n      </div>\n      <div className={styles.objects}>\n        <img className={styles.objectRocket} src={rocket} alt=\"imgRocket\" />\n        <div className={styles.earthMoon}>\n          <img className={styles.objectEarth} src={earth} alt=\"imgEarth\" />\n          <img className={styles.objectMoon} src={moon} alt=\"imgMoon\" />\n        </div>\n        <div className={styles.boxAstronaut}>\n          <img className={styles.objectAstronaut} src={astronaut} alt=\"imgAstronaut\" />\n        </div>\n      </div>\n      <div className={styles.glowingStars}>\n        <div className={styles.star} />\n        <div className={styles.star} />\n        <div className={styles.star} />\n        <div className={styles.star} />\n        <div className={styles.star} />\n        <div className={styles.star} />\n      </div>\n    </div>\n  </div>\n);\n","import React, { FC } from 'react';\n\nexport const Events: FC = () => (\n  <div>\n    <div>Events</div>\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport { Events } from './Events';\n\nexport const EventsContainer: FC = () => (\n  /* const Redirect = WithAuthRedirect(Events); */\n  <div>\n    {/* <Redirect/> */}\n    <Events />\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport { useLocation } from 'react-router-dom';\n\nimport styles from './Footer.module.scss';\n\nexport const Footer: FC = () => {\n  const year = new Date().getFullYear();\n  const location = useLocation();\n\n  const myPortfolioRoute = 'https://dmitrylotkov.github.io/Portfolio/';\n  return (\n    <footer\n      className={\n        location.pathname !== '/404'\n          ? styles.LastContactContainer\n          : styles.error404Display\n      }\n    >\n      <span>\n        © {year} All Rights Reserved. Created for educational purposes by\n        <a href={myPortfolioRoute}>\n          <strong> @Dmitry Lotkov</strong>\n        </a>\n      </span>\n    </footer>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { InputAdornment } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormLabel from '@mui/material/FormLabel';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { PATH } from '../../App';\nimport { NullableType, setAppErrorAC } from '../../store/AppReducer';\nimport { loginTC } from '../../store/AuthReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport styles from './login.module.scss';\n\ntype FormikErrorType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  captcha: string;\n};\nexport const Login: FC = React.memo(() => {\n  const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\n  const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\n  const captchaUrl = useAppSelector<NullableType<string>>(state => state.Auth.captchaUrl);\n  const dispatch = useDispatch();\n  const [isPassType, setIsPassType] = useState<boolean>(true);\n\n  const formik = useFormik({\n    validate: values => {\n      const errors: Partial<FormikErrorType> = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n      if (values.password.length < 3) {\n        errors.password = 'Invalid password length';\n      }\n      if (!values.password) {\n        errors.password = 'Password required';\n      }\n\n      return errors;\n    },\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: true,\n      captcha: '',\n    },\n\n    onSubmit: values => {\n      dispatch(loginTC(values));\n    },\n  });\n\n  const removeError = () => {\n    if (serverError) dispatch(setAppErrorAC(''));\n  };\n  const handleClickShowPassword = (): void => {\n    setIsPassType(!isPassType);\n  };\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>): void => {\n    event.preventDefault();\n  };\n  useEffect(() => {\n    const listener = (event: KeyboardEvent) => {\n      if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n        event.preventDefault();\n        formik.handleSubmit();\n      }\n    };\n    document.addEventListener('keydown', listener);\n    return () => {\n      document.removeEventListener('keydown', listener);\n    };\n  }, [formik]);\n\n  if (isLoggedIn) {\n    return <Navigate to={PATH.HOME} />;\n  }\n  return (\n    <Grid className={styles.loginWrapper} container justifyContent=\"center\">\n      <Grid className={styles.login} item justifyContent=\"center\">\n        <h2 className={styles.h2}>Social network</h2>\n        <h2>Sign in</h2>\n        <FormControl className={styles.textFields}>\n          <FormLabel>\n            <p>\n              To log in get registered\n              <a\n                href=\"https://social-network.samuraijs.com/\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                {' '}\n                here\n              </a>\n            </p>\n            <p>or use common test account credentials:</p>\n            <p>Email: free@samuraijs.com</p>\n            <p>Password: free</p>\n          </FormLabel>\n          <form onSubmit={formik.handleSubmit}>\n            <FormGroup>\n              <FormControl sx={{ mTop: 2, width: '30ch' }} variant=\"standard\">\n                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\n                <Input {...formik.getFieldProps('email')} onFocus={removeError} />\n              </FormControl>\n              {formik.touched.email && formik.errors.email ? (\n                <div className={styles.emailError}>{formik.errors.email}</div>\n              ) : null}\n\n              <FormControl sx={{ mTop: 2, width: '30ch' }} variant=\"standard\">\n                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n                <Input\n                  {...formik.getFieldProps('password')}\n                  id=\"standard-adornment-password\"\n                  type={isPassType ? 'password' : 'text'}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                      >\n                        {isPassType ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n                {formik.touched.password && formik.errors.password ? (\n                  <div className={styles.passError}>{formik.errors.password}</div>\n                ) : null}\n              </FormControl>\n\n              <FormControlLabel\n                className={styles.checkbox}\n                label=\"Remember me\"\n                control={<Checkbox />}\n                {...formik.getFieldProps('rememberMe')}\n                checked={formik.getFieldProps('rememberMe').value}\n              />\n\n              {captchaUrl && (\n                <>\n                  <img src={captchaUrl} alt=\"captchaImg\" />\n                  <FormControl sx={{ mTop: 2, width: '30ch' }} variant=\"standard\">\n                    <InputLabel htmlFor=\"standard-adornment-password\">Captcha</InputLabel>\n                    <Input {...formik.getFieldProps('captcha')} />\n                    {formik.touched.captcha && formik.errors.captcha ? (\n                      <div style={{ color: 'red' }}>{formik.errors.captcha}</div>\n                    ) : null}\n                  </FormControl>\n                </>\n              )}\n\n              <div className={styles.button}>\n                <Button\n                  style={{ marginTop: ' 1rem', marginBottom: '1rem', width: '200px' }}\n                  variant=\"contained\"\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n              </div>\n            </FormGroup>\n          </form>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n});\n","import React, { FC } from 'react';\n\nconst Photos: FC = () => <div>Photos</div>;\n\nexport default Photos;\n","import React from 'react';\n\nimport Photos from './Photos';\nimport styles from './Photos.module.scss';\n\nconst PhotosContainer = () => (\n  /* const Redirect = WithAuthRedirect(Photos) */\n  <div className={styles.content}>\n    {/* <Redirect/> */}\n    <Photos />\n  </div>\n);\n\n/* compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer); */\nexport default PhotosContainer;\n","import React from 'react';\n\nimport { ChatMessageAPIType } from '../../api/chatAPI';\nimport defaultUserImage from '../../Images/defaultUserImage.jpg';\nimport { useAppSelector } from '../../store/store';\n\nimport styles from './Message.module.scss';\n\ntype MessagePropsType = {\n  message: ChatMessageAPIType;\n  userId: number;\n};\nexport const Message = React.memo(({ message, userId }: MessagePropsType) => {\n  const myId = useAppSelector<number>(state => state.Auth.data.id);\n\n  return (\n    <div className={styles.devChatMessageBlock}>\n      <div\n        className={\n          myId === userId ? styles.myImgAndMessage : styles.someUserImgAndMessage\n        }\n      >\n        {myId === userId ? (\n          <>\n            <div\n              className={\n                myId === userId ? styles.myNameAndMessage : styles.someUserNameAndMessage\n              }\n            >\n              <div className={styles.userName}>{message.userName}</div>\n              <div>{message.message}</div>\n            </div>\n            <img style={{ marginLeft: '10px' }} src={message.photo} alt=\"chatUserPhoto\" />\n          </>\n        ) : (\n          <>\n            <img src={message.photo || defaultUserImage} alt=\"chatUserPhoto\" />\n            <div\n              className={\n                myId === userId ? styles.myNameAndMessage : styles.someUserNameAndMessage\n              }\n            >\n              <div className={styles.userName}>{message.userName}</div>\n              <div>{message.message}</div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport { useAppSelector } from '../../store/store';\n\nimport { Message } from './Message';\nimport styles from './Messages.module.scss';\n\nexport const Messages = React.memo(() => {\n  const [isAutoScroll, setIsAutoScroll] = useState(true);\n  const messages = useAppSelector(state => state.ChatPage.messages);\n  const messagesAnchorRef = useRef<HTMLDivElement>(null);\n  const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>): void => {\n    const element = e.currentTarget;\n    if (\n      Math.abs(element.scrollHeight - element.scrollTop - element.clientHeight) < 400 &&\n      !isAutoScroll\n    ) {\n      setIsAutoScroll(true);\n    } else {\n      setIsAutoScroll(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isAutoScroll) {\n      messagesAnchorRef.current?.scrollIntoView();\n    }\n  }, [messages, isAutoScroll]);\n\n  return (\n    <div className={styles.messagesBlock} onScroll={scrollHandler}>\n      {messages.map(m => (\n        <Message message={m} key={m.id} userId={m.userId} />\n      ))}\n      <div ref={messagesAnchorRef} />\n    </div>\n  );\n});\n","import React, { FC, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { TextAreaForm } from '../../components/Common/TextAreaForm/TextAreaForm';\nimport {\n  sendMessageTC,\n  startMessagesListeningTC,\n  StatusType,\n  stopMessagesListeningTC,\n} from '../../store/chatReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport { Messages } from './Messages';\n\nexport const Chat: FC = React.memo(() => {\n  const status = useAppSelector<StatusType>(state => state.ChatPage.status);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(startMessagesListeningTC());\n    return () => {\n      dispatch(stopMessagesListeningTC());\n    };\n  }, [dispatch]);\n\n  const sendMessageHandler = (message: string): (() => Promise<void>) =>\n    dispatch(sendMessageTC(message));\n\n  return (\n    <div>\n      {status === 'error' && <div>Some error occurred. Please refresh the gage</div>}\n      <>\n        <Messages />\n        <TextAreaForm\n          webSocketStatusDisabled={status !== 'ready'}\n          placeholderText=\"Press Ctrl + Enter to send message\"\n          callBack={sendMessageHandler}\n        />\n      </>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\n\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport { IconButton } from '@mui/material';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  chatMessageSelector,\n  chatStartMessageCountSelector,\n  chatStatusSelector,\n  myIDSelector,\n} from '../../components/Common/Selectors/Selectors';\nimport { setStartMessagesCountAC, StatusType } from '../../store/chatReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport { Chat } from './Chat';\nimport styles from './ChatPage.module.scss';\n\nconst ChatPage = React.memo(() => {\n  const myId = useAppSelector(myIDSelector);\n  const messages = useAppSelector(chatMessageSelector).filter(m => m.userId !== myId);\n  const status = useAppSelector<StatusType>(chatStatusSelector);\n  const startMessagesCount = useAppSelector<number>(chatStartMessageCountSelector);\n  const [isChatOpen, setIsChatOpen] = useState<boolean>(false);\n  const [startMessagesLength, setStartMessagesLength] = useState<number>(messages.length);\n  const newMessagesCount = messages.length - startMessagesCount;\n  const dispatch = useDispatch();\n\n  const collapseChat = (): void => {\n    setIsChatOpen(!isChatOpen);\n    dispatch(setStartMessagesCountAC(messages.length)); // удалим флаг новых сообщений, засинхронизировав стейт по клику на кнопку свенуть\n  };\n\n  useEffect(() => {\n    if (status === 'ready' && startMessagesLength === 0) {\n      setStartMessagesLength(messages.length);\n      dispatch(setStartMessagesCountAC(messages.length)); // записать стартовые сообещения в стейт\n    }\n  }, [status, messages, dispatch]);\n\n  return (\n    <div\n      className={isChatOpen ? styles.chatPageBlockOpen : styles.chatPageBlockCollapsed}\n    >\n      <div className={styles.chatTitle}>\n        <div>Public chat</div>\n        <div\n          className={\n            newMessagesCount > 0 && !isChatOpen\n              ? styles.messageFlag\n              : styles.noMessageFlag\n          }\n        >\n          <div>{newMessagesCount}</div>\n        </div>\n        <IconButton onClick={collapseChat} className={styles.minimizeIcon}>\n          <MinimizeIcon />\n        </IconButton>\n      </div>\n      <Chat />\n    </div>\n  );\n});\n\nexport default ChatPage;\n","import React, { useEffect, useState } from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { IconButton } from '@mui/material';\nimport { useDispatch } from 'react-redux';\n\nimport { MyProfilePhoto } from '../../../../components/Common/MyProfilePhoto/MyProfilePhoto';\nimport { deleteMyPostAC } from '../../../../store/UserPostsReducer';\n\nimport styles from './Post.module.scss';\n\nexport const maxLikesCount = 300;\ntype MyPostsPropsType = {\n  id: string;\n  message: string;\n};\nexport type LikeObjType = {\n  likeCount: number;\n  updated: boolean;\n};\n\nexport const Post = ({ id, message }: MyPostsPropsType) => {\n  const [likeObj, setLikeObj] = useState<LikeObjType>({ likeCount: 5, updated: false });\n  const dispatch = useDispatch();\n  const deletePost = (userId: string) => {\n    dispatch(deleteMyPostAC(userId));\n  };\n  const generateLike = () => {\n    const likeGenerator = Math.round(Math.random() * maxLikesCount);\n    setLikeObj({ likeCount: likeGenerator, updated: false });\n  };\n  const addLikeHandler = () => {\n    if (!likeObj.updated) {\n      setLikeObj({ likeCount: likeObj.likeCount + 1, updated: true });\n    } else {\n      setLikeObj({ likeCount: likeObj.likeCount - 1, updated: false });\n    }\n  };\n  useEffect(() => {\n    generateLike();\n  }, []);\n\n  return (\n    <div className={styles.itemWrapper}>\n      <div className={styles.avatarAndClose}>\n        <MyProfilePhoto />\n        <IconButton style={{ height: '40px' }} onClick={() => deletePost(id)}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <p>{message}</p>\n      <div className={styles.likeBlock}>\n        {likeObj.updated ? (\n          <FavoriteIcon onClick={addLikeHandler} />\n        ) : (\n          <FavoriteBorderIcon onClick={addLikeHandler} />\n        )}{' '}\n        {likeObj.likeCount}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport CloseIcon from '@mui/icons-material/Close';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { IconButton } from '@mui/material';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteUsersPostAC, UsersOnWallType } from '../../../store/UserPostsReducer';\nimport { LikeObjType, maxLikesCount } from '../MyPosts/Post/Post';\n\nimport styles from './AnyUserPosts.module.scss';\n\nconst AnyUserPost = ({\n  avatar,\n  name,\n  position,\n  postText,\n  postPhoto,\n  id,\n}: UsersOnWallType): JSX.Element => {\n  const dispatch = useDispatch();\n  const [likeObj, setLikeObj] = useState<LikeObjType>({ likeCount: 5, updated: false });\n  const generateLike = () => {\n    const likeGenerator = Math.round(Math.random() * maxLikesCount);\n    setLikeObj({ likeCount: likeGenerator, updated: false });\n  };\n  const addLikeHandler = () => {\n    if (!likeObj.updated) {\n      setLikeObj({ likeCount: likeObj.likeCount + 1, updated: true });\n    } else {\n      setLikeObj({ likeCount: likeObj.likeCount - 1, updated: false });\n    }\n  };\n  const deletePostHandler = (userId: string) => {\n    dispatch(deleteUsersPostAC(userId));\n  };\n  useEffect(() => {\n    generateLike();\n  }, []);\n  return (\n    <div className={styles.anyUserPost}>\n      <div className={styles.userWrapper}>\n        <div className={styles.userPhotoAndDescriptionBlock}>\n          <img src={avatar} alt=\"avatar\" />\n          <div className={styles.userDescription}>\n            <strong>{name}</strong>\n            <div className={styles.userPosition}>{position}</div>\n          </div>\n        </div>\n        <IconButton onClick={() => deletePostHandler(id)}>\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <p>{postText}</p>\n      {postPhoto && <img className={styles.postPhoto} src={postPhoto} alt=\"postPhoto\" />}\n\n      <div className={styles.likeBlock}>\n        {likeObj.updated ? (\n          <FavoriteIcon onClick={addLikeHandler} />\n        ) : (\n          <FavoriteBorderIcon onClick={addLikeHandler} />\n        )}{' '}\n        {likeObj.likeCount}\n      </div>\n    </div>\n  );\n};\n\nexport default AnyUserPost;\n","import React from 'react';\n\nimport { useAppSelector } from '../../../store/store';\nimport { UsersOnWallType } from '../../../store/UserPostsReducer';\n\nimport AnyUserPost from './AnyUserPost';\nimport styles from './AnyUserPosts.module.scss';\n\nconst AnyUserPosts = () => {\n  const userInfo = useAppSelector<Array<UsersOnWallType>>(\n    state => state.HardcodedUsers.anyUserPostsData,\n  );\n  const anyPostsElements = userInfo.map(post => (\n    <AnyUserPost\n      key={post.id}\n      postPhoto={post.postPhoto}\n      name={post.name}\n      id={post.id}\n      avatar={post.avatar}\n      position={post.position}\n      postText={post.postText}\n    />\n  ));\n  return <div className={styles.itemWrapper}>{anyPostsElements}</div>;\n};\n\nexport default AnyUserPosts;\n","import React from 'react';\n\nimport { TextAreaForm } from '../../components/Common/TextAreaForm/TextAreaForm';\nimport { PostType } from '../../store/ProfileReducer';\n\nimport styles from './MyPosts.module.scss';\nimport { Post } from './MyPosts/Post/Post';\n\nexport type MyPostsPropsType = {\n  postsData?: Array<PostType>;\n  callBack: (text: string) => void;\n  placeholderText: string;\n};\n\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\n  const postsElements = props.postsData\n    ?.map(p => <Post key={p.id} id={p.id} message={p.message} />)\n    .reverse();\n  return (\n    <div className={styles.postBlock}>\n      <div className={styles.myPostForm}>\n        <h5 className={styles.newPostHeader}>NEW POST</h5>\n        <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack} />\n      </div>\n      <div className={styles.posts}>{postsElements}</div>\n    </div>\n  );\n});\n","import * as Yup from 'yup';\n\nexport const freeUserId = 1079;\nexport const myUserID = 21748;\nexport const maxPictureSize = 10000000; // 10MB\nconst webSiteRegular =\n  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\n\nexport const DisplayingErrorMessagesSchema = Yup.object().shape({\n  fullName: Yup.string()\n    .min(3, 'User name must be more than 3 symbols')\n    .max(50, 'User name must be less than 50 symbols')\n    .required('Required'),\n  aboutMe: Yup.string()\n    .min(3, 'User description text must be more than 3 symbols')\n    .max(300, 'User description text must be less than 300 symbols')\n    .required('Required'),\n  lookingForAJobDescription: Yup.string()\n    .min(3, 'Job description text must be more than 3 symbols')\n    .max(300, 'Job description text must be less than 300 symbols')\n    .required('Required'),\n  contacts: Yup.object().shape({\n    facebook: Yup.lazy(value =>\n      !value\n        ? Yup.string()\n        : Yup.string().matches(\n            /(?:https:\\/\\/)?(?:www\\.)?facebook\\.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[\\w]*\\/)*([\\w]*)/,\n            'Please enter correct url',\n          ),\n    ),\n    website: Yup.string()\n      .min(0)\n      .nullable()\n      .matches(webSiteRegular, 'Please enter correct url'),\n    vk: Yup.string().matches(\n      /(?:https:\\/\\/)?[-a-zA-Z0-9@:%_+.~#?&=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&=]*)?/gi,\n      'Please enter correct vk url',\n    ),\n    twitter: Yup.string()\n      .min(0)\n      .nullable(true)\n      .matches(/@([A-Za-z0-9_]{1,15})/, 'Please enter correct twitter url'),\n    instagram: Yup.string()\n      .min(0)\n      .nullable(true)\n      .matches(\n        /(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com|instagr.am|instagr.com)\\/(\\w+)/gim,\n        'Please enter correct instagram url',\n      ),\n    youtube: Yup.string()\n      .min(0)\n      .nullable(true)\n      .matches(\n        /youtu(?:.*\\/v\\/|.*v\\|\\.be\\/)([A-Za-z0-9_-]{11})/,\n        'Please enter correct YouTube url',\n      ),\n    github: Yup.string()\n      .min(0)\n      .nullable(true)\n      .matches(\n        /(?:(?:http|https):\\/\\/)?(?:www.)?(?:github.com)\\/(\\w+)/gim,\n        'Please enter correct github url',\n      ),\n    mainLink: Yup.string().min(0).nullable(true).url(),\n  }),\n});\n","import React from 'react';\n\nimport { faFirefoxBrowser, faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons/faFacebook';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons/faGithub';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons/faGoogle';\nimport { faInstagram } from '@fortawesome/free-brands-svg-icons/faInstagram';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter';\nimport { faVk } from '@fortawesome/free-brands-svg-icons/faVk';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { profileSelector } from '../../../components/Common/Selectors/Selectors';\nimport { useAppSelector } from '../../../store/store';\n\nimport style from './ContactBlock.module.scss';\n\nexport const ContactBlock = () => {\n  const profile = useAppSelector(profileSelector);\n\n  return (\n    <div className={style.contactsBlock}>\n      <div>\n        <strong>Contacts</strong>\n      </div>\n      {profile.contacts.vk && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faVk} />\n          <a href={profile.contacts.vk}>Vk</a>\n        </div>\n      )}\n\n      {profile.contacts.instagram && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faInstagram} />\n          <a href={profile.contacts.instagram}>Instagram</a>\n        </div>\n      )}\n      {profile.contacts.youtube && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faYoutube} />\n          <a href={profile.contacts.youtube}>You tube</a>\n        </div>\n      )}\n\n      {profile.contacts.github && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faGithub} />\n          <a href={profile.contacts.github}>GitHub</a>\n        </div>\n      )}\n\n      {profile.contacts.twitter && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faTwitter} />\n          <a href={profile.contacts.twitter}>twitter</a>\n        </div>\n      )}\n      {profile.contacts.facebook && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faFacebook} />\n          <a href={profile.contacts.twitter}>faceBook</a>\n        </div>\n      )}\n      {profile.contacts.website && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faFirefoxBrowser} />\n          <a href={profile.contacts.website}>Web site</a>\n        </div>\n      )}\n      {profile.contacts.mainLink && (\n        <div className={style.contactsBlockItem}>\n          <FontAwesomeIcon className={style.icon} icon={faGoogle} />\n          <a href={profile.contacts.website}>Main link</a>\n        </div>\n      )}\n      {profile.lookingForAJobDescription && (\n        <>\n          <div>\n            <strong>Job description</strong>\n          </div>\n          <div className={style.contactsBlockItem}>\n            {profile.lookingForAJobDescription}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport chatStyles from './ChatBlock.module.scss';\n\ntype OnlineFriendType = {\n  avatar: string;\n};\nexport const ChatBlock = ({ avatar }: OnlineFriendType) => (\n  <div className={chatStyles.onlineFriendsWrapper}>\n    <img className={chatStyles.imgProfilePhoto} src={avatar} alt=\"onlineFriendAvatar\" />\n    <span className={chatStyles.OnlineDot} />\n  </div>\n);\n","import React, { ChangeEvent, useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport {\n  myIDSelector,\n  statusSelector,\n} from '../../components/Common/Selectors/Selectors';\nimport { updateUserStatusTC } from '../../store/ProfileReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport styles from './Profile.module.scss';\n\nexport const ProfileStatus = () => {\n  const dispatch = useDispatch();\n  const status = useAppSelector(statusSelector);\n  const [localStatus, setLocalStatus] = useState(status);\n  const [editMode, setEditMode] = useState<boolean>(true);\n  const userId = useAppSelector(state => state.ProfilePage.profile.userId);\n  const myID = useAppSelector(myIDSelector);\n\n  const activateEditMode = () => {\n    setLocalStatus(status);\n    setEditMode(false);\n  };\n  const deactivateEditMode = () => {\n    dispatch(updateUserStatusTC(localStatus));\n    setEditMode(true);\n  };\n  const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n    setLocalStatus(e.currentTarget.value);\n  };\n  const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      deactivateEditMode();\n    }\n  };\n\n  if (userId !== myID) {\n    return <div data-testid=\"editableDiv\">{status}</div>;\n  }\n\n  if (editMode && userId === myID && !status) {\n    return (\n      <div\n        onKeyDown={activateEditMode}\n        tabIndex={0}\n        role=\"button\"\n        className={styles.editableDiv}\n        onClick={activateEditMode}\n      >\n        Set status\n      </div>\n    );\n  }\n\n  if (editMode && userId === myID) {\n    return (\n      <div\n        tabIndex={0}\n        role=\"button\"\n        className={styles.editableDiv}\n        data-testid=\"editableMyDiv\"\n        onClick={activateEditMode}\n        onKeyDown={activateEditMode}\n      >\n        {status}\n      </div>\n    );\n  }\n  return (\n    <input\n      className={styles.input}\n      onChange={changeTitle}\n      onKeyPress={onKeyPressHandler}\n      onBlur={deactivateEditMode}\n      type=\"text\"\n      data-testid=\"input\"\n      value={localStatus}\n    />\n  );\n};\n","import React, { ChangeEvent, useRef, useState } from 'react';\n\nimport { Close } from '@mui/icons-material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport { Box, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Modal from '@mui/material/Modal/Modal';\nimport Popover from '@mui/material/Popover';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { myIDSelector } from '../../../components/Common/Selectors/Selectors';\nimport { maxPictureSize } from '../../../constants';\nimport defaultUserPhoto from '../../../Images/defaultUserImage.jpg';\nimport { setAppErrorAC } from '../../../store/AppReducer';\nimport { ProfileDataType, uploadAvatarTC } from '../../../store/ProfileReducer';\nimport { useAppSelector } from '../../../store/store';\nimport { OnlineFriendType } from '../../../store/UserPostsReducer';\nimport { ContactBlock } from '../ContactBlock/ContactBlock';\nimport { ChatBlock } from '../OnlineFriends/ChatBlock';\nimport chatStyles from '../OnlineFriends/ChatBlock.module.scss';\nimport { ProfileStatus } from '../ProfileStatus';\n\nimport styles from './ProfileInfo.module.scss';\n\ntype profileInfoPropsType = {\n  profile: ProfileDataType | undefined;\n};\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  bgcolor: '#F9F9FE',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2,\n};\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\n  const dispatch = useDispatch();\n  const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos?.large);\n  const userId = Number(useParams<'userId'>().userId);\n  const myId = useAppSelector(myIDSelector);\n  const photoRef = useRef<HTMLInputElement>(null);\n  const onlineFriends = useAppSelector<Array<OnlineFriendType>>(\n    state => state.HardcodedUsers.onlineFriends,\n  );\n\n  const [open, setOpen] = useState(false);\n  const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\n  const [fileAvatar, setFileAvatar] = useState<any>();\n  const [openPopover, setOpenPopover] = useState(false);\n  const popoverAnchor = useRef(null);\n  const show =\n    props.profile && Object.values(props.profile.contacts).every(item => item !== null);\n\n  const handleCloseModal = () => setOpen(false);\n  const handleClosePopover = () => setOpenPopover(false);\n  const handleOpenPopover = () => setOpenPopover(true);\n  const uploadPhoto = () => photoRef.current && photoRef.current.click();\n  const handleSaveAvatar = () => {\n    dispatch(uploadAvatarTC(fileAvatar));\n    handleCloseModal();\n  };\n  const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\n    const reader = new FileReader();\n    const file = e.target?.files;\n\n    if (\n      file &&\n      file[0].type &&\n      (file[0].type === 'image/png' || file[0].type === 'image/jpeg')\n    ) {\n      setFileAvatar(file[0]);\n      reader.onloadend = () => {\n        setLocalAvatar(reader.result);\n      };\n      if (file[0].size && file[0].size <= maxPictureSize) {\n        reader.readAsDataURL(file[0]);\n      } else {\n        dispatch(\n          setAppErrorAC(\n            `Your file size must be less then ${maxPictureSize / 1000000}MB 😕`,\n          ),\n        );\n      }\n    } else {\n      dispatch(\n        setAppErrorAC(\n          `Your file has not in .png .jpeg format. Please choose the right file`,\n        ),\n      );\n    }\n  };\n  const menuHandler = () => setOpen(true);\n  const onlineFriendsArr = onlineFriends.map(f => (\n    <ChatBlock key={f.id} avatar={f.avatar} />\n  ));\n  return (\n    <div className={styles.profileInfoWrapper}>\n      <div className={styles.profilePhoto}>\n        <div className={styles.avatarWrapper}>\n          {props.profile && (\n            <img src={props.profile.photos?.large ?? defaultUserPhoto} alt=\"userPhoto\" />\n          )}\n          {(userId === myId || Number.isNaN(userId)) && (\n            <button type=\"button\" className={styles.menu} onClick={menuHandler}>\n              <p>Change photo</p>\n            </button>\n          )}\n        </div>\n      </div>\n\n      <div className={styles.statusBlock}>\n        <div className={styles.profileName}>\n          {props.profile && <strong>{props.profile.fullName}</strong>}\n          {/* <img src={smallLogo} alt=\"smallLogo\"/> */}\n          <CheckCircleOutlineIcon\n            className={styles.popover}\n            ref={popoverAnchor}\n            onClick={handleOpenPopover}\n            fontSize=\"small\"\n            color={props.profile && props.profile.lookingForAJob ? 'success' : 'error'}\n          />\n        </div>\n        <div className={styles.profileStatus}>\n          <ProfileStatus />\n        </div>\n        {props.profile && (\n          <p className={styles.profileDescription}>{props.profile.aboutMe}</p>\n        )}\n      </div>\n      {show && <ContactBlock />}\n\n      <div className={chatStyles.ChatBlock}>\n        <span className={chatStyles.Title}>Chat online</span>\n        {onlineFriendsArr}\n      </div>\n      <Modal open={open} onClose={handleCloseModal}>\n        <Box sx={style}>\n          <Box>\n            <Box\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                position: 'relative',\n              }}\n            >\n              <strong>\n                <p style={{ fontSize: '20px' }}>Uploading profile photo</p>\n              </strong>\n            </Box>\n            <IconButton\n              style={{ position: 'absolute', top: '5px', right: '10px' }}\n              onClick={handleCloseModal}\n            >\n              <Close />\n            </IconButton>\n          </Box>\n          <Box\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              /* justifyContent: 'space-between', */\n              alignItems: 'center',\n            }}\n          >\n            <Box id=\"outer-container\">\n              <img\n                src={base64Avatar || userPhoto}\n                alt=\"avatar\"\n                width=\"200px\"\n                style={{ borderRadius: '8px', marginBottom: '10px' }}\n              />\n            </Box>\n\n            <Box\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                width: '200px',\n              }}\n            >\n              <input\n                type=\"file\"\n                style={{ display: 'none' }}\n                id=\"answer\"\n                ref={photoRef}\n                accept=\"image/*\"\n                onChange={onChangeAvatar}\n              />\n              <Button\n                sx={{ textTransform: 'none' }}\n                variant=\"contained\"\n                onClick={uploadPhoto}\n              >\n                Upload photo\n              </Button>\n              <Button\n                sx={{ textTransform: 'none' }}\n                variant=\"contained\"\n                onClick={handleSaveAvatar}\n              >\n                Save\n              </Button>\n            </Box>\n            <p>You can upload images in JPG or PNG format</p>\n          </Box>\n        </Box>\n      </Modal>\n      <Popover\n        open={openPopover}\n        anchorEl={popoverAnchor.current}\n        onClose={handleClosePopover}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      >\n        <Typography sx={{ p: 1 }}>\n          {props.profile && props.profile.lookingForAJob\n            ? 'In search of a job'\n            : 'Not looking for a job'}\n        </Typography>\n      </Popover>\n    </div>\n  );\n});\n","import React from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { placeholderText } from '../../components/Common/TextAreaForm/textAreaData';\nimport { useAppSelector } from '../../store/store';\nimport { addPostActionAC } from '../../store/UserPostsReducer';\nimport ChatPage from '../Chat/ChatPage';\n\nimport AnyUserPosts from './AnyUserPosts/AnyUserPosts';\nimport { MyPosts } from './MyPosts';\nimport styles from './Profile.module.scss';\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\n\nexport const ProfileFC = React.memo(() => {\n  const postsData = useAppSelector(state => state.HardcodedUsers.myPostsData);\n  const profile = useAppSelector(state => state.ProfilePage.profile);\n  const dispatch = useDispatch();\n  const addMessage = (text: string) => dispatch(addPostActionAC(text));\n\n  return (\n    <div className={styles.profileWrapper}>\n      <ProfileInfo profile={profile} />\n\n      <div className={styles.allPostsBlock}>\n        <MyPosts\n          placeholderText={placeholderText.profileAreaText}\n          callBack={addMessage}\n          postsData={postsData}\n        />\n        <AnyUserPosts />\n        <ChatPage />\n      </div>\n    </div>\n  );\n});\n","import React, { FC, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate, useParams } from 'react-router-dom';\n\nimport { PATH } from '../../App';\nimport { isLoggedInSelector } from '../../components/Common/Selectors/Selectors';\nimport { getProfileTC, getUserStatusTC } from '../../store/ProfileReducer';\nimport { useAppSelector } from '../../store/store';\n\nimport { ProfileFC } from './ProfileFC';\n\nexport const ProfileContainerFC: FC = React.memo(() => {\n  const dispatch = useDispatch();\n  let userId = Number(useParams<'userId'>().userId); // эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\n  const isLoggedIn = useAppSelector(isLoggedInSelector);\n  const myUserID = useAppSelector(state => state.Auth.data.id);\n  if (Number.isNaN(userId)) {\n    userId = myUserID;\n  }\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getProfileTC(userId));\n      dispatch(getUserStatusTC(userId));\n    }\n  }, [userId, dispatch]);\n\n  if (!isLoggedIn) {\n    return <Navigate to={PATH.LOGIN} />;\n  }\n  return <ProfileFC />;\n});\n","import React, { ChangeEvent } from 'react';\n\nimport Button from '@mui/material/Button';\nimport Pagination from '@mui/material/Pagination';\nimport { useNavigate } from 'react-router-dom';\n\nimport userPhoto from '../../Images/defaultUserImage.jpg';\nimport { UserType } from '../../store/UsersReducer';\n\nimport style from './users.module.scss';\n\ntype usersPropsType = {\n  totalUserCount: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChanged: (pageNumber: number) => void;\n  users: UserType[];\n  followingInProgress: Array<string>;\n  followTC: (userID: string) => void;\n  unfollowTC: (userID: string) => void;\n};\n\nexport const Users = ({\n  users,\n  totalUserCount,\n  currentPage,\n  pageSize,\n  onPageChanged,\n  followingInProgress,\n  unfollowTC,\n  followTC,\n}: usersPropsType) => {\n  const navigate = useNavigate();\n  const pagesCount = Math.ceil(totalUserCount / pageSize);\n  const defaultUserPhoto: string = userPhoto;\n  const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\n    onPageChanged(page);\n  };\n\n  return (\n    <div className={style.usersWrapper}>\n      <Pagination\n        color=\"primary\"\n        onChange={onPageHandler}\n        size=\"small\"\n        variant=\"outlined\"\n        shape=\"rounded\"\n        count={pagesCount}\n        page={currentPage}\n        data-testid=\"pagination\"\n      />\n      {users.map(user => (\n        <div key={user.id} data-testid=\"userArr\">\n          <div className={style.usersBlock}>\n            <div className={style.avatarAndFollowButton}>\n              <div\n                onKeyUp={() => navigate(`/profile/${user.id}`)}\n                tabIndex={0}\n                role=\"button\"\n                onClick={() => navigate(`/profile/${user.id}`)}\n              >\n                <img\n                  className={style.avatar}\n                  src={user.photos.small ? user.photos.small : defaultUserPhoto}\n                  alt=\"user\"\n                />\n              </div>\n              <span>\n                {user.followed ? (\n                  <Button\n                    disabled={followingInProgress.some(id => id === user.id)}\n                    onClick={() => {\n                      // ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\n                      unfollowTC(user.id);\n                    }}\n                  >\n                    Unfollow\n                  </Button>\n                ) : (\n                  <Button\n                    disabled={followingInProgress.some(id => id === user.id)}\n                    onClick={() => {\n                      // ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\n                      // thunk creator нужен для связи DAL и BLL минуя UI\n                      followTC(user.id);\n                    }}\n                  >\n                    Follow\n                  </Button>\n                )}\n              </span>\n            </div>\n            <div className={style.nameAndStatus}>\n              <h3 className={style.name}>\n                <div>{user.name}</div>\n              </h3>\n              <div className={style.status}>{`Status:  ${\n                user.status ?? 'no status'\n              }`}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { FC, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { Preloader } from '../../components/Common/Preloader/Preloader';\nimport {\n  currentPageSelector,\n  followingArrSelector,\n  isFetchingSelector,\n  pageSizeSelector,\n  totalUserCountSelector,\n  usersSelector,\n} from '../../components/Common/Selectors/Selectors';\nimport { useAppSelector } from '../../store/store';\nimport { follow, getUsersTC, onPageChangedTC, unfollow } from '../../store/UsersReducer';\n\nimport { Users } from './Users';\n\nconst UserContainerFC: FC = React.memo(() => {\n  const dispatch = useDispatch();\n  const users = useAppSelector(usersSelector);\n  const isFetching = useAppSelector(isFetchingSelector);\n  const pageSize = useAppSelector(pageSizeSelector);\n  const currentPage = useAppSelector(currentPageSelector);\n  const totalUserCount = useAppSelector(totalUserCountSelector);\n  const followingArr = useAppSelector(followingArrSelector);\n  // let Redirect= WithAuthRedirect(Users);\n\n  useEffect(() => {\n    dispatch(getUsersTC());\n  }, [currentPage, pageSize, dispatch]);\n\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(onPageChangedTC(pageSize, pageNumber));\n  };\n\n  const unfollowTC = (userID: string) => {\n    dispatch(unfollow(userID));\n  };\n\n  const followTC = (userID: string) => {\n    dispatch(follow(userID));\n  };\n\n  return (\n    <>\n      {isFetching ? (\n        <Preloader />\n      ) : (\n        <Users\n          onPageChanged={onPageChanged}\n          currentPage={currentPage}\n          totalUserCount={totalUserCount}\n          pageSize={pageSize}\n          users={users}\n          followTC={followTC}\n          unfollowTC={unfollowTC}\n          followingInProgress={followingArr}\n        />\n      )}\n    </>\n  );\n});\nexport default UserContainerFC;\n","import React, { FC, useEffect } from 'react';\n\nimport './App.scss';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes, Navigate } from 'react-router-dom';\n\nimport { Preloader } from './components/Common/Preloader/Preloader';\nimport { isInitializedSelector } from './components/Common/Selectors/Selectors';\nimport { ErrorSnackBar } from './components/ErrorSnackBar/ErrorSnackBar';\nimport withSuspense from './components/HOC/withSuspense';\nimport PrivateRoutes from './components/PrivateRoutes';\nimport { EditProfile } from './Pages/EditProfile/EditProfile';\nimport { Error404 } from './Pages/Error404/Error404';\nimport { EventsContainer } from './Pages/Events/EventsContainer';\nimport { Footer } from './Pages/Footer/Footer';\nimport { Login } from './Pages/Login/Login';\nimport PhotosContainer from './Pages/Photos/PhotosContainer';\nimport { ProfileContainerFC } from './Pages/Profile/ProfileContainerFC';\nimport UsersContainerFC from './Pages/Users/UsersContainerFC';\nimport { RequestStatusType } from './store/AppReducer';\nimport { initializeAppTC } from './store/AuthReducer';\nimport { useAppSelector } from './store/store';\n\nconst SuspendedDialogContainer = React.lazy(\n  () => import('./Pages/Dialogs/DialogContainerFC'),\n);\n\nexport const PATH = {\n  HOME: '/',\n  LOGIN: '/login',\n  PROFILE: '/profile',\n  USERS: '/users',\n  ERROR404: '/404',\n  ANY_ROUTE: '*',\n  DIALOGS: '/dialogs',\n  EVENTS: '/events',\n  PHOTOS: '/photos',\n  EDIT_PROFILE: '/edit_profile',\n};\n\nconst App: FC = () => {\n  const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\n  const dispatch = useDispatch();\n  const isInitialized = useAppSelector(isInitializedSelector);\n\n  useEffect(() => {\n    dispatch(initializeAppTC());\n  }, [dispatch]);\n\n  if (!isInitialized) {\n    return <Preloader />;\n  }\n  return (\n    <div className=\"App\">\n      <main className=\"mainContent\">\n        {appStatus === 'loading' && <Preloader />}\n        <Routes>\n          <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}`} />} />\n          <Route element={<PrivateRoutes />}>\n            <Route path={`${PATH.PROFILE}`} element={<ProfileContainerFC />} />\n            <Route path={`${PATH.PROFILE}/:userId`} element={<ProfileContainerFC />} />\n            <Route\n              path={PATH.DIALOGS}\n              element={withSuspense(SuspendedDialogContainer)({})}\n            />\n            <Route path={PATH.USERS} element={<UsersContainerFC />} />\n            <Route path={PATH.EDIT_PROFILE} element={<EditProfile />} />\n          </Route>\n          <Route path={PATH.LOGIN} element={<Login />} />\n          <Route path={PATH.EVENTS} element={<EventsContainer />} />\n          <Route path={PATH.PHOTOS} element={<PhotosContainer />} />\n          <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404} />} />\n          <Route path={`${PATH.ERROR404}`} element={<Error404 />} />\n        </Routes>\n        <ErrorSnackBar />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.scss';\nimport React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store/store';\n\n// @ts-ignore\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import axios, { AxiosResponse } from 'axios';\n\nimport { LoginParamsType } from '../store/AuthReducer';\nimport { ProfileDataType } from '../store/ProfileReducer';\nimport { UsersPageType } from '../store/UsersReducer';\n\nexport const instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    'API-KEY': 'c3728aab-6f62-411f-9e90-c03d8ff7b899',\n  },\n});\nexport type AuthDataType = {\n  id: number;\n  email: string;\n  login: string;\n};\nexport type RespType<T = {}> = {\n  resultCode: 0;\n  data: T;\n  fieldsErrors: Array<string>;\n  messages: Array<string>;\n};\n\nexport const userAPI = {\n  getUsers(currentPage: number, pageSize: number) {\n    return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userID: number | null) {\n    return instance.get<ProfileDataType>(`profile/${userID}`);\n  },\n  getStatus(userID: number | null) {\n    return instance.get<AxiosResponse<RespType>, any>(`profile/status/${userID}`);\n  },\n  updateStatus(status: string | null) {\n    return instance.put<AxiosResponse<RespType>, any>(`profile/status`, { status });\n  },\n  uploadAvatar(photoFile: File) {\n    const formData = new FormData();\n    formData.append('image', photoFile);\n    return instance.put<RespType<{ photos: { small: ''; large: '' } }>>(\n      `profile/photo`,\n      formData,\n      {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      },\n    );\n  },\n  updateProfile(profile: ProfileDataType) {\n    return instance.put<AxiosResponse<RespType>, any>(`profile`, { ...profile });\n  },\n};\n\nexport const authAPI = {\n  me() {\n    return instance.get<RespType<AuthDataType>>(`auth/me`);\n  },\n  follow(userID: string | undefined) {\n    return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\n  },\n  unfollow(userID: string | undefined) {\n    return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\n  },\n  login(data: LoginParamsType) {\n    return instance.post<RespType<AuthDataType>>(`auth/login`, data);\n  },\n  logout() {\n    return instance.delete<RespType>('/auth/login');\n  },\n  getFollowers(userID: string | undefined) {\n    return instance.get(`follow/${userID}`);\n  },\n};\nexport const securityAPI = {\n  captcha() {\n    return instance.get<{ url: string | null }>(`/security/get-captcha-url`);\n  },\n};\n","import { profileAPI } from '../api/api';\nimport {\n  handleNetworkError,\n  handleServerAppError,\n  handleServerNetworkError,\n} from '../utils/error.utils';\n\nimport { setAppStatusAC } from './AppReducer';\nimport { setMyProfileAC } from './AuthReducer';\nimport { AppStoreType, AppThunkDispatch } from './store';\n\n// types\nenum ACTIONS_TYPE {\n  SET_PROFILE = 'PROFILE/SET-PROFILE',\n  SAVE_MY_PROFILE_PHOTO = 'PROFILE/SAVE-MY-PROFILE_PHOTO',\n  UPDATE_NEW_POST_TEXT = 'PROFILE/UPDATE-NEW-POST-TEXT',\n  SET_SOME_USER_PROFILE = 'PROFILE/SET-SOME-USER-PROFILE',\n  SET_STATUS = 'PROFILE/SET-STATUS',\n}\n\nexport type ProfileActionsType =\n  | ReturnType<typeof updateNewPostTextAC>\n  | ReturnType<typeof setUserProfileAC>\n  | ReturnType<typeof savePhotoAC>\n  | ReturnType<typeof setStatusAC>;\n\nexport type PostTextType = {\n  text: string;\n};\nexport type ProfilePageType = {\n  profile: ProfileDataType;\n  status: string;\n};\nexport type PostType = {\n  id: string;\n  message: string;\n  likesCount: number;\n};\nexport type UserProfileContactType = {\n  facebook: string;\n  website: string;\n  vk: string;\n  twitter: string;\n  instagram: string;\n  youtube: string;\n  github: string;\n  mainLink: string;\n};\nexport type userProfilePhotosType = {\n  small: string;\n  large: string;\n};\nexport type ProfileDataType = {\n  userId: number;\n  aboutMe?: string;\n  lookingForAJob?: boolean;\n  lookingForAJobDescription?: string;\n  fullName?: string;\n  contacts: Partial<UserProfileContactType>;\n  photos?: userProfilePhotosType;\n};\n\n// actions\nexport const updateNewPostTextAC = (text: PostTextType) =>\n  ({ type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text } as const);\nexport const setUserProfileAC = (profile: ProfileDataType) =>\n  ({\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\n    profile,\n  } as const);\nexport const savePhotoAC = (photos: userProfilePhotosType) =>\n  ({\n    type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO,\n    photos,\n  } as const);\nexport const setStatusAC = (status: string) =>\n  ({ type: ACTIONS_TYPE.SET_STATUS, status } as const);\n\nconst initialState: ProfilePageType = {\n  status: '',\n  profile: {\n    userId: 0,\n    fullName: '',\n    lookingForAJob: true,\n    lookingForAJobDescription: '',\n    aboutMe: '',\n    contacts: {\n      facebook: '',\n      github: '',\n      instagram: '',\n      mainLink: '',\n      twitter: '',\n      vk: '',\n      website: '',\n      youtube: '',\n    },\n    photos: {\n      small: '',\n      large: '',\n    },\n  },\n};\nexport const profileReducer = (\n  state: ProfilePageType = initialState,\n  action: ProfileActionsType,\n): ProfilePageType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\n      return { ...state, profile: action.profile };\n    case ACTIONS_TYPE.SET_STATUS:\n      return { ...state, status: action.status };\n    case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\n      return { ...state, profile: { ...state.profile, photos: action.photos } };\n    default:\n      return state;\n  }\n};\n// thunks\nexport const getProfileTC =\n  (userId: number | null, isMyProfile?: boolean) =>\n  async (dispatch: AppThunkDispatch) => {\n    dispatch(setAppStatusAC('loading'));\n    try {\n      const res = await profileAPI.getProfile(userId);\n      if (isMyProfile) {\n        dispatch(setMyProfileAC(res.data));\n      } else {\n        dispatch(setUserProfileAC(res.data));\n      }\n      dispatch(setAppStatusAC('succeeded'));\n    } catch (error: any) {\n      handleNetworkError(error, dispatch);\n    }\n  };\n\nexport const getUserStatusTC =\n  (userId: number | null) => async (dispatch: AppThunkDispatch) => {\n    dispatch(setAppStatusAC('loading'));\n\n    try {\n      const res = await profileAPI.getStatus(userId);\n      if (res.status === 200) {\n        dispatch(setStatusAC(res.data));\n        dispatch(setAppStatusAC('succeeded'));\n      } else {\n        handleServerAppError(res.data, dispatch);\n      }\n    } catch (error: any) {\n      console.log('Error when you try get user status', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\n\nexport const updateUserStatusTC =\n  (status: string) => async (dispatch: AppThunkDispatch) => {\n    dispatch(setAppStatusAC('loading'));\n\n    try {\n      const res = await profileAPI.updateStatus(status);\n      if (res.data.resultCode === 0) {\n        dispatch(setStatusAC(status));\n        dispatch(setAppStatusAC('succeeded'));\n      } else {\n        handleServerAppError(res.data, dispatch);\n      }\n    } catch (error: any) {\n      console.log('Error when you try update user status', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\n\nexport const uploadAvatarTC =\n  (photoFile: File) =>\n  async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\n    dispatch(setAppStatusAC('loading'));\n    const userId = getState().Auth.data.id;\n\n    try {\n      const res = await profileAPI.uploadAvatar(photoFile);\n      if (res.data.resultCode === 0) {\n        dispatch(setAppStatusAC('succeeded'));\n        await dispatch(getProfileTC(userId));\n      } else {\n        handleServerAppError(res.data, dispatch);\n      }\n    } catch (error: any) {\n      console.log('Error when you try upload avatar', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\nexport const updateProfileTC =\n  (profile: ProfileDataType) =>\n  async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\n    dispatch(setAppStatusAC('loading'));\n\n    const userId = getState().Auth.data.id;\n    try {\n      const res = await profileAPI.updateProfile(profile);\n      if (res.data.resultCode === 0) {\n        await dispatch(getProfileTC(userId, true));\n        dispatch(setAppStatusAC('succeeded'));\n      } else {\n        handleServerAppError(res.data, dispatch);\n      }\n    } catch (error: any) {\n      console.log('Error when you try update profile', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\n","import { authAPI, AuthDataType, securityAPI } from '../api/api';\nimport {\n  handleNetworkError,\n  handleServerAppError,\n  handleServerNetworkError,\n} from '../utils/error.utils';\n\nimport { setAppStatusAC } from './AppReducer';\nimport { getProfileTC, ProfileDataType } from './ProfileReducer';\nimport { AppThunkDispatch } from './store';\n\n// types\nexport enum ACTIONS_TYPE {\n  SET_IS_LOGGED_IN = 'AUTH/SET-IS-LOGGED-IN',\n  SET_IS_INITIALIZED = 'AUTH/SET-IS-INITIALIZED',\n  SET_AUTH_DATA = 'AUTH/SET-AUTH-DATA',\n  GET_CAPTCHA = 'AUTH/GET-CAPTCHA',\n  SET_AUTH_PROFILE_DATA = 'AUTH/SET-AUTH-PROFILE-DATA',\n}\n\nexport type AuthActionsType =\n  | ReturnType<typeof setIsLoggedInAC>\n  | ReturnType<typeof setInitializedAC>\n  | ReturnType<typeof setAuthProfileAC>\n  | ReturnType<typeof getCaptchaAC>\n  | ReturnType<typeof setMyProfileAC>;\n\nexport type LoginParamsType = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  captcha: string | null;\n};\n\ntype InitialStateType = {\n  data: AuthDataType;\n  isInitialized: boolean;\n  isLoggedIn: boolean;\n  captchaUrl: null | string;\n  myProfile: undefined | ProfileDataType;\n};\n\nconst initialState: InitialStateType = {\n  data: {\n    id: 0,\n    email: '',\n    login: '',\n  },\n  isInitialized: false,\n  isLoggedIn: false,\n  captchaUrl: null,\n  myProfile: undefined as undefined | ProfileDataType,\n};\n\n// reducer\nexport const authReducer = (\n  state: InitialStateType = initialState,\n  action: AuthActionsType,\n): InitialStateType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.SET_IS_LOGGED_IN:\n      return { ...state, isLoggedIn: action.isLoggedIn };\n    case ACTIONS_TYPE.SET_IS_INITIALIZED:\n      return { ...state, isInitialized: action.isInitialized };\n    case ACTIONS_TYPE.SET_AUTH_DATA:\n      return { ...state, data: action.data };\n    case ACTIONS_TYPE.GET_CAPTCHA:\n      return { ...state, captchaUrl: action.captcha };\n    case ACTIONS_TYPE.SET_AUTH_PROFILE_DATA:\n      return { ...state, myProfile: action.profile };\n    default:\n      return state;\n  }\n};\n// action creators\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\n  ({ type: ACTIONS_TYPE.SET_IS_LOGGED_IN, isLoggedIn } as const);\nexport const setInitializedAC = (isInitialized: boolean) =>\n  ({ type: ACTIONS_TYPE.SET_IS_INITIALIZED, isInitialized } as const);\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\n  ({ type: ACTIONS_TYPE.SET_AUTH_DATA, data: profileData } as const);\nexport const getCaptchaAC = (captcha: string | null) =>\n  ({ type: ACTIONS_TYPE.GET_CAPTCHA, captcha } as const);\nexport const setMyProfileAC = (profile: ProfileDataType) =>\n  ({\n    type: ACTIONS_TYPE.SET_AUTH_PROFILE_DATA,\n    profile,\n  } as const);\n\n// thunks\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\n  try {\n    const res = await authAPI.me();\n    if (res.data.resultCode === 0) {\n      dispatch(setAuthProfileAC(res.data.data));\n      await dispatch(getProfileTC(res.data.data.id, true)); // этот запрос делается, чтобы записать мои данные в отдельный стейт\n      dispatch(setIsLoggedInAC(true));\n    } else {\n      dispatch(setAppStatusAC('failed'));\n    }\n  } catch (error: any) {\n    console.log('Error when you try initialize app', error);\n    handleNetworkError(error, dispatch);\n  } finally {\n    dispatch(setInitializedAC(true));\n  }\n};\n\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\n  const res = await authAPI.logout();\n  try {\n    if (res.data.resultCode === 0) {\n      dispatch(setIsLoggedInAC(false));\n    } else {\n      handleServerAppError(res.data, dispatch);\n    }\n  } catch (error: any) {\n    console.log('Error when you try to logout', error);\n    handleServerNetworkError(error, dispatch);\n  }\n};\n\nexport const getCaptchaTC = () => async (dispatch: AppThunkDispatch) => {\n  const res = await securityAPI.captcha();\n  try {\n    dispatch(getCaptchaAC(res.data.url));\n  } catch (error: any) {\n    console.log('Error when you try to logout', error);\n    handleServerNetworkError(error, dispatch);\n  }\n};\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\n  try {\n    const res = await authAPI.login(data);\n    if (res.data.resultCode === 0) {\n      dispatch(setIsLoggedInAC(true));\n      dispatch(getCaptchaAC(null));\n      dispatch(await initializeAppTC());\n    } else {\n      if (res.data.resultCode === 10) {\n        dispatch(await getCaptchaTC());\n      }\n      handleServerAppError(res.data, dispatch);\n    }\n  } catch (error: any) {\n    console.log('Error when you try to login', error);\n    handleServerNetworkError(error, dispatch);\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"AnyUserPosts_itemWrapper__1a-L3\",\"anyUserPost\":\"AnyUserPosts_anyUserPost__36NTC\",\"userWrapper\":\"AnyUserPosts_userWrapper__1SuFd\",\"userPhotoAndDescriptionBlock\":\"AnyUserPosts_userPhotoAndDescriptionBlock__16URh\",\"userDescription\":\"AnyUserPosts_userDescription__9rICy\",\"userPosition\":\"AnyUserPosts_userPosition__3sBI1\",\"postPhoto\":\"AnyUserPosts_postPhoto__2HKUc\",\"likeBlock\":\"AnyUserPosts_likeBlock__1g8gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"devChatMessageBlock\":\"Message_devChatMessageBlock__3_uOl\",\"myImgAndMessage\":\"Message_myImgAndMessage__NhvVY\",\"someUserImgAndMessage\":\"Message_someUserImgAndMessage__34Iu4\",\"myNameAndMessage\":\"Message_myNameAndMessage__34b1v\",\"someUserNameAndMessage\":\"Message_someUserNameAndMessage__1Ep3m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__7u0G1\",\"profilePhoto\":\"ProfileInfo_profilePhoto__1Z3hR\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__3-ZYX\",\"menu\":\"ProfileInfo_menu__31uyN\",\"statusBlock\":\"ProfileInfo_statusBlock__YVqts\",\"profileName\":\"ProfileInfo_profileName__32WMW\",\"popover\":\"ProfileInfo_popover__H9pwB\",\"profileStatus\":\"ProfileInfo_profileStatus__34d8T\",\"profileDescription\":\"ProfileInfo_profileDescription__3_rAm\",\"modalMainBox\":\"ProfileInfo_modalMainBox__1USPE\",\"avatarBlock\":\"ProfileInfo_avatarBlock__CjmwA\",\"avatarImg\":\"ProfileInfo_avatarImg__3Lc0_\",\"iconUpload\":\"ProfileInfo_iconUpload__1iiq6\"};","import { StatusType } from '../store/chatReducer';\n// types\nexport type ChatMessageAPIType = {\n  message: string;\n  photo: string;\n  userId: number;\n  userName: string;\n};\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void;\ntype StatusChangedSubscriberType = (status: StatusType) => void;\nconst subscribers = {\n  messageReceived: [] as MessagesReceivedSubscriberType[],\n  statusChanged: [] as StatusChangedSubscriberType[],\n};\n\nexport type EventNamesType = 'messageReceived' | 'statusChanged';\n\nlet isShowCloseAlert = true;\nlet ws: WebSocket | null = null;\nlet alertCounter = false;\nconst notifySubscribersAboutStatus = (status: StatusType) =>\n  subscribers.statusChanged.forEach(s => s(status));\nconst openHandler = () => {\n  if (alertCounter) {\n    alert('Internet connection was restored');\n  }\n  notifySubscribersAboutStatus('ready');\n};\nconst errorHandler = () => {\n  notifySubscribersAboutStatus('error');\n};\nconst closeHandler = () => {\n  if (isShowCloseAlert) {\n    alert('Internet connection was interrupted');\n    isShowCloseAlert = false;\n  }\n  notifySubscribersAboutStatus('pending');\n\n  setTimeout(createChannel, 3000);\n  alertCounter = true;\n};\nconst messageHandler = (e: MessageEvent) => {\n  const newMessages = JSON.parse(e.data);\n  subscribers.messageReceived.forEach(s => s(newMessages));\n};\nconst cleanUp = () => {\n  ws?.removeEventListener('close', closeHandler); // (проверка на \"если вед сокет был, то удалим\") при реконекте удаляем подписчик на старый веб сокет\n  ws?.removeEventListener('message', messageHandler);\n  ws?.removeEventListener('open', openHandler);\n  ws?.removeEventListener('error', errorHandler);\n};\nexport function createChannel() {\n  cleanUp();\n  ws?.close(); // при реконекте закрываем старый веб сокет\n  ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\n  notifySubscribersAboutStatus('pending');\n  ws.addEventListener('close', closeHandler);\n  ws.addEventListener('message', messageHandler);\n  ws.addEventListener('open', openHandler);\n  ws.addEventListener('error', errorHandler);\n}\n\nexport const chatAPI = {\n  subscribe(\n    eventName: EventNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType,\n  ) {\n    // @ts-ignore\n    subscribers[eventName].push(callback);\n    return () => {\n      // @ts-ignore\n      subscribers[eventName] = subscribers[eventName].filter(s => s !== callback);\n    };\n  },\n  unSubscribe(\n    eventName: EventNamesType,\n    callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType,\n  ) {\n    // @ts-ignore\n    subscribers[eventName] = subscribers[eventName].filter(s => s !== callback);\n  },\n  sendMessage(message: string) {\n    ws?.send(message);\n  },\n  start() {\n    createChannel();\n  },\n  stop() {\n    subscribers.messageReceived = [];\n    subscribers.statusChanged = [];\n    cleanUp();\n    ws?.close();\n  },\n};\n","import { Dispatch } from 'redux';\nimport { v1 } from 'uuid';\n\nimport { chatAPI, ChatMessageAPIType } from '../api/chatAPI';\n\nimport { AppThunkDispatch } from './store';\n\n// types\nexport enum ACTIONS_TYPE {\n  SET_MESSAGES = 'CHAT/SET-MESSAGES',\n  SAVE_MESSAGES_COUNT = 'CHAT/SAVE-MESSAGES-COUNT',\n  CHANGE_STATUS = 'CHAT/CHANGE-STATUS',\n}\n\nexport type StatusType = 'pending' | 'ready' | 'error';\nexport type ChatActionsType =\n  | ReturnType<typeof setMessagesAC>\n  | ReturnType<typeof changeStatusAC>\n  | ReturnType<typeof setStartMessagesCountAC>;\n\nexport type ChatMessageType = ChatMessageAPIType & { id: string };\n\ntype InitialStateType = {\n  messages: ChatMessageType[];\n  startMessagesCount: number;\n  status: StatusType;\n};\n\nconst initialState: InitialStateType = {\n  messages: [] as Array<ChatMessageType>,\n  startMessagesCount: 0,\n  status: 'pending',\n};\n\n// reducer\nexport const chatReducer = (\n  state: InitialStateType = initialState,\n  action: ChatActionsType,\n): InitialStateType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.SET_MESSAGES:\n      if (action.messages.length === 1) {\n        return {\n          ...state,\n          messages: [\n            ...state.messages,\n            ...action.messages.map(m => ({ ...m, id: v1() })),\n          ] /* .filter((m, index, arr) => index >= arr.length - 100) */,\n        };\n      }\n      return {\n        ...state,\n        messages: action.messages.map(m => ({ ...m, id: v1() })),\n      };\n    case ACTIONS_TYPE.CHANGE_STATUS:\n      return {\n        ...state,\n        status: action.status,\n      };\n    case ACTIONS_TYPE.SAVE_MESSAGES_COUNT:\n      return {\n        ...state,\n        startMessagesCount: action.startMessagesCount,\n      };\n    default:\n      return state;\n  }\n};\n// action creators\n\nexport const setMessagesAC = (messages: ChatMessageAPIType[]) =>\n  ({ type: ACTIONS_TYPE.SET_MESSAGES, messages } as const);\nexport const setStartMessagesCountAC = (startMessagesCount: number) =>\n  ({ type: ACTIONS_TYPE.SAVE_MESSAGES_COUNT, startMessagesCount } as const);\nexport const changeStatusAC = (status: StatusType) =>\n  ({ type: ACTIONS_TYPE.CHANGE_STATUS, status } as const);\n\n// thunks\n\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null;\n\nconst newMessageHandlerCreator = (\n  dispatch: Dispatch,\n): ((messages: ChatMessageAPIType[]) => void) => {\n  if (_newMessageHandler === null) {\n    // это мемоизация\n    _newMessageHandler = messages => {\n      dispatch(setMessagesAC(messages));\n    };\n  }\n  return _newMessageHandler;\n};\n\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null;\n\nconst statusChangedHandlerCreator = (\n  dispatch: Dispatch,\n): ((status: StatusType) => void) => {\n  if (_statusChangedHandler === null) {\n    // это мемоизация\n    _statusChangedHandler = status => dispatch(changeStatusAC(status));\n  }\n  return _statusChangedHandler;\n};\nexport const startMessagesListeningTC = () => async (dispatch: AppThunkDispatch) => {\n  try {\n    chatAPI.start();\n    chatAPI.subscribe('messageReceived', newMessageHandlerCreator(dispatch));\n    chatAPI.subscribe('statusChanged', statusChangedHandlerCreator(dispatch));\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const stopMessagesListeningTC = () => async (dispatch: AppThunkDispatch) => {\n  try {\n    chatAPI.unSubscribe('messageReceived', newMessageHandlerCreator(dispatch));\n    chatAPI.unSubscribe('statusChanged', statusChangedHandlerCreator(dispatch));\n    chatAPI.stop();\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const sendMessageTC = (message: string) => async () => {\n  try {\n    chatAPI.sendMessage(message);\n  } catch (e) {\n    console.log(e);\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"login_loginWrapper__2tuy6\",\"login\":\"login_login__1VMOr\",\"h2\":\"login_h2__37Ocr\",\"newPassTextFields\":\"login_newPassTextFields__10SKw\",\"textFields\":\"login_textFields__3Ui3E\",\"emailError\":\"login_emailError__1RAOW\",\"passError\":\"login_passError__-3ZUH\",\"checkbox\":\"login_checkbox__1EgJR\",\"button\":\"login_button__2wXv-\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","import { v1 } from 'uuid';\n\nimport postPhoto from '../Images/Post photo.png';\nimport user1 from '../Images/Users/user-1.jpg';\nimport user2 from '../Images/Users/user-2.jpg';\nimport user3 from '../Images/Users/user-3.jpg';\nimport user4 from '../Images/Users/user-4.jpg';\nimport user5 from '../Images/Users/user-5.jpg';\nimport user6 from '../Images/Users/user-6.jpg';\nimport user7 from '../Images/Users/user-7.jpg';\nimport user8 from '../Images/Users/user-8.jpg';\nimport user9 from '../Images/Users/user-9.jpg';\n\nimport { PostType } from './ProfileReducer';\n\nexport type OnlineFriendType = {\n  id: string;\n  avatar: string;\n};\n\nenum ACTIONS_TYPE {\n  ADD_POST = 'PROFILE/ADD-POST',\n  DELETE_MY_POST = 'PROFILE/DELETE-MY-POST',\n  DELETE_USERS_POST = 'PROFILE/DELETE-USERS-POST',\n}\n\nexport type UsersOnWallType = {\n  id: string;\n  avatar: string;\n  name: string;\n  position: string;\n  postText: string;\n  postPhoto: string | undefined;\n};\nexport type ProfileActionsType =\n  | ReturnType<typeof addPostActionAC>\n  | ReturnType<typeof deleteMyPostAC>\n  | ReturnType<typeof deleteUsersPostAC>;\n\nexport type PostsType = {\n  onlineFriends: Array<OnlineFriendType>;\n  anyUserPostsData: Array<UsersOnWallType>;\n  myPostsData: Array<PostType>;\n};\nconst initialState: PostsType = {\n  myPostsData: [\n    { id: v1(), message: 'I want to be a serious frontend developer.', likesCount: 0 },\n  ],\n  onlineFriends: [\n    { id: v1(), avatar: user1 },\n    { id: v1(), avatar: user2 },\n    { id: v1(), avatar: user3 },\n    { id: v1(), avatar: user4 },\n    { id: v1(), avatar: user5 },\n    { id: v1(), avatar: user6 },\n    { id: v1(), avatar: user7 },\n    { id: v1(), avatar: user8 },\n    { id: v1(), avatar: user9 },\n  ],\n  anyUserPostsData: [\n    {\n      id: v1(),\n      avatar: user5,\n      name: 'Theresa Steward',\n      position: 'iOS developer',\n      postPhoto: undefined,\n      postText:\n        'What did the Dursleys care if Harry lost his place on the House Quidditch team because he hadn’t practiced all summer? ' +\n        'What was it to the Dursleys if Harry went back to school without any of his homework done? ' +\n        'The Dursleys were what wizards called Muggles (not a drop of magical blood in their veins).',\n    },\n    {\n      id: v1(),\n      avatar: user4,\n      name: 'Kyle Fisher',\n      position: 'Product manager',\n      postPhoto,\n      postText: \"How's your day going, guys?\",\n    },\n    {\n      id: v1(),\n      avatar: user7,\n      name: 'Audrey Alexander',\n      position: 'Android developer',\n      postPhoto: undefined,\n      postText:\n        'The bun runs along the road and meets a wolf. «Little bun, little bun, I want to eat you!» says the wolf. ' +\n        '«I ran away from Grandfather, I ran away from Grandmother, I ran away from the hare. ' +\n        'And I can run away from you, grey wolf!» says the bun and runs away.',\n    },\n  ],\n};\nconst UserPostsReducer = (\n  state: PostsType = initialState,\n  action: ProfileActionsType,\n) => {\n  switch (action.type) {\n    case ACTIONS_TYPE.ADD_POST:\n      return {\n        ...state,\n        myPostsData: [\n          ...state.myPostsData,\n          { id: v1(), message: action.message, likesCount: 0 },\n        ],\n      };\n    case ACTIONS_TYPE.DELETE_MY_POST:\n      return {\n        ...state,\n        myPostsData: state.myPostsData.filter(post => post.id !== action.id),\n      };\n    case ACTIONS_TYPE.DELETE_USERS_POST:\n      return {\n        ...state,\n        anyUserPostsData: state.anyUserPostsData.filter(post => post.id !== action.id),\n      };\n    default:\n      return state;\n  }\n};\n\n// actions\nexport const addPostActionAC = (message: string) =>\n  ({ type: ACTIONS_TYPE.ADD_POST, message } as const);\nexport const deleteMyPostAC = (id: string) =>\n  ({ type: ACTIONS_TYPE.DELETE_MY_POST, id } as const);\nexport const deleteUsersPostAC = (id: string) =>\n  ({ type: ACTIONS_TYPE.DELETE_USERS_POST, id } as const);\n\nexport default UserPostsReducer;\n","export default __webpack_public_path__ + \"static/media/Post photo.0bd8ec12.png\";","export default __webpack_public_path__ + \"static/media/user-1.bad1de9b.jpg\";","export default __webpack_public_path__ + \"static/media/user-2.39d014b5.jpg\";","export default __webpack_public_path__ + \"static/media/user-3.5c342bb7.jpg\";","export default __webpack_public_path__ + \"static/media/user-5.95d001b9.jpg\";","export default __webpack_public_path__ + \"static/media/user-6.f8a10ddf.jpg\";","export default __webpack_public_path__ + \"static/media/user-7.aed715d8.jpg\";","export default __webpack_public_path__ + \"static/media/user-8.ae463966.jpg\";","export default __webpack_public_path__ + \"static/media/user-9.aa6a890d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__3mVRj\",\"usersBlock\":\"users_usersBlock__3yu-x\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__2bSla\",\"avatar\":\"users_avatar__Ckmk1\",\"nameAndStatus\":\"users_nameAndStatus__2I9Mt\",\"status\":\"users_status__1_p6J\",\"name\":\"users_name__3QGx-\"};","import { authAPI, userAPI } from '../api/api';\nimport { handleNetworkError, handleServerNetworkError } from '../utils/error.utils';\n\nimport { setAppErrorAC, setAppStatusAC } from './AppReducer';\nimport { AppStoreType, AppThunkDispatch } from './store';\n\n// types\nexport enum ACTIONS_TYPE {\n  FOLLOW = 'USERS/FOLLOW',\n  UNFOLLOW = 'USERS/UNFOLLOW',\n  SET_USERS = 'USERS/SET-USERS',\n  SET_CURRENT_PAGE = 'USERS/SET-CURRENT-PAGE',\n  SET_TOTAL_USERS_COUNT = 'USERS/SET-TOTAL-USERS-COUNT',\n  IS_FETCHING = 'USERS/IS-FETCHING',\n  IS_FOLLOWING_PROGRESS = 'USERS/IS-FOLLOWING-PROGRESS',\n}\n\nexport type UsersActionsType =\n  | ReturnType<typeof followSuccessAC>\n  | ReturnType<typeof unFollowSuccessAC>\n  | ReturnType<typeof setUsersAC>\n  | ReturnType<typeof setCurrentPageAC>\n  | ReturnType<typeof setUsersTotalCountAC>\n  | ReturnType<typeof toggleIsFetchingAC>\n  | ReturnType<typeof toggleFollowingProgressAC>;\n\nexport type PhotosType = {\n  small: string;\n  large: string;\n};\nexport type UserType = {\n  id: string;\n  name: string;\n  status: string;\n  followed: boolean;\n  photos: PhotosType;\n};\nexport type UsersPageType = {\n  items: UserType[];\n  pageSize: number;\n  totalCount: number;\n  currentPage: number;\n  isFetching: boolean;\n  following: Array<string>;\n};\n\nconst initialState: UsersPageType = {\n  items: [],\n  pageSize: 7,\n  totalCount: 1,\n  currentPage: 1,\n  isFetching: true,\n  following: [],\n};\nexport const userReducer = (\n  state: UsersPageType = initialState,\n  action: UsersActionsType,\n): UsersPageType => {\n  switch (action.type) {\n    case ACTIONS_TYPE.FOLLOW:\n      return {\n        ...state,\n        items: state.items.map(u =>\n          u.id === action.userID ? { ...u, followed: true } : u,\n        ),\n      };\n    case ACTIONS_TYPE.UNFOLLOW:\n      return {\n        ...state,\n        items: state.items.map(u =>\n          u.id === action.userID ? { ...u, followed: false } : u,\n        ),\n      };\n    case ACTIONS_TYPE.SET_USERS:\n      return { ...state, items: action.users };\n    case ACTIONS_TYPE.SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\n      return { ...state, totalCount: action.totalCount };\n    case ACTIONS_TYPE.IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n    case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        following: action.followingIsProgress\n          ? [...state.following, action.userID]\n          : state.following.filter(id => id !== action.userID),\n      };\n    default:\n      return state;\n  }\n};\n\n// action creators\nexport const followSuccessAC = (userID: string) =>\n  ({ type: ACTIONS_TYPE.FOLLOW, userID } as const);\nexport const unFollowSuccessAC = (userID: string) =>\n  ({ type: ACTIONS_TYPE.UNFOLLOW, userID } as const);\nexport const setUsersAC = (users: UserType[]) =>\n  ({ type: ACTIONS_TYPE.SET_USERS, users } as const);\nexport const setCurrentPageAC = (currentPage: number) =>\n  ({\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\n    currentPage,\n  } as const);\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) =>\n  ({\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\n    totalCount: serverTotalUsersCount,\n  } as const);\nexport const toggleIsFetchingAC = (isFetching: boolean) =>\n  ({\n    type: ACTIONS_TYPE.IS_FETCHING,\n    isFetching,\n  } as const);\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) =>\n  ({\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\n    followingIsProgress,\n    userID,\n  } as const);\n\n// thunks\nexport const getUsersTC =\n  () => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\n    const { currentPage, pageSize } = getState().UsersPage;\n    dispatch(toggleIsFetchingAC(true));\n    const res = await userAPI.getUsers(currentPage, pageSize);\n    try {\n      dispatch(toggleIsFetchingAC(false));\n      dispatch(setUsersAC(res.data.items));\n      dispatch(setUsersTotalCountAC(res.data.totalCount));\n    } catch (error: any) {\n      console.log('Error when you try get users', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\n\nexport const onPageChangedTC =\n  (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\n    dispatch(toggleIsFetchingAC(true));\n    dispatch(setCurrentPageAC(pageNumber));\n    const res = await userAPI.getUsers(pageNumber, pageSize);\n    try {\n      dispatch(setUsersAC(res.data.items));\n      dispatch(setUsersTotalCountAC(res.data.totalCount));\n      dispatch(toggleIsFetchingAC(false));\n    } catch (error: any) {\n      console.log('Error when you try change page', error);\n      handleServerNetworkError(error, dispatch);\n    }\n  };\n\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\n  dispatch(toggleFollowingProgressAC(true, userID));\n\n  const response = await authAPI.follow(userID);\n  try {\n    if (response.data.resultCode === 0) {\n      dispatch(followSuccessAC(userID));\n    } else {\n      dispatch(setAppErrorAC('Some error occupied'));\n      dispatch(setAppStatusAC('failed'));\n    }\n    dispatch(toggleFollowingProgressAC(false, userID));\n  } catch (error: any) {\n    console.log('Error when you try follow user', error);\n    handleServerNetworkError(error, dispatch);\n  }\n};\n\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\n  dispatch(toggleFollowingProgressAC(true, userID));\n  const response = await authAPI.unfollow(userID);\n  try {\n    if (response.data.resultCode === 0) {\n      dispatch(unFollowSuccessAC(userID));\n    }\n    dispatch(toggleFollowingProgressAC(false, userID));\n  } catch (error: any) {\n    handleNetworkError(error, dispatch);\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__1MRWo\",\"allPostsBlock\":\"Profile_allPostsBlock__1o39T\",\"editableDiv\":\"Profile_editableDiv__35lmz\",\"input\":\"Profile_input__2TDHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__Dd0tG\",\"Title\":\"ChatBlock_Title__1C8zx\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__23zW6\",\"OnlineDot\":\"ChatBlock_OnlineDot__LQRex\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__3DRhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatPageBlockOpen\":\"ChatPage_chatPageBlockOpen__xKNKs\",\"chatPageBlockCollapsed\":\"ChatPage_chatPageBlockCollapsed__n63GU\",\"chatTitle\":\"ChatPage_chatTitle__eTRpb\",\"messageFlag\":\"ChatPage_messageFlag__3Gbib\",\"noMessageFlag\":\"ChatPage_noMessageFlag__c0Xxn\",\"minimizeIcon\":\"ChatPage_minimizeIcon__2Bvv4\"};","export const placeholderText = {\n  profileAreaText: \"What's on your mind?\",\n  dialogsAreaText: 'Type a message',\n};\nexport const maxMessageLength: number = 500;\n"],"sourceRoot":""}