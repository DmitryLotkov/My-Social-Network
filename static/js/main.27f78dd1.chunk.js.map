{"version":3,"sources":["Images/Users/user-4.jpg","components/Profile/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/Preloader/Preloader.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","store/store.ts","store/AppReducer.tsx","store/DialogsReducer.tsx","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/Footer/Footer.module.scss","components/Common/Selectors/Selectors.ts","components/EditProfile/EditProfile.module.scss","utils/error.utils.ts","components/Header/Header.module.scss","components/Error404/Error404.module.scss","components/Profile/ContactBlock/ContactBlock.module.scss","components/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","components/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ContactBlock/ContactBlock.tsx","components/Profile/OnlineFriends/ChatBlock.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/AnyUserPosts/AnyUserPost.tsx","components/Profile/AnyUserPosts/AnyUserPosts.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","components/Events/Events.tsx","components/Events/EventsContainer.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspense.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","components/EditProfile/EditProfile.tsx","Images/Logo.svg","components/Header/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoutes.tsx","Images/astronaut.svg","Images/earth.svg","Images/moon.svg","Images/rocket.svg","Images/404Text.svg","components/Error404/Error404.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx","components/api.tsx","constants.ts","store/ProfileReducer.tsx","components/Profile/AnyUserPosts/AnyUserPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","store/AuthReducer.tsx","store/UserPostsReducer.tsx","Images/Users/user-1.jpg","Images/Users/user-2.jpg","Images/Users/user-3.jpg","Images/Users/user-5.jpg","Images/Users/user-6.jpg","Images/Users/user-7.jpg","Images/Users/user-8.jpg","Images/Users/user-9.jpg","Images/Post photo.png","components/Users/users.module.scss","store/UsersReducer.tsx","components/Profile/Profile.module.scss","components/Profile/OnlineFriends/ChatBlock.module.scss","Images/defaultUserImage.jpg","components/Common/TextAreaForm/textAreaData.ts"],"names":["module","exports","useAppDispatch","useDispatch","rootReducer","combineReducers","ProfilePage","profileReducer","DialogPage","dialogsReducer","HardcodedUsers","hardcodedUsersReducer","UsersPage","userReducer","Auth","authReducer","App","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","useAppSelector","useSelector","ACTIONS_TYPE","initialState","error","status","state","action","type","APP_SET_ERROR","APP_SET_STATUS","setAppErrorAC","setAppStatusAC","dialogs","id","v1","name","avatar","user4","message","messages","ADD_DIALOG_MESSAGE","text","addMessageAC","MyProfilePhoto","React","memo","navigate","useNavigate","myPhoto","profile","photos","small","myLoginName","data","login","userID","userIDSelector","onClick","className","styles","myProfilePhotoWrapper","mySmallPhoto","src","defaultUserPhoto","alt","jobDescription","TextAreaForm","props","formik","useFormik","initialValues","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","formWrapper","multiline","textArea","placeholder","placeholderText","getFieldProps","onBlur","variant","style","color","statusSelector","profileSelector","isLoggedInSelector","isLoggedIn","isInitializedSelector","isInitialized","isFetchingSelector","isFetching","usersSelector","items","pageSizeSelector","pageSize","currentPageSelector","currentPage","totalUserCountSelector","totalCount","followingArrSelector","following","handleNetworkError","Error","dispatch","response","handleServerAppError","handleServerNetworkError","Users","users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","userPhoto","usersWrapper","Pagination","onChange","event","page","size","shape","count","data-testid","map","user","usersBlock","avatarAndFollowButton","followed","Button","disabled","some","nameAndStatus","Preloader","main","progress","CircularProgress","UserContainerFC","followingArr","useEffect","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","userId","Number","useParams","useState","localStatus","setLocalStatus","editMode","setEditMode","activateEditMode","deactivateEditMode","updateUserStatusTC","myUserID","editableDiv","input","e","currentTarget","value","onKeyPress","key","ContactBlock","contactsBlock","contacts","vk","contactsBlockItem","icon","faVk","href","instagram","faInstagram","youtube","faYoutube","github","faGithub","twitter","faTwitter","facebook","faFacebook","website","faFirefoxBrowser","mainLink","faGoogle","lookingForAJobDescription","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","ProfileInfo","large","myId","photoRef","useRef","onlineFriends","open","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","openPopover","setOpenPopover","popoverAnchor","show","Object","every","item","handleCloseModal","onlineFriendsArr","f","profileInfoWrapper","profilePhoto","avatarWrapper","menu","statusBlock","profileName","fullName","popover","ref","fontSize","lookingForAJob","profileStatus","aboutMe","profileDescription","Title","Modal","onClose","Box","sx","display","flexDirection","justifyContent","alignItems","IconButton","right","Close","marginBottom","htmlFor","accept","reader","FileReader","file","target","files","onloadend","result","maxPictureSize","readAsDataURL","textTransform","current","click","uploadAvatarTC","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Post","likeCount","updated","likeObj","setLikeObj","addLikeHandler","likeGenerator","round","random","generateLike","itemWrapper","avatarAndClose","height","deleteMyPostAC","likeBlock","MyPosts","postsElements","postsData","likesCount","reverse","postBlock","myPostForm","newPostHeader","posts","AnyUserPost","postText","postPhoto","anyUserPost","userWrapper","userPhotoAndDescriptionBlock","userDescription","userPosition","deleteUsersPostAC","AnyUserPosts","anyPostsElements","anyUserPostsData","post","ProfileFC","myPostsData","profileWrapper","allPostsBlock","profileAreaText","addPostActionAC","ProfileContainerFC","getProfileTC","getUserStatusTC","to","PATH","LOGIN","Events","EventsContainer","Photos","PhotosContainer","content","Login","serverError","captchaUrl","isPassType","setIsPassType","email","test","password","rememberMe","captcha","loginTC","HOME","Grid","container","FormControl","FormLabel","rel","FormGroup","mTop","InputLabel","Input","onFocus","touched","endAdornment","InputAdornment","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","FormControlLabel","label","control","Checkbox","checked","marginTop","withSuspense","Component","Suspense","fallback","ErrorSnackBar","handleClose","reason","Snackbar","autoHideDuration","Alert","severity","AlertTitle","EditProfile","s","editProfileWrapper","enableReinitialize","updateProfileTC","PROFILE","formRow","contactText","TextField","background","handleChange","handleBlur","helperText","labelPlacement","button","Navigation","headerContent","logo","sideWrapper","NavItem","isActive","activeNavLink","unActiveNavLink","DIALOGS","USERS","EDIT_PROFILE","loginBlock","jobStatus","userName","logOutTC","Header","headerWrapper","PrivateRoutes","location","useLocation","encodeURIComponent","pathname","replace","Error404","ErrorWrapper","stars","centralBody","image404","errorText","btnGoHome","objects","objectRocket","rocket","earthMoon","objectEarth","earth","objectMoon","moon","boxAstronaut","objectAstronaut","astronaut","glowingStars","star","Footer","year","Date","getFullYear","LastContactContainer","DialogContainerFC","lazy","ERROR404","ANY_ROUTE","EVENTS","PHOTOS","appStatus","initializeAppTC","path","element","UsersContainerFC","ReactDOM","render","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","get","profileAPI","getProfile","getStatus","updateStatus","put","uploadAvatar","photoFile","formData","FormData","append","updateProfile","authAPI","me","delete","logout","getFollowers","securityAPI","Yup","min","max","required","matches","nullable","url","setStatusAC","SET_STATUS","SET_SOME_USER_PROFILE","SAVE_MY_PROFILE_PHOTO","a","res","console","log","resultCode","getState","SET_IS_LOGGED_IN","SET_IS_INITIALIZED","SET_AUTH_PROFILE_DATA","GET_CAPTCHA","setIsLoggedInAC","getCaptchaAC","profileData","getCaptchaTC","user1","user2","user3","user5","user6","user7","user8","user9","undefined","ADD_POST","DELETE_MY_POST","DELETE_USERS_POST","UserPostsReducer","filter","FOLLOW","u","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROGRESS","followingIsProgress","followSuccessAC","unFollowSuccessAC","setUsersAC","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","dialogsAreaText"],"mappings":"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","file":"static/js/main.27f78dd1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user-4.f2ebe3cd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"myPostForm\":\"MyPosts_myPostForm__2JNfF\",\"newPostHeader\":\"MyPosts_newPostHeader__3Y4vh\",\"posts\":\"MyPosts_posts__2zln9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"avatarAndClose\":\"Post_avatarAndClose__1IB8s\",\"likeBlock\":\"Post_likeBlock__1NyHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\",\"jobDescription\":\"MyProfilePhoto_jobDescription__2ne1o\",\"jobStatus\":\"MyProfilePhoto_jobStatus__1F5Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__2BYGT\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\"};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\nimport hardcodedUsersReducer from \"./UserPostsReducer\";\r\nimport {UsersActionsType, userReducer} from \"./UsersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk'\r\nimport {appReducer, AppActionsType} from \"./AppReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogsReducer} from \"./DialogsReducer\";\r\n\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nexport type RootActionsType = AuthActionsType | AppActionsType | ProfileActionsType | UsersActionsType\r\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\r\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    HardcodedUsers: hardcodedUsersReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","\r\n\r\n//types\r\nexport type NullableType<T> = null | T\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\",\r\n    APP_SET_STATUS = \"APP/SET-STATUS\"\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    error: null as NullableType<string>,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTIONS_TYPE.APP_SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: NullableType<string>) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: ACTIONS_TYPE.APP_SET_STATUS, status} as const);\r\n\r\n\r\n\r\n\r\n\r\n","import {v1} from \"uuid\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\"\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport enum ACTIONS_TYPE {\r\n    ADD_DIALOG_MESSAGE = \"DIALOGS/ADD-DIALOG-MESSAGE\",\r\n}\r\nexport type DialogActionsType = ReturnType<typeof addMessageAC>\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Kyle Fisher\",\r\n            avatar: user4,\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: DialogActionsType): DialogsStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text} as const)\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {userIDSelector} from \"../Selectors/Selectors\";\r\n\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate()\r\n    const myPhoto = useAppSelector<string | undefined>(state => state.ProfilePage.profile.photos?.small);\r\n    const myLoginName = useAppSelector<string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = () => navigate(`/profile/${userID}`)\r\n\r\n\r\n    return (\r\n        <div onClick={navigateToMyMage} className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div >\r\n                <strong>{myLoginName}</strong>\r\n                <div className={styles.jobDescription}>Frontend developer</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {TextField} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: MyPostsPropsType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(!values.text){\r\n                errors.text = \"Enter a message\"\r\n            }\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <TextField  multiline={true} className={styles.textArea}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")} onBlur={() => formik.errors.text = \"\"}\r\n            />\r\n                <div>\r\n                    <Button variant={\"outlined\"} type={\"submit\"}>\r\n                        <SendIcon/>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LastContactContainer\":\"Footer_LastContactContainer__W5QZE\"};","import {AppRootStateType} from \"../../../store/store\";\r\nimport {UserType} from \"../../../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../../../store/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const userIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editProfileWrapper\":\"EditProfile_editProfileWrapper__30i2D\",\"content\":\"EditProfile_content___ZHRn\",\"formRow\":\"EditProfile_formRow__nKvXR\",\"contactText\":\"EditProfile_contactText___RyRo\",\"checkBoxLabel\":\"EditProfile_checkBoxLabel__3Yx_B\",\"button\":\"EditProfile_button__1wtrb\"};","import {AxiosError} from \"axios\";\r\nimport {AppThunkDispatch} from \"../store/store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../store/AppReducer\";\r\nimport {RespType} from \"../components/api\";\r\n\r\n\r\nexport const handleNetworkError = (Error: AxiosError<{ error: string }>, dispatch: AppThunkDispatch) =>{\r\n\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n    dispatch(setAppErrorAC(Error.response?.data.error || \"some Error\"));\r\n}\r\n\r\n\r\nexport const handleServerAppError = <D>(data: RespType<D>, dispatch: AppThunkDispatch, ) =>{\r\n    if (data.messages.length) {\r\n        dispatch(setAppErrorAC(data.messages[0]));\r\n    } else {\r\n        dispatch(setAppErrorAC(\"Some error occupied\"));\r\n    }\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\nexport const handleServerNetworkError = (error:Error, dispatch:AppThunkDispatch) =>{\r\n    dispatch(setAppErrorAC(error.message));\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"sideWrapper\":\"Header_sideWrapper__3LECh\",\"NavItem\":\"Header_NavItem__11nuk\",\"unActiveNavLink\":\"Header_unActiveNavLink__3MLaf\",\"activeNavLink\":\"Header_activeNavLink__1evn6\",\"logo\":\"Header_logo__22GGz\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"jobStatus\":\"Header_jobStatus__H8bbu\",\"login\":\"Header_login__2_qsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinEarthOnHover\":\"Error404_spinEarthOnHover__e2isj\",\"ErrorWrapper\":\"Error404_ErrorWrapper__1pf8y\",\"stars\":\"Error404_stars__SQd2w\",\"centralBody\":\"Error404_centralBody__1JEWd\",\"image404\":\"Error404_image404__3kdlv\",\"btnGoHome\":\"Error404_btnGoHome__1aZp-\",\"objects\":\"Error404_objects__1c8KN\",\"objectRocket\":\"Error404_objectRocket__Dl0sG\",\"rocketMovement\":\"Error404_rocketMovement__1jP2b\",\"earthMoon\":\"Error404_earthMoon__2Oh1x\",\"objectEarth\":\"Error404_objectEarth__1Upwt\",\"spinEarth\":\"Error404_spinEarth__1em9y\",\"objectMoon\":\"Error404_objectMoon__jD2Jg\",\"boxAstronaut\":\"Error404_boxAstronaut__2allS\",\"moveAstronaut\":\"Error404_moveAstronaut__3vQwN\",\"objectAstronaut\":\"Error404_objectAstronaut__34-08\",\"rotateAstronaut\":\"Error404_rotateAstronaut__2OcHy\",\"glowingStars\":\"Error404_glowingStars__3cRJl\",\"star\":\"Error404_star__1VYV1\",\"glowStar\":\"Error404_glowStar__3cklv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"ContactBlock_contactsBlock__2a9ys\",\"contactsBlockItem\":\"ContactBlock_contactsBlockItem__2IIYV\",\"icon\":\"ContactBlock_icon__1AYiX\",\"lastContactBlockItem\":\"ContactBlock_lastContactBlockItem__1odxh\"};","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../store/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../store/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC());\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {statusSelector} from \"../Common/Selectors/Selectors\";\r\n\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport { myUserID} from \"../../constants\";\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if ( userId !== myUserID ) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID && !status){\r\n\r\n        return (\r\n        <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if((editMode && userId === myUserID) ){\r\n        return (\r\n        <div className={styles.editableDiv}\r\n             data-testid=\"editableMyDiv\"\r\n            onClick={activateEditMode}>\r\n            {status}\r\n        </div>)\r\n    }\r\n\r\n    else return <input className={styles.input}\r\n                       onChange={changeTitle}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={deactivateEditMode}\r\n                       type=\"text\"\r\n                       data-testid=\"input\"\r\n                       value={localStatus}/>\r\n};\r\n\r\n","import React from 'react';\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {profileSelector} from \"../../Common/Selectors/Selectors\";\r\nimport style from \"./ContactBlock.module.scss\"\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons/faGithub\";\r\nimport {faVk} from \"@fortawesome/free-brands-svg-icons/faVk\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons/faTwitter\";\r\nimport {faFacebook} from \"@fortawesome/free-brands-svg-icons/faFacebook\";\r\nimport {faFirefoxBrowser, faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faInstagram} from \"@fortawesome/free-brands-svg-icons/faInstagram\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons/faGoogle\";\r\n\r\nexport const ContactBlock = () => {\r\n    const profile = useAppSelector(profileSelector);\r\n\r\n    return (\r\n        <div className={style.contactsBlock}>\r\n            <div>\r\n                <strong>Contacts</strong>\r\n            </div>\r\n            {profile.contacts.vk &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faVk}/>\r\n                <a href={profile.contacts.vk}>\r\n                    Vk\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.instagram &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faInstagram}/>\r\n                <a href={profile.contacts.instagram}>\r\n                    Instagram\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.youtube &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faYoutube}/>\r\n                <a href={profile.contacts.youtube}>\r\n                    You tube\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.github &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGithub}/>\r\n                <a href={profile.contacts.github}>\r\n                    GitHub\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.twitter &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faTwitter}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    twitter\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.facebook &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFacebook}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    faceBook\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.website &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFirefoxBrowser}/>\r\n                <a href={profile.contacts.website}>\r\n                    Web site\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.mainLink &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGoogle}/>\r\n                <a href={profile.contacts.website}>\r\n                    Main link\r\n                </a>\r\n            </div>}\r\n            {profile.lookingForAJobDescription &&\r\n            <>\r\n                <div>\r\n                    <strong>Job description</strong>\r\n                </div>\r\n                <div className={style.contactsBlockItem}>\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n            </>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","\r\nimport React from \"react\";\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\ntype OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType, uploadAvatarTC,\r\n} from \"../../../store/ProfileReducer\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../ProfileStatus\";\r\nimport Modal from \"@mui/material/Modal/Modal\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../store/AppReducer\";\r\nimport {userIDSelector} from \"../../Common/Selectors/Selectors\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {maxPictureSize} from \"../../../constants\";\r\nimport {ContactBlock} from \"../ContactBlock/ContactBlock\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport {ChatBlock} from \"../OnlineFriends/ChatBlock\";\r\nimport {OnlineFriendType} from \"../../OldComponents/OldStore\";\r\nimport chatStyles from \"../OnlineFriends/ChatBlock.module.scss\";\r\n\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 350,\r\n    bgcolor: '#F9F9FE',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: 2,\r\n}\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos?.large);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const myId = useAppSelector(userIDSelector);\r\n    const photoRef = useRef<HTMLInputElement>(null);\r\n    const onlineFriends = useAppSelector<Array<OnlineFriendType>>(state => state.HardcodedUsers.onlineFriends)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\r\n    const [fileAvatar, setFileAvatar] = useState<any>();\r\n    const [openPopover, setOpenPopover] = useState(false)\r\n    const popoverAnchor = useRef(null);\r\n    const show = Object.values(props.profile.contacts).every(item => item !== null)\r\n\r\n    const handleCloseModal = () => setOpen(false);\r\n    const handleClosePopover = () => setOpenPopover(false);\r\n    const handleOpenPopover = () => setOpenPopover(true);\r\n\r\n\r\n    const handleSaveAvatar = () => {\r\n        dispatch(uploadAvatarTC(fileAvatar));\r\n        handleCloseModal();\r\n    }\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const reader = new FileReader();\r\n        const file = e.target?.files;\r\n\r\n        if ((file && file[0].type) && (file[0].type === \"image/png\" || file[0].type === \"image/jpeg\")) {\r\n            setFileAvatar(file[0])\r\n            reader.onloadend = function () {\r\n                setLocalAvatar(reader.result)\r\n            }\r\n            if (file[0].size && file[0].size <= maxPictureSize) {\r\n                reader.readAsDataURL(file[0])\r\n            } else {\r\n                dispatch(setAppErrorAC(`Your file size must be less then ${maxPictureSize / 1000000}MB 😕`))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setAppErrorAC(`Your file has not in .png .jpeg format. Please choose the right file`))\r\n        }\r\n\r\n    }\r\n    const onlineFriendsArr = onlineFriends.map((f) =>\r\n        <ChatBlock\r\n            key={f.id}\r\n            id={f.id}\r\n            avatar={f.avatar}/>\r\n    )\r\n    return (\r\n        <div className={styles.profileInfoWrapper}>\r\n\r\n            <div className={styles.profilePhoto}>\r\n                <div className={styles.avatarWrapper}>\r\n                    <img src={props.profile.photos?.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>\r\n                    {userId === myId &&\r\n                    <div className={styles.menu} onClick={() => setOpen(true)}><p>Change photo</p></div>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>\r\n                    <strong>{props.profile.fullName}</strong>\r\n                    {/*<img src={smallLogo} alt=\"smallLogo\"/>*/}\r\n                    <CheckCircleOutlineIcon\r\n                        className={styles.popover}\r\n                        ref={popoverAnchor}\r\n                        onClick={handleOpenPopover} fontSize={\"small\"}\r\n                        color={props.profile.lookingForAJob ? \"success\" : \"error\"}/>\r\n                </div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                {props.profile.aboutMe && <p className={styles.profileDescription}>\r\n                    {props.profile.aboutMe}\r\n                </p>}\r\n            </div>\r\n            {show && <ContactBlock/>}\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriendsArr}\r\n            </div>\r\n            <Modal open={open}\r\n                   onClose={handleCloseModal}\r\n            >\r\n                <Box sx={style}>\r\n                    <Box>\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: 'center',\r\n                            alignItems: \"center\", position: \"relative\"\r\n                        }}><strong>\r\n                            <p style={{fontSize: \"20px\"}}>Uploading profile photo</p>\r\n                        </strong></Box>\r\n                        <IconButton style={{position: \"absolute\", top: \"5px\", right: \"10px\"}}\r\n                                    onClick={handleCloseModal}>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: 'center',\r\n                        alignItems: \"center\"\r\n                    }}>\r\n\r\n                        <Box id=\"outer-container\">\r\n                            <img src={base64Avatar || userPhoto} alt=\"avatar\"\r\n                                 width={\"200px\"} style={{borderRadius: \"8px\", marginBottom: \"10px\"}}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <input type={\"file\"} style={{display: \"none\"}} id={\"answer\"} ref={photoRef}\r\n                                       accept=\"image/*\" onChange={onChangeAvatar}/>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={() => photoRef.current && photoRef.current.click()}>Upload\r\n                                    photo</Button>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={handleSaveAvatar}>Save\r\n                                </Button>\r\n                            </label>\r\n                        </Box>\r\n                        <p>You can upload images in JPG or PNG format</p>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n            <Popover open={openPopover}\r\n                     anchorEl={popoverAnchor.current}\r\n                     onClose={handleClosePopover}\r\n                     anchorOrigin={{\r\n                         vertical: 'top',\r\n                         horizontal: 'left',\r\n                     }}\r\n                     transformOrigin={{\r\n                         vertical: 'bottom',\r\n                         horizontal: 'right',\r\n                     }}\r\n            >\r\n                <Typography\r\n                    sx={{p: 1}}>{props.profile.lookingForAJob ? \"In search of a job\" : \"Not looking for a job\"}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {deleteMyPostAC} from \"../../../../store/UserPostsReducer\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport const maxLikesCount = 300;\r\ntype MyPostsPropsType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type LikeObjType = {\r\n    likeCount: number\r\n    updated: boolean\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const dispatch = useDispatch();\r\n    const deletePost = (userId: string) => {\r\n        dispatch(deleteMyPostAC(userId))\r\n    }\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () => {\r\n        if (!likeObj.updated) {\r\n            setLikeObj({likeCount: likeObj.likeCount + 1, updated: true})\r\n        } else {\r\n            setLikeObj({likeCount: likeObj.likeCount - 1, updated: false})\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.avatarAndClose}>\r\n                <MyProfilePhoto/>\r\n                <IconButton style={{height: \"40px\"}} onClick={() => deletePost(props.id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> :\r\n                    <FavoriteBorderIcon onClick={addLikeHandler}/>} {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport {TextAreaForm} from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        id={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <div className={styles.myPostForm}>\r\n                <h5 className={styles.newPostHeader}>NEW POST</h5>\r\n                <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./AnyUserPosts.module.scss\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\n\r\nimport {deleteUsersPostAC, UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport {LikeObjType, maxLikesCount} from \"../MyPosts/Post/Post\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst AnyUserPost = ({avatar, name, position, postText, postPhoto, id}: UsersOnWallType) => {\r\n    const dispatch = useDispatch();\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () =>{\r\n        if(!likeObj.updated){\r\n            setLikeObj({likeCount: likeObj.likeCount +1, updated: true})\r\n        } else{\r\n            setLikeObj({likeCount: likeObj.likeCount -1, updated: false})\r\n        }\r\n    }\r\n    const deletePostHandler = (userId: string) =>{\r\n        dispatch(deleteUsersPostAC(userId))\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n    return (\r\n        <div className={styles.anyUserPost}>\r\n            <div className={styles.userWrapper}>\r\n                <div className={styles.userPhotoAndDescriptionBlock}>\r\n                    <img src={avatar} alt={\"avatar\"}/>\r\n                    <div className={styles.userDescription}>\r\n                        <strong>{name}</strong>\r\n                        <div className={styles.userPosition}>{position}</div>\r\n                    </div>\r\n                </div>\r\n                <IconButton onClick={() => deletePostHandler(id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <p>{postText}</p>\r\n            {postPhoto && <img className={styles.postPhoto} src={postPhoto} alt=\"postPhoto\"/>}\r\n\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> : <FavoriteBorderIcon onClick={addLikeHandler}/> } {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPost;","import React from 'react';\r\nimport styles from \"../AnyUserPosts/AnyUserPosts.module.scss\";\r\n\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport AnyUserPost from \"./AnyUserPost\";\r\n\r\n\r\nconst AnyUserPosts = () => {\r\n    const userInfo = useAppSelector<Array<UsersOnWallType>>(state => state.HardcodedUsers.anyUserPostsData);\r\n    const anyPostsElements = userInfo.map(post => <AnyUserPost key={post.id} postPhoto={post.postPhoto} name={post.name}\r\n                                                               id={post.id} avatar={post.avatar}\r\n                                                               position={post.position} postText={post.postText}/>)\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            {\r\n                anyPostsElements\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPosts;","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport AnyUserPosts from \"./AnyUserPosts/AnyUserPosts\";\r\nimport {addPostActionAC} from \"../../store/UserPostsReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    userID: number | null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(state => state.HardcodedUsers.myPostsData);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n    const addMessage = (text: string) => dispatch(addPostActionAC(text));\r\n\r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n            <ProfileInfo profile={profile}/>\r\n\r\n            <div className={styles.allPostsBlock}>\r\n                <MyPosts\r\n                    placeholderText={placeholderText.profileAreaText}\r\n                    callBack={addMessage}\r\n                    postsData={postsData}/>\r\n                <AnyUserPosts/>\r\n            </div>\r\n        </div>)\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\n\r\n\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {PATH} from \"../../App\";\r\nimport {myUserID} from \"../../constants\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector)\r\n    useEffect(() => {\r\n\r\n        if (userId !== myUserID){\r\n\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }else{\r\n            dispatch(getProfileTC(myUserID));\r\n            dispatch(getUserStatusTC(myUserID));\r\n        }\r\n\r\n    }, [userId, dispatch]);\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport {loginTC} from \"../../store/AuthReducer\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const captchaUrl = useAppSelector<NullableType<string>>(state => state.Auth.captchaUrl)\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n            captcha: \"\"\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item justifyContent={'center'}>\r\n                <h1>Login</h1>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <FormControl  sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {/*<TextField label=\"Email\"\r\n                                       placeholder={\"email\"}\r\n                                       type=\"email\"\r\n                                       margin=\"normal\"\r\n                                       {...formik.getFieldProps(\"email\")} onFocus={removeError}/>*/}\r\n\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n                            {/*<TextField type={\"password\"}\r\n                                       label=\"Password\"\r\n                                       margin=\"normal\"\r\n                                       placeholder={\"Password\"}\r\n                                       {...formik.getFieldProps(\"password\")}\r\n                                       onFocus={removeError}/>\r\n\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}*/}\r\n\r\n\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n                            {captchaUrl &&\r\n                            <>\r\n                                <img src={captchaUrl} alt={\"captchaImg\"}/>\r\n                                <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Captcha</InputLabel>\r\n                                    <Input {...formik.getFieldProps(\"captcha\")}\r\n\r\n                                    />\r\n                                    {formik.touched.captcha && formik.errors.captcha ?\r\n                                        <div style={{color: \"red\"}}>{formik.errors.captcha}</div> : null}\r\n                                </FormControl>\r\n                            </>\r\n                            }\r\n\r\n                            <Button style={{marginTop:\" 1rem\"}} variant={'contained'}\r\n                                    type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\r\n\r\n    return (props:T):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {AlertTitle} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../store/store\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\n\r\n\r\n\r\nexport const ErrorSnackBar = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const error = useAppSelector<NullableType<string>>(state => state.App.error);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert\r\n                onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>{error}</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport s from \"./EditProfile.module.scss\"\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Formik} from \"formik\";\r\nimport {getProfileTC, updateProfileTC} from \"../../store/ProfileReducer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\n\r\nexport const EditProfile = React.memo(() => {\r\n    const userId = useAppSelector(state => state.Auth.data.id);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileTC(userId));\r\n    }, [userId, dispatch]);\r\n\r\n\r\n    return (\r\n        <div className={s.editProfileWrapper}>\r\n            <div className={s.content}><h3>Edit profile</h3>\r\n                <p>Contacts: </p>\r\n                <Formik enableReinitialize={true}\r\n                        initialValues={{\r\n                            userId: userId,\r\n                            lookingForAJob: profile.lookingForAJob,\r\n                            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                            fullName: profile.fullName,\r\n                            aboutMe: profile.aboutMe,\r\n                            contacts: {\r\n                                facebook: profile.contacts.facebook,\r\n                                website: profile.contacts.website,\r\n                                vk: profile.contacts.vk,\r\n                                twitter: profile.contacts.twitter,\r\n                                instagram: profile.contacts.instagram,\r\n                                youtube: profile.contacts.youtube,\r\n                                github: profile.contacts.github,\r\n                                mainLink: profile.contacts.mainLink,\r\n                            }\r\n\r\n                        }}\r\n\r\n                        onSubmit={\r\n                            values => {\r\n                                dispatch(updateProfileTC(values));\r\n                                navigate(`${PATH.PROFILE}/${userId}`);\r\n                            }\r\n                        }>\r\n\r\n                    {props => (\r\n                        <form onSubmit={props.handleSubmit}>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Github: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.github\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.github}\r\n                                           error={!!props.errors.contacts?.github}\r\n                                           helperText={props.errors.contacts?.github}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Facebook: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.facebook\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.facebook}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>VK: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.vk\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.vk}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Instagram: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.instagram\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.instagram}\r\n\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Twitter: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.twitter\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.twitter}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>YouTube: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.youtube\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Your WebSite: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.website\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Main link: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.mainLink\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>About me: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"aboutMe\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.aboutMe}\r\n\r\n                                />\r\n\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Full name: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"fullName\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.fullName}\r\n\r\n                                />\r\n                            </div>\r\n                            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\r\n                                <FormControlLabel\r\n                                    labelPlacement={\"start\"}\r\n                                    className={s.contactText}\r\n                                    label={'Looking for a job:'}\r\n                                    name={\"lookingForAJob\"}\r\n                                    control={<Checkbox/>}\r\n                                    checked={props.values.lookingForAJob}\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Job description: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           name={\"lookingForAJobDescription\"}\r\n                                           type=\"text\"\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.lookingForAJobDescription}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className={s.button}>\r\n                                <Button variant={'contained'} type={\"submit\"}>Submit\r\n                                    changes</Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo.559316d0.svg\";","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../store/AuthReducer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector, userIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport logo from \"./../../Images/Logo.svg\"\r\nimport {PATH} from \"../../App\";\r\nimport {myUserID} from \"../../constants\";\r\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\nexport function Navigation() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n    const myLoginName = useAppSelector<string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = ()=>{\r\n        navigate(`/profile/${userID}`)\r\n    }\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <div className={styles.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <nav className={styles.sideWrapper}>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={`${PATH.PROFILE}/${myUserID}`}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <RssFeedIcon fontSize={'large'}/>\r\n                        <div>Feed</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.DIALOGS} className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <MessageIcon fontSize={'large'}/>\r\n                        <div>Messages</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.USERS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <PeopleAltIcon fontSize={'large'}/>\r\n                        <div>All Users</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.EDIT_PROFILE} className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <SettingsIcon fontSize={'large'}/>\r\n                        <div>Edit Profile</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <div className={styles.loginBlock}>\r\n\r\n                <div className={styles.jobStatus}>\r\n                    <div className={styles.userName} onClick={navigateToMyMage}>\r\n                        {myLoginName}\r\n                    </div>\r\n                </div>\r\n                {isLoggedIn &&\r\n                <Button variant={\"outlined\"} className={styles.login} onClick={logOutHandler}>\r\n                    Log out\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {Navigation} from \"./Navigation\";\r\n\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <header className={styles.headerWrapper}>\r\n            <Navigation/>\r\n        </header>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Navigate, Outlet, useLocation} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../store/store\";\r\nimport {isLoggedInSelector} from \"./Common/Selectors/Selectors\";\r\nimport {Header} from \"./Header/Header\";\r\n\r\nconst PrivateRoutes = () => {\r\n    const location = useLocation();\r\n\r\n    const isLoggedIn = useAppSelector<boolean>(isLoggedInSelector);\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Navigate\r\n                to={`/login?redirectTo=${encodeURIComponent(location.pathname)}`}\r\n                replace\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Outlet/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;","export default __webpack_public_path__ + \"static/media/astronaut.efda7730.svg\";","export default __webpack_public_path__ + \"static/media/earth.e0fbdf02.svg\";","export default __webpack_public_path__ + \"static/media/moon.5a77d87b.svg\";","export default __webpack_public_path__ + \"static/media/rocket.9c039dba.svg\";","export default __webpack_public_path__ + \"static/media/404Text.154db121.svg\";","import React from \"react\";\r\nimport styles from \"./Error404.module.scss\";\r\nimport {NavLink, } from \"react-router-dom\";\r\n\r\nimport astronaut from \"./../../Images/astronaut.svg\";\r\nimport earth from \"./../../Images/earth.svg\";\r\nimport moon from \"./../../Images/moon.svg\";\r\nimport rocket from \"./../../Images/rocket.svg\";\r\nimport errorText from \"./../../Images/404Text.svg\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={styles.ErrorWrapper } >\r\n\r\n            <div className={styles.stars} >\r\n\r\n                <div className={styles.centralBody}>\r\n                    <img className={styles.image404} src={errorText} alt={\"img404\"}/>\r\n                    <NavLink to={`${PATH.HOME}`} className={styles.btnGoHome}>GO BACK HOME</NavLink>\r\n                </div>\r\n                <div className={styles.objects}>\r\n                    <img className={styles.objectRocket} src={rocket} alt={\"imgRocket\"}/>\r\n                    <div className={styles.earthMoon}>\r\n                        <img className={styles.objectEarth} src={earth} alt={\"imgEarth\"}/>\r\n                        <img className={styles.objectMoon} src={moon} alt={\"imgMoon\"}/>\r\n                    </div>\r\n                    <div className={styles.boxAstronaut}>\r\n                        <img className={styles.objectAstronaut} src={astronaut} alt={\"imgAstronaut\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.glowingStars}>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./../Footer/Footer.module.scss\"\r\n\r\n\r\nexport const Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <footer className={styles.LastContactContainer}>\r\n            <span>© {year} All Rights Reserved. </span>\r\n        </footer>\r\n    );\r\n};\r\n\r\n\r\n","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {useAppSelector} from \"./store/store\";\r\nimport UsersContainerFC from './components/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport {EventsContainer} from \"./components/Events/EventsContainer\";\r\nimport PhotosContainer from \"./components/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./store/AuthReducer\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\nimport {RequestStatusType} from \"./store/AppReducer\";\r\nimport {ErrorSnackBar} from \"./components/ErrorSnackBar/ErrorSnackBar\";\r\nimport {EditProfile} from \"./components/EditProfile/EditProfile\";\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\nimport {Error404} from \"./components/Error404/Error404\";\r\nimport {Footer} from \"./components/Footer/Footer\";\r\n\r\n\r\n\r\nconst DialogContainerFC = React.lazy(() => import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE: \"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS: \"/events\",\r\n    PHOTOS: \"/photos\",\r\n    EDIT_PROFILE: \"/edit_profile\"\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\r\n    const dispatch = useDispatch();\r\n    const userID = useAppSelector(state => state.Auth.data.id)\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={\"App\"}>\r\n            <main className={\"mainContent\"}>\r\n                {appStatus === 'loading' && <Preloader/>}\r\n                <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}/${userID}`}/>}/>\r\n                    <Route element={<PrivateRoutes />}>\r\n                        <Route path={`${PATH.PROFILE}/:userId`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={PATH.DIALOGS} element={withSuspense(DialogContainerFC)({})}/>\r\n                        <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                        <Route path={PATH.EDIT_PROFILE} element={<EditProfile/>}/>\r\n                    </Route>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>}/>\r\n                    <Route path={`${PATH.ERROR404}`} element={<Error404/>}/>\r\n                </Routes>\r\n                <ErrorSnackBar/>\r\n            </main>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersPageType} from \"../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../store/ProfileReducer\";\r\nimport {LoginParamsType} from \"../store/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\nexport type RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<RespType>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(photoFile:File){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<RespType<{photos:{small:\"\", large:\"\"}}>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile: ProfileDataType){\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile`, {...profile})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    },\r\n    getFollowers(userID: string | undefined){\r\n        return instance.get(`follow/${userID}`)\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    captcha(){\r\n        return instance.get<{url:string| null}>(`/security/get-captcha-url`)\r\n    }\r\n}\r\n","import * as Yup from \"yup\";\r\n\r\nexport const freeUserId = 1079;\r\nexport const myUserID = 21748;\r\nexport const maxPictureSize = 10000000; //10MB\r\nconst webSiteRegular =  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n\r\nexport const DisplayingErrorMessagesSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n        .min(3, 'User name must be more than 3 symbols')\r\n        .max(50, 'User name must be less than 50 symbols')\r\n        .required('Required'),\r\n    aboutMe: Yup.string()\r\n        .min(3, 'User description text must be more than 3 symbols')\r\n        .max(300, 'User description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    lookingForAJobDescription: Yup.string()\r\n        .min(3, 'Job description text must be more than 3 symbols')\r\n        .max(300, 'Job description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    contacts: Yup.object().shape({\r\n        facebook: Yup.lazy(value => !value ? Yup.string() : Yup.string().matches(\r\n            /(?:https:\\/\\/)?(?:www\\.)?facebook\\.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[\\w]*\\/)*([\\w]*)/,\r\n            'Please enter correct url'\r\n        )),\r\n        website: Yup.string()\r\n            .min(0)\r\n            .nullable()\r\n            .matches(\r\n                webSiteRegular,\r\n                'Please enter correct url'\r\n            ),\r\n        vk: Yup.string()\r\n\r\n            .matches(\r\n                /(?:https:\\/\\/)?[-a-zA-Z0-9@:%_+.~#?&=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&=]*)?/gi,\r\n                'Please enter correct vk url'\r\n            ),\r\n        twitter: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /@([A-Za-z0-9_]{1,15})/,\r\n                'Please enter correct twitter url'\r\n            )\r\n            ,\r\n        instagram: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com|instagr.am|instagr.com)\\/(\\w+)/igm,\r\n                'Please enter correct instagram url'\r\n            )\r\n            ,\r\n        youtube: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /youtu(?:.*\\/v\\/|.*v\\|\\.be\\/)([A-Za-z0-9_-]{11})/,\r\n                'Please enter correct YouTube url'\r\n            )\r\n            ,\r\n        github: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:github.com)\\/(\\w+)/igm,\r\n                'Please enter correct github url'\r\n            )\r\n            ,\r\n        mainLink: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .url(),\r\n\r\n    }),\r\n\r\n\r\n});","import {profileAPI} from \"../components/api\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\n\r\n//types\r\nenum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    SAVE_MY_PROFILE_PHOTO = \"PROFILE/SAVE-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n\r\n}\r\n\r\nexport type ProfileActionsType =\r\n     ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof savePhotoAC>\r\n    | ReturnType<typeof setStatusAC>\r\n\r\n\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type UserProfileContactType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileDataType = {\r\n    userId: number,\r\n    aboutMe?: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription?: string\r\n    fullName?: string\r\n    contacts: UserProfileContactType\r\n    photos?: userProfilePhotosType\r\n\r\n}\r\n\r\n//actions\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\r\n    profile\r\n} as const);\r\nexport const savePhotoAC = (photos: userProfilePhotosType) => ({\r\n    type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO,\r\n    photos\r\n} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    status: \"\",\r\n\r\n    profile: {\r\n        userId: 0,\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ACTIONS_TYPE.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getProfile(userId);\r\n    try {\r\n        dispatch(setUserProfileAC(res.data));\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getStatus(userId);\r\n    try {\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.updateStatus(status)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const uploadAvatarTC = (photoFile: File) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    const userId = getState().Auth.data.id;\r\n    let res = await profileAPI.uploadAvatar(photoFile)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n            dispatch(await getProfileTC(userId))\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try upload avatar\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\nexport const updateProfileTC = (profile: ProfileDataType) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.updateProfile(profile)\r\n    const userId = getState().Auth.data.id;\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(await getProfileTC(userId))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update profile\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"AnyUserPosts_itemWrapper__3SAlC\",\"anyUserPost\":\"AnyUserPosts_anyUserPost__1jKw2\",\"userWrapper\":\"AnyUserPosts_userWrapper__2Bib2\",\"userPhotoAndDescriptionBlock\":\"AnyUserPosts_userPhotoAndDescriptionBlock__1pr_E\",\"userDescription\":\"AnyUserPosts_userDescription__jD3qN\",\"userPosition\":\"AnyUserPosts_userPosition__3JImU\",\"postPhoto\":\"AnyUserPosts_postPhoto__3lIfB\",\"likeBlock\":\"AnyUserPosts_likeBlock__1oOiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__iDoIF\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3sygl\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__1II4U\",\"menu\":\"ProfileInfo_menu__4TXbA\",\"statusBlock\":\"ProfileInfo_statusBlock__12kNH\",\"profileName\":\"ProfileInfo_profileName__QENTj\",\"popover\":\"ProfileInfo_popover__3IVNF\",\"profileStatus\":\"ProfileInfo_profileStatus__P1vsw\",\"profileDescription\":\"ProfileInfo_profileDescription__4gsPq\",\"modalMainBox\":\"ProfileInfo_modalMainBox__3RTcD\",\"avatarBlock\":\"ProfileInfo_avatarBlock__3CI4t\",\"avatarImg\":\"ProfileInfo_avatarImg__3-stZ\",\"iconUpload\":\"ProfileInfo_iconUpload__aSS_N\"};","import {authAPI, AuthDataType, securityAPI} from \"../components/api\";\r\nimport {AppThunkDispatch} from \"./store\";\r\nimport {myUserID} from \"../constants\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGGED_IN = \"AUTH/SET-IS-LOGGED-IN\",\r\n    SET_IS_INITIALIZED = \"AUTH/SET-IS-INITIALIZED\",\r\n    SET_AUTH_PROFILE_DATA = \"AUTH/SET-AUTH-PROFILE-DATA\",\r\n    GET_CAPTCHA = \"AUTH/GET-CAPTCHA\"\r\n}\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n    | ReturnType<typeof getCaptchaAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n    captchaUrl: null | string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: myUserID,\r\n        email: \"\",\r\n        login: \"\",\r\n\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n    captchaUrl: null\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.SET_AUTH_PROFILE_DATA:\r\n            return {...state, data: action.data}\r\n        case ACTIONS_TYPE.GET_CAPTCHA:\r\n            return {...state, captchaUrl: action.captcha}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_LOGGED_IN, isLoggedIn} as const);\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.SET_AUTH_PROFILE_DATA, data: profileData} as const);\r\nexport const getCaptchaAC = (captcha : string| null) =>\r\n    ({type: ACTIONS_TYPE.GET_CAPTCHA, captcha} as const);\r\n\r\n\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.me();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n        }\r\n        else {\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try initialize app\", error)\r\n        handleNetworkError(error, dispatch);\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.login(data);\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(getCaptchaAC(null))\r\n            dispatch( await initializeAppTC())\r\n        } else {\r\n            if(res.data.resultCode === 10){\r\n                dispatch(await getCaptchaTC())\r\n            }\r\n                handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to login\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        }\r\n        else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await securityAPI.captcha();\r\n    try{\r\n\r\n        dispatch(getCaptchaAC(res.data.url))\r\n    }\r\n    catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import {v1} from \"uuid\";\r\nimport user1 from \"./../Images/Users/user-1.jpg\";\r\nimport user2 from \"./../Images/Users/user-2.jpg\";\r\nimport user3 from \"./../Images/Users/user-3.jpg\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\";\r\nimport user5 from \"./../Images/Users/user-5.jpg\";\r\nimport user6 from \"./../Images/Users/user-6.jpg\";\r\nimport user7 from \"./../Images/Users/user-7.jpg\";\r\nimport user8 from \"./../Images/Users/user-8.jpg\";\r\nimport user9 from \"./../Images/Users/user-9.jpg\";\r\nimport postPhoto from \"./../Images/Post photo.png\";\r\nimport {\r\n    PostType,\r\n} from \"./ProfileReducer\";\r\n\r\n\r\nexport type OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\n\r\nenum ACTIONS_TYPE {\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    DELETE_MY_POST = \"PROFILE/DELETE-MY-POST\",\r\n    DELETE_USERS_POST = \"PROFILE/DELETE-USERS-POST\"\r\n}\r\n\r\nexport type UsersOnWallType = {\r\n    id: string\r\n    avatar: string\r\n    name: string\r\n    position: string\r\n    postText: string\r\n    postPhoto: string | undefined\r\n\r\n}\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionAC>\r\n    | ReturnType<typeof deleteMyPostAC>\r\n    | ReturnType<typeof deleteUsersPostAC>\r\n\r\nexport type PostsType = {\r\n    onlineFriends: Array<OnlineFriendType>\r\n    anyUserPostsData: Array<UsersOnWallType>\r\n    myPostsData: Array<PostType>\r\n}\r\nconst initialState: PostsType = {\r\n    myPostsData: [\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n    ],\r\n    onlineFriends: [\r\n        {id: v1(), avatar: user1},\r\n        {id: v1(), avatar: user2},\r\n        {id: v1(), avatar: user3},\r\n        {id: v1(), avatar: user4},\r\n        {id: v1(), avatar: user5},\r\n        {id: v1(), avatar: user6},\r\n        {id: v1(), avatar: user7},\r\n        {id: v1(), avatar: user8},\r\n        {id: v1(), avatar: user9},\r\n    ],\r\n    anyUserPostsData: [\r\n\r\n        {\r\n            id: v1(),\r\n            avatar: user5,\r\n            name: \"Theresa Steward\",\r\n            position: \"iOS developer\",\r\n            postPhoto: undefined,\r\n            postText: \"What did the Dursleys care if Harry lost his place on the House Quidditch team because he hadn’t practiced all summer? \" +\r\n                \"What was it to the Dursleys if Harry went back to school without any of his homework done? \" +\r\n                \"The Dursleys were what wizards called Muggles (not a drop of magical blood in their veins).\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user4,\r\n            name: \"Kyle Fisher\",\r\n            position: \"Product manager\",\r\n            postPhoto: postPhoto,\r\n            postText: \"How's your day going, guys?\",\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user7,\r\n            name: \"Audrey Alexander\",\r\n            position: \"Android developer\",\r\n            postPhoto: undefined,\r\n            postText: \"The bun runs along the road and meets a wolf. «Little bun, little bun, I want to eat you!» says the wolf. \" +\r\n                \"«I ran away from Grandfather, I ran away from Grandmother, I ran away from the hare. \" +\r\n                \"And I can run away from you, grey wolf!» says the bun and runs away.\",\r\n        },\r\n    ]\r\n}\r\nconst UserPostsReducer = (state: PostsType = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                myPostsData: [...state.myPostsData, {id: v1(), message: action.message, likesCount: 0}]\r\n            };\r\n        case ACTIONS_TYPE.DELETE_MY_POST:\r\n            return {...state, myPostsData: state.myPostsData.filter(post => post.id !== action.id)}\r\n        case ACTIONS_TYPE.DELETE_USERS_POST:\r\n            return {...state, anyUserPostsData: state.anyUserPostsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (message: string) => ({type: ACTIONS_TYPE.ADD_POST, message} as const)\r\nexport const deleteMyPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_MY_POST, id} as const);\r\nexport const deleteUsersPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_USERS_POST, id} as const);\r\n\r\nexport default UserPostsReducer;","export default __webpack_public_path__ + \"static/media/user-1.bad1de9b.jpg\";","export default __webpack_public_path__ + \"static/media/user-2.39d014b5.jpg\";","export default __webpack_public_path__ + \"static/media/user-3.5c342bb7.jpg\";","export default __webpack_public_path__ + \"static/media/user-5.95d001b9.jpg\";","export default __webpack_public_path__ + \"static/media/user-6.f8a10ddf.jpg\";","export default __webpack_public_path__ + \"static/media/user-7.aed715d8.jpg\";","export default __webpack_public_path__ + \"static/media/user-8.ae463966.jpg\";","export default __webpack_public_path__ + \"static/media/user-9.aa6a890d.jpg\";","export default __webpack_public_path__ + \"static/media/Post photo.0bd8ec12.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__2NhZI\",\"usersBlock\":\"users_usersBlock__30vL-\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__3flk2\",\"avatar\":\"users_avatar__3IP3J\",\"nameAndStatus\":\"users_nameAndStatus__nYsqe\",\"status\":\"users_status__2gbbh\",\"name\":\"users_name__3sX1D\"};","import {authAPI, userAPI} from \"../components/api\";\r\nimport {handleNetworkError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./AppReducer\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"USERS/FOLLOW\",\r\n    UNFOLLOW = \"USERS/UNFOLLOW\",\r\n    SET_USERS = \"USERS/SET-USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"USERS/SET-TOTAL-USERS-COUNT\",\r\n    IS_FETCHING = \"USERS/IS-FETCHING\",\r\n    IS_FOLLOWING_PROGRESS = \"USERS/IS-FOLLOWING-PROGRESS\"\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followSuccessAC> |\r\n    ReturnType<typeof unFollowSuccessAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC> |\r\n    ReturnType<typeof toggleIsFetchingAC>|\r\n    ReturnType < typeof toggleFollowingProgressAC>\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\nexport type UsersPageType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nconst initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state: UsersPageType = initialState, action: UsersActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case ACTIONS_TYPE.UNFOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case ACTIONS_TYPE.SET_USERS:\r\n            return {...state, items: action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case ACTIONS_TYPE.IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.FOLLOW, userID: userID} as const)\r\nexport const unFollowSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: ACTIONS_TYPE.SET_USERS, users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: ACTIONS_TYPE.IS_FETCHING,\r\n    isFetching: isFetching,\r\n} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = () => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    let {currentPage, pageSize} = getState().UsersPage\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let res = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get users\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let res = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try change page\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccessAC(userID));\r\n        } else{\r\n            dispatch(setAppErrorAC(\"Some error occupied\"));\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try follow user\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__by2mZ\",\"allPostsBlock\":\"Profile_allPostsBlock__1N_zG\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__37M42\",\"Title\":\"ChatBlock_Title__2dsU1\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__v9ogG\",\"OnlineDot\":\"ChatBlock_OnlineDot__OsHxk\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__1nHEO\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","export const placeholderText = {\r\n    profileAreaText: \"What's on your mind?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;"],"sourceRoot":""}