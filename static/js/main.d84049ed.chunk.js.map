{"version":3,"sources":["Redux/DialogsReducer.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/Common/boxStyle.module.scss","Redux/AppReducer.tsx","components/api.tsx","Redux/AuthReducer.tsx","components/Header/TopContainer.tsx","components/Header/Header.tsx","components/Navbar/ChatBlock.tsx","components/Navbar/SideBar.tsx","Redux/UsersReducer.tsx","Redux/NavBarReducer.tsx","utils/error.utils.ts","Redux/ProfileReducer.tsx","Redux/store.ts","components/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","components/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","components/Events/Events.tsx","components/Events/EventsContainer.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspense.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","App.tsx","index.tsx","components/Common/Selectors/Selectors.ts","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Navbar/Navbar.module.scss","components/Users/users.module.scss","components/Navbar/ChatBlock.module.scss","Images/defaultUserImage.jpg","components/Header/Header.module.scss","components/Profile/Profile.module.scss","components/Common/TextAreaForm/textAreaData.ts","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/Preloader/Preloader.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss"],"names":["ACTIONS_TYPE","initialState","dialogs","id","v1","name","avatar","message","messages","dialogsReducer","state","action","type","ADD_DIALOG_MESSAGE","text","addMessageAC","TextAreaForm","React","memo","props","formik","useFormik","initialValues","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","className","styles","formWrapper","textArea","maxLength","placeholder","placeholderText","getFieldProps","autoFocus","onBlur","style","color","module","exports","instance","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","profileAPI","userID","status","put","photoFile","formData","FormData","append","authAPI","post","delete","data","error","setAppErrorAC","APP_SET_ERROR","setAppStatusAC","APP_SET_STATUS","myUserID","email","login","isInitialized","isLoggedIn","setIsLoggedInAC","AUTH_SET_IS_LOGGED_IN","TopContainer","navigate","useNavigate","dispatch","useDispatch","useSelector","isLoggedInSelector","headerContent","src","alt","loginBlock","MyProfilePhoto","Button","onClick","a","res","resultCode","console","log","Header","headerWrapper","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","SideBar","onlineFriends","map","f","to","sideWrapper","NavItem","isActive","Title","sidebarReducer","handleNetworkError","response","items","totalCount","isFetching","following","followSuccessAC","FOLLOW","unFollowSuccessAC","UNFOLLOW","setUsersAC","users","SET_USERS","setUsersTotalCountAC","serverTotalUsersCount","SET_TOTAL_USERS_COUNT","toggleIsFetchingAC","IS_FETCHING","toggleFollowingProgressAC","followingIsProgress","IS_FOLLOWING_PROGRESS","setStatusAC","SET_STATUS","postsData","likesCount","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","photos","small","large","getProfileTC","userId","SET_SOME_USER_PROFILE","getUserStatusTC","useAppDispatch","rootReducer","combineReducers","ProfilePage","ADD_POST","SAVE_MY_PROFILE_PHOTO","DELETE_POST","filter","DialogPage","UsersPage","u","followed","SET_CURRENT_PAGE","Auth","AUTH_SET_IS_INITIALIZED","AUTH_SET_PROFILE_DATA","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","useAppSelector","Users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","defaultUserPhoto","userPhoto","usersWrapper","Pagination","onChange","event","page","size","variant","shape","count","data-testid","user","usersBlock","avatarAndFollowButton","disabled","some","nameAndStatus","Preloader","main","progress","CircularProgress","UserContainerFC","usersSelector","isFetchingSelector","pageSizeSelector","currentPageSelector","totalUserCountSelector","followingArr","followingArrSelector","useEffect","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","statusSelector","Number","useParams","useState","localStatus","setLocalStatus","editMode","setEditMode","activateEditMode","deactivateEditMode","updateUserStatusTC","editableDiv","input","e","currentTarget","value","onKeyPress","key","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","ProfileInfo","maxPictureSize","myId","userIDSelector","photoRef","useRef","open","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","handleCloseModal","wrapper","descriptionBlock","img","menu","statusBlock","profileName","profileStatus","Modal","onClose","Box","sx","display","flexDirection","justifyContent","alignItems","fontSize","IconButton","right","Close","marginBottom","htmlFor","ref","accept","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","textTransform","current","click","getState","Post","setLikesCount","round","random","itemWrapper","userAndLoginBlock","likeCount","MyPosts","postsElements","reverse","postBlock","posts","ProfileFC","postsDataSelector","profileSelector","commonStyle","mainBox","profileAreaText","ProfileContainerFC","PATH","LOGIN","Events","EventsContainer","Photos","PhotosContainer","content","Login","serverError","isPassType","setIsPassType","test","password","rememberMe","HOME","Grid","container","item","FormControl","FormLabel","href","rel","FormGroup","mTop","InputLabel","Input","onFocus","touched","endAdornment","InputAdornment","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","FormControlLabel","label","control","Checkbox","checked","withSuspense","Component","Suspense","fallback","ErrorSnackBar","handleClose","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","AlertTitle","DialogContainerFC","lazy","PROFILE","USERS","ERROR404","ANY_ROUTE","DIALOGS","EVENTS","PHOTOS","appStatus","isInitializedSelector","profileData","path","element","UsersContainerFC","ReactDOM","render","document","getElementById","dialogsAreaText","myPhoto","myLoginName","myProfilePhotoWrapper","mySmallPhoto","userName"],"mappings":"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","file":"static/js/main.d84049ed.chunk.js","sourcesContent":["import {v1} from \"uuid\";\r\n\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport enum ACTIONS_TYPE {\r\n    ADD_DIALOG_MESSAGE = \"DIALOGS/ADD-DIALOG-MESSAGE\",\r\n}\r\nexport type DialogActionsType = ReturnType<typeof addMessageAC>\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Boris Jonson\",\r\n            avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\",\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: DialogActionsType): DialogsStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text} as const)\r\n\r\n","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: MyPostsPropsType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(!values.text){\r\n                errors.text = \"Enter a message\"\r\n            }\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <textarea className={styles.textArea} maxLength={1000}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")}\r\n                         autoFocus={true} onBlur={() => formik.errors.text = \"\"}\r\n            />\r\n                <div>\r\n                    <Button type={\"submit\"}>Publish</Button>\r\n                </div>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBox\":\"boxStyle_mainBox__24wr7\"};","\r\n\r\n//types\r\nexport type NullableType<T> = null | T\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\",\r\n    APP_SET_STATUS = \"APP/SET-STATUS\"\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    error: null as NullableType<string>,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTIONS_TYPE.APP_SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: NullableType<string>) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: ACTIONS_TYPE.APP_SET_STATUS, status} as const);\r\n\r\n\r\n\r\n\r\n\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersPageType} from \"../Redux/UsersReducer\";\r\nimport {ProfileDataType} from \"../Redux/ProfileReducer\";\r\nimport {LoginParamsType} from \"../Redux/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\ntype RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<string>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(photoFile:File){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<RespType<{photos:{small:\"\", large:\"\"}}>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    }\r\n\r\n}\r\n","import {authAPI, AuthDataType} from \"../components/api\";\r\nimport {setAppErrorAC} from \"./AppReducer\";\r\nimport {AppThunkDispatch} from \"./store\";\r\n\r\n\r\n\r\nexport const myUserID = 21748;\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    AUTH_SET_IS_LOGGED_IN = \"SET-IS-LOGGED-IN\",\r\n    AUTH_SET_IS_INITIALIZED = \"SET-IS-INITIALIZED\",\r\n    AUTH_SET_PROFILE_DATA = \"SET-PROFILE-DATA\",\r\n}\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: myUserID,\r\n        email: \"\",\r\n        login: \"\"\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.AUTH_SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.AUTH_SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.AUTH_SET_PROFILE_DATA:\r\n            return {...state, data: action.data}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_IS_LOGGED_IN, isLoggedIn} as const);\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_PROFILE_DATA, data: profileData} as const);\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.me();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.login(data);\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n        } else {\r\n            dispatch(setAppErrorAC(res.data.messages[0]))\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../Redux/AuthReducer\";\r\nimport {MyProfilePhoto} from \"../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\n\r\n\r\nexport function TopContainer() {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n\r\n\r\n    const logOutHandler = () =>{\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <img src={\"https://templates.envytheme.com/zust/default/assets/images/logo.png\"} alt=\"logo\"/>\r\n                <div className={styles.loginBlock}>\r\n                    {isLoggedIn && <MyProfilePhoto/>}\r\n                    {isLoggedIn && <Button className={styles.login} onClick={logOutHandler}>\r\n                        Log out\r\n                    </Button>}\r\n                </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {TopContainer} from \"./TopContainer\";\r\n\r\n\r\n\r\nexport function Header(){\r\n    return(\r\n            <header className={styles.headerWrapper}>\r\n                <TopContainer/>\r\n            </header>\r\n\r\n    )\r\n}","import {OnlineFriendType} from \"../OldComponents/OldStore\";\r\nimport React from \"react\";\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\n\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport style from \"./Navbar.module.scss\"\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SideBarType} from \"../OldComponents/OldStore\";\r\nimport {ChatBlock} from \"./ChatBlock\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\n\r\ntype NavBarPropsType = {\r\n    SideBar: SideBarType,\r\n}\r\n\r\nexport function SideBar(props: NavBarPropsType) {\r\n\r\n    let onlineFriends = props.SideBar.onlineFriends.map((f) =>\r\n        <NavLink key={f.id} to={\"/friends\" + f.id}>\r\n            <ChatBlock\r\n                       id={f.id}\r\n                       avatar={f.avatar}/>\r\n        </NavLink>)\r\n    return (\r\n        <aside className={style.sideWrapper}>\r\n            <div className={style.NavItem}>\r\n                <NavLink  to={`/profile/${myUserID}`} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/dialogs\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/events\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Events</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/photos\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Photos</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/users\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Find Friends</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/settings\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriends}\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import {authAPI, userAPI} from \"../components/api\";\r\nimport {handleNetworkError} from \"../utils/error.utils\";\r\nimport {AppThunkDispatch} from \"./store\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"USERS/FOLLOW\",\r\n    UNFOLLOW = \"USERS/UNFOLLOW\",\r\n    SET_USERS = \"USERS/SET-USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"USERS/SET-TOTAL-USERS-COUNT\",\r\n    IS_FETCHING = \"USERS/IS-FETCHING\",\r\n    IS_FOLLOWING_PROGRESS = \"USERS/IS-FOLLOWING-PROGRESS\"\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followSuccessAC> |\r\n    ReturnType<typeof unFollowSuccessAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC> |\r\n    ReturnType<typeof toggleIsFetchingAC>|\r\n    ReturnType < typeof toggleFollowingProgressAC>\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\nexport type UsersPageType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nconst initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state: UsersPageType = initialState, action: UsersActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case ACTIONS_TYPE.UNFOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case ACTIONS_TYPE.SET_USERS:\r\n            return {...state, items: action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case ACTIONS_TYPE.IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.FOLLOW, userID: userID} as const)\r\nexport const unFollowSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: ACTIONS_TYPE.SET_USERS, users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: ACTIONS_TYPE.IS_FETCHING,\r\n    isFetching: isFetching,\r\n} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = (currentPage: number, pageSize: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(response.data.items));\r\n        dispatch(setUsersTotalCountAC(response.data.totalCount));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(response.data.items));\r\n        dispatch(setUsersTotalCountAC(response.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\n","import {SideBarType} from \"../components/OldComponents/OldStore\";\r\nimport {v1} from \"uuid\";\r\n\r\nlet initialState: SideBarType = {\r\n    onlineFriends: [\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-3.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-6.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-2.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-7.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-10.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-9.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-5.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-8.jpg\"},\r\n    ],\r\n}\r\nconst sidebarReducer = (state: SideBarType = initialState) => {\r\n    return state\r\n}\r\nexport default sidebarReducer;","import {AxiosError} from \"axios\";\r\nimport {AppThunkDispatch} from \"../Redux/store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../Redux/AppReducer\";\r\n\r\nexport const handleNetworkError = (error: AxiosError<{ error: string }>, dispatch: AppThunkDispatch) =>{\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n    dispatch(setAppErrorAC(error.response?.data.error || \"some Error\"));\r\n}","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../components/api\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\n\r\nimport {handleNetworkError} from \"../utils/error.utils\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    SAVE_MY_PROFILE_PHOTO = \"PROFILE/SAVE-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n    DELETE_POST = \"PROFILE/DELETE-POST\"\r\n}\r\n\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionAC>\r\n    | ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof savePhotoAC>\r\n    | ReturnType<typeof setStatusAC>\r\n    | ReturnType<typeof deletePostAC>\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type userProfileContactType = {\r\n    facebook: string | undefined\r\n    website: string | null\r\n    vk: string | undefined\r\n    twitter: string | undefined\r\n    instagram: string | undefined\r\n    youtube: string | undefined\r\n    github: string | null | undefined\r\n    mainLink: string | null\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileDataType = {\r\n    aboutMe: string | null\r\n    contacts: userProfileContactType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    photos: userProfilePhotosType\r\n\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (data: string) => ({type: ACTIONS_TYPE.ADD_POST, data} as const)\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({type: ACTIONS_TYPE.SET_SOME_USER_PROFILE, profile} as const);\r\nexport const savePhotoAC = (photos: userProfilePhotosType) => ({type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO, photos} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\nexport const deletePostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_POST, id} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n\r\n    postsData: [\r\n        {id: v1(), message: \"Do you have a job for me? What if I find it?\", likesCount: 0},\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n        {id: v1(), message: \"What is the good weather today,isn't it?\", likesCount: 0},\r\n    ],\r\n    status: \"\",\r\n\r\n    profile: {\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {id: v1(), message: action.data, likesCount: 0}]\r\n            };\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ACTIONS_TYPE.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        case ACTIONS_TYPE.DELETE_POST:\r\n            return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getProfile(userId);\r\n    try {\r\n        dispatch(setUserProfileAC(res.data));\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getStatus(userId);\r\n    try {\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        }\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.updateStatus(status)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        }\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\nexport const uploadAvatarTC = (photoFile: File) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    const userId = getState().Auth.data.id;\r\n    let res = await profileAPI.uploadAvatar(photoFile)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n            dispatch(await getProfileTC(userId))\r\n        }\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\nimport sidebarReducer from \"./NavBarReducer\";\r\nimport {UsersActionsType, userReducer} from \"./UsersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk'\r\nimport {appReducer, AppActionsType} from \"./AppReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogsReducer} from \"./DialogsReducer\";\r\n\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nexport type RootActionsType = AuthActionsType | AppActionsType | ProfileActionsType | UsersActionsType\r\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\r\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    SideBar: sidebarReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../Redux/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../Redux/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC(currentPage, pageSize));\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {statusSelector} from \"../Common/Selectors/Selectors\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if ( userId !== myUserID ) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID && !status){\r\n\r\n        return (\r\n        <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n        </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID){\r\n        return (\r\n        <div className={styles.editableDiv}\r\n             data-testid=\"editableMyDiv\"\r\n            onClick={activateEditMode}>\r\n            {status}\r\n        </div>)\r\n    }\r\n\r\n    else return <input className={styles.input}\r\n                       onChange={changeTitle}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={deactivateEditMode}\r\n                       type=\"text\"\r\n                       data-testid=\"input\"\r\n                       value={localStatus}/>\r\n};\r\n\r\n","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType, uploadAvatarTC,\r\n} from \"../../../Redux/ProfileReducer\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../ProfileStatus\";\r\nimport Modal from \"@mui/material/Modal/Modal\";\r\nimport {Box} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useAppSelector} from \"../../../Redux/store\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../Redux/AppReducer\";\r\nimport {userIDSelector} from \"../../Common/Selectors/Selectors\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 350,\r\n    bgcolor: '#F9F9FE',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: 2,\r\n}\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\r\n    const maxPictureSize = 10000000;\r\n    const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos.large);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const myId = useAppSelector(userIDSelector);\r\n    const photoRef = useRef<HTMLInputElement>(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\r\n    const [fileAvatar, setFileAvatar] = useState<any>();\r\n    const dispatch = useDispatch();\r\n    const handleCloseModal = () => setOpen(false);\r\n    const handleSaveAvatar = () => {\r\n        dispatch(uploadAvatarTC(fileAvatar));\r\n        handleCloseModal();\r\n    }\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const reader = new FileReader();\r\n        const file = e.target?.files;\r\n\r\n        if ((file && file[0].type) && (file[0].type === \"image/png\" || file[0].type === \"image/jpeg\" )) {\r\n            setFileAvatar(file[0])\r\n            reader.onloadend = function () {\r\n                setLocalAvatar(reader.result)\r\n            }\r\n            if (file[0].size && file[0].size <= maxPictureSize) {\r\n                reader.readAsDataURL(file[0])\r\n            } else {\r\n                dispatch(setAppErrorAC(`Your file size must be less then ${maxPictureSize/1000000}MB 😕`))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setAppErrorAC(`Your file has not in .png .jpeg format. Please choose the right file`))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.descriptionBlock}>\r\n                <img className={styles.img} src={props.profile?.photos.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>\r\n                {userId === myId && <div className={styles.menu} onClick={() => setOpen(true)}><p>Change your photo</p></div>}\r\n            </div>\r\n\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>{props.profile.fullName}</div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                <div className={styles.lookingForAJobDescription}>\r\n                    Looking for a job status: {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div className={styles.contacts}>\r\n                    <span>contacts: </span>\r\n                    <div>facebook: {props.profile.contacts.facebook}</div>\r\n                    <div>instagram: {props.profile.contacts.instagram}</div>\r\n                    <div>YouTube: {props.profile.contacts.youtube}</div>\r\n                    <div>Vk: {props.profile.contacts.vk}</div>\r\n                </div>\r\n            </div>\r\n            <Modal open={open}\r\n                   onClose={handleCloseModal}\r\n            >\r\n                <Box sx={style}>\r\n                    <Box>\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: 'center',\r\n                            alignItems: \"center\", position: \"relative\"\r\n                        }}><strong>\r\n                            <p style={{fontSize: \"20px\"}}>Uploading profile photo</p>\r\n                        </strong></Box>\r\n                        <IconButton style={{position: \"absolute\", top: \"5px\", right: \"10px\"}}\r\n                                    onClick={handleCloseModal}>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: 'center',\r\n                        alignItems: \"center\"\r\n                    }}>\r\n\r\n                        <Box id=\"outer-container\">\r\n                            <img src={base64Avatar || userPhoto} alt=\"avatar\"\r\n                                 width={\"200px\"} style={{borderRadius: \"8px\", marginBottom: \"10px\"}}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <input type={\"file\"} style={{display: \"none\"}} id={\"answer\"} ref={photoRef}\r\n                                       accept=\"image/*\" onChange={onChangeAvatar}/>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={() => photoRef.current && photoRef.current.click()}>Upload\r\n                                    photo</Button>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={handleSaveAvatar}>Save\r\n                                </Button>\r\n                            </label>\r\n                        </Box>\r\n                        <p>You can upload images in JPG or PNG format</p>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\n\r\ntype MyPostsPropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likesCount, setLikesCount] = useState<number>();\r\n    const maxLikesCount = 1000;\r\n    const generateLike = () => {\r\n        setLikesCount(Math.round(Math.random() * maxLikesCount));\r\n    };\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.userAndLoginBlock}>\r\n                <MyProfilePhoto/>\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div>\r\n                <span>Like: </span>{props.likeCount !== 0 ? props.likeCount : likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport { TextAreaForm } from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return <div className={styles.postBlock}>\r\n        <h3>My posts</h3>\r\n        <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n        <div className={styles.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n\r\n})\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {addPostActionAC} from \"../../Redux/ProfileReducer\";\r\nimport commonStyle from \"../Common/boxStyle.module.scss\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {postsDataSelector, profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\n\r\ntype ProfilePropsType = {\r\n    userID: number| null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(postsDataSelector);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const addMessage = (text: string) =>{\r\n        return  dispatch(addPostActionAC(text));\r\n    }\r\n    return (\r\n        <div className={`${styles.wrapper} ${commonStyle.mainBox}`}>\r\n            <ProfileInfo profile={profile}/>\r\n            {props.userID === myUserID && <MyPosts placeholderText={placeholderText.profileAreaText}\r\n                                                   callBack={addMessage}\r\n                                                   postsData={postsData}/>}\r\n        </div>)\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector, userIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() =>{\r\n\r\n    const userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const myId = useAppSelector(userIDSelector);\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId !== myId){\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }else{\r\n            dispatch(getProfileTC(myId));\r\n            dispatch(getUserStatusTC(myId));\r\n        }\r\n\r\n    }, [userId, dispatch, myId]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport {loginTC} from \"../../Redux/AuthReducer\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {NullableType, setAppErrorAC} from \"../../Redux/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n    return (\r\n\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item justifyContent={'center'}>\r\n                <h1>Login</h1>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <FormControl  sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {/*<TextField label=\"Email\"\r\n                                       placeholder={\"email\"}\r\n                                       type=\"email\"\r\n                                       margin=\"normal\"\r\n                                       {...formik.getFieldProps(\"email\")} onFocus={removeError}/>*/}\r\n\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n                            {/*<TextField type={\"password\"}\r\n                                       label=\"Password\"\r\n                                       margin=\"normal\"\r\n                                       placeholder={\"Password\"}\r\n                                       {...formik.getFieldProps(\"password\")}\r\n                                       onFocus={removeError}/>\r\n\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}*/}\r\n\r\n\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n                            <Button variant={'contained'}\r\n                                    type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\r\n\r\n    return (props:T):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {AlertTitle} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/store\";\r\nimport {NullableType, setAppErrorAC} from \"../../Redux/AppReducer\";\r\n\r\n\r\n\r\nexport const ErrorSnackBar = () => {\r\n    const dispatch = useAppDispatch();\r\n    const error = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert\r\n                onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>{error}</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {SideBar} from \"./components/Navbar/SideBar\";\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {store, useAppSelector} from \"./Redux/store\";\r\nimport UsersContainerFC from './components/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport {EventsContainer} from \"./components/Events/EventsContainer\";\r\nimport PhotosContainer from \"./components/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./Redux/AuthReducer\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector, isLoggedInSelector, userIDSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\nimport {RequestStatusType} from \"./Redux/AppReducer\";\r\nimport {ErrorSnackBar} from \"./components/ErrorSnackBar/ErrorSnackBar\";\r\n\r\n\r\nconst DialogContainerFC = React.lazy(() => import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE: \"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS: \"/events\",\r\n    PHOTOS: \"/photos\"\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\r\n    const state = store.getState();\r\n    const dispatch = useDispatch();\r\n    const userID = useAppSelector(userIDSelector)\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector);\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={\"App\"}>\r\n            <Header/>\r\n            <main className={\"mainContent\"}>\r\n                {isLoggedIn && <SideBar SideBar={state.SideBar}/>}\r\n                {appStatus === 'loading' && <Preloader/>}\r\n                <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}/${userID}`}/>}/>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={`${PATH.PROFILE}/:userId`} element={withSuspense(ProfileContainerFC)({})}/>\r\n                    <Route path={PATH.DIALOGS} element={withSuspense(DialogContainerFC)({})}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>}/>\r\n                    <Route path={PATH.ERROR404} element={<div>Error 404</div>}/>\r\n                </Routes>\r\n                <ErrorSnackBar/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./Redux/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import {AppRootStateType} from \"../../../Redux/store\";\r\nimport {UserType} from \"../../../Redux/UsersReducer\";\r\nimport {PostType, ProfileDataType} from \"../../../Redux/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const userIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const postsDataSelector = (state:AppRootStateType):Array<PostType> =>{\r\n    return state.ProfilePage.postsData;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__1slqq\",\"statusBlock\":\"ProfileInfo_statusBlock__12kNH\",\"profileName\":\"ProfileInfo_profileName__QENTj\",\"profileStatus\":\"ProfileInfo_profileStatus__P1vsw\",\"contacts\":\"ProfileInfo_contacts__yTcQt\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__252WB\",\"menu\":\"ProfileInfo_menu__4TXbA\",\"modalMainBox\":\"ProfileInfo_modalMainBox__3RTcD\",\"avatarBlock\":\"ProfileInfo_avatarBlock__3CI4t\",\"avatarImg\":\"ProfileInfo_avatarImg__3-stZ\",\"iconUpload\":\"ProfileInfo_iconUpload__aSS_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideWrapper\":\"Navbar_sideWrapper__1dV1_\",\"NavItem\":\"Navbar_NavItem__3u4wb\",\"active\":\"Navbar_active__2IssC\",\"ChatBlock\":\"Navbar_ChatBlock__1-WE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__2NhZI\",\"usersBlock\":\"users_usersBlock__30vL-\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__3flk2\",\"avatar\":\"users_avatar__3IP3J\",\"nameAndStatus\":\"users_nameAndStatus__nYsqe\",\"status\":\"users_status__2gbbh\",\"name\":\"users_name__3sX1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__5ewrq\",\"Title\":\"ChatBlock_Title__YfUmN\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__dibQ_\",\"OnlineDot\":\"ChatBlock_OnlineDot__2krZz\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__14FnN\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"login\":\"Header_login__2_qsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__3dKt0\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","export const placeholderText = {\r\n    profileAreaText: \"What's new with you?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/store\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {userIDSelector} from \"../Selectors/Selectors\";\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate()\r\n    const myPhoto = useSelector<AppRootStateType, string | undefined>(state => state.ProfilePage.profile.photos.small);\r\n    const myLoginName = useSelector<AppRootStateType, string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = ()=>{\r\n        navigate(`/profile/${userID}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div className={styles.userName} onClick={navigateToMyMage}>\r\n                {myLoginName}\r\n            </div>\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__2BYGT\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"userAndLoginBlock\":\"Post_userAndLoginBlock__2x_uT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"posts\":\"MyPosts_posts__2zln9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\"};"],"sourceRoot":""}