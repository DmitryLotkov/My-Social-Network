{"version":3,"sources":["components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/Preloader/Preloader.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","Redux/NavBarReducer.tsx","Redux/store.ts","Redux/AppReducer.tsx","Redux/DialogsReducer.tsx","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/Common/Selectors/Selectors.ts","components/EditProfile/EditProfile.module.scss","utils/error.utils.ts","components/Header/Header.module.scss","components/Error404/Error404.module.scss","components/Profile/ProdileData/ContactBlock.module.scss","components/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","components/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","components/Profile/ProdileData/ContactBlock.tsx","components/Navbar/ChatBlock.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","components/Events/Events.tsx","components/Events/EventsContainer.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspense.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","components/EditProfile/EditProfile.tsx","Images/Logo.svg","components/Header/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoutes.tsx","Images/astronaut.svg","Images/earth.svg","Images/moon.svg","Images/rocket.svg","Images/404Text.svg","components/Error404/Error404.tsx","App.tsx","index.tsx","constants.ts","Redux/ProfileReducer.tsx","components/api.tsx","components/Profile/ProfileInfo/ProfileInfo.module.scss","Redux/AuthReducer.tsx","components/Users/users.module.scss","Redux/UsersReducer.tsx","components/OldComponents/ChatBlock.module.scss","Images/defaultUserImage.jpg","components/Profile/Profile.module.scss","components/Common/TextAreaForm/textAreaData.ts","components/Profile/MyPosts.module.scss"],"names":["module","exports","initialState","onlineFriends","id","v1","avatar","sidebarReducer","state","useAppDispatch","useDispatch","rootReducer","combineReducers","ProfilePage","profileReducer","DialogPage","dialogsReducer","SideBar","UsersPage","userReducer","Auth","authReducer","App","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","useAppSelector","useSelector","ACTIONS_TYPE","error","status","action","type","APP_SET_ERROR","APP_SET_STATUS","setAppErrorAC","setAppStatusAC","dialogs","name","message","messages","ADD_DIALOG_MESSAGE","text","addMessageAC","MyProfilePhoto","React","memo","navigate","useNavigate","myPhoto","profile","photos","small","myLoginName","data","login","userID","userIDSelector","className","styles","myProfilePhotoWrapper","mySmallPhoto","src","defaultUserPhoto","alt","userName","onClick","TextAreaForm","props","formik","useFormik","initialValues","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","formWrapper","multiline","textArea","placeholder","placeholderText","getFieldProps","onBlur","style","backgroundColor","variant","color","statusSelector","postsDataSelector","postsData","profileSelector","isLoggedInSelector","isLoggedIn","isInitializedSelector","isInitialized","isFetchingSelector","isFetching","usersSelector","items","pageSizeSelector","pageSize","currentPageSelector","currentPage","totalUserCountSelector","totalCount","followingArrSelector","following","handleNetworkError","Error","dispatch","response","handleServerAppError","handleServerNetworkError","Users","users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","userPhoto","usersWrapper","Pagination","onChange","event","page","size","shape","count","data-testid","map","user","usersBlock","avatarAndFollowButton","followed","Button","disabled","some","nameAndStatus","Preloader","main","progress","CircularProgress","UserContainerFC","followingArr","useEffect","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","userId","Number","useParams","useState","localStatus","setLocalStatus","editMode","setEditMode","activateEditMode","deactivateEditMode","updateUserStatusTC","myUserID","editableDiv","input","e","currentTarget","value","onKeyPress","key","ContactBlock","contactsBlock","contacts","vk","contactsBlockItem","icon","faVk","href","instagram","faInstagram","youtube","faYoutube","github","faGithub","twitter","faTwitter","facebook","faFacebook","website","faFirefoxBrowser","mainLink","faGoogle","lookingForAJobDescription","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","ProfileInfo","large","myId","photoRef","useRef","open","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","openPopover","setOpenPopover","popoverAnchor","show","Object","every","item","handleCloseModal","onlineFriendsArr","f","profileInfoWrapper","profilePhoto","avatarWrapper","menu","statusBlock","profileName","fullName","popover","ref","fontSize","lookingForAJob","profileStatus","profileDescription","aboutMe","Title","Modal","onClose","Box","sx","display","flexDirection","justifyContent","alignItems","IconButton","right","Close","marginBottom","htmlFor","accept","reader","FileReader","file","target","files","onloadend","result","maxPictureSize","readAsDataURL","textTransform","current","click","uploadAvatarTC","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Post","likesCount","setLikesCount","round","random","itemWrapper","userAndLoginBlock","likeCount","MyPosts","postsElements","reverse","postBlock","myPostForm","newPostHeader","posts","ProfileFC","profileWrapper","profileAreaText","addPostActionAC","ProfileContainerFC","getProfileTC","getUserStatusTC","to","PATH","LOGIN","Events","EventsContainer","Photos","PhotosContainer","content","Login","serverError","captchaUrl","isPassType","setIsPassType","email","test","password","rememberMe","captcha","loginTC","HOME","Grid","container","FormControl","FormLabel","rel","FormGroup","mTop","InputLabel","Input","onFocus","touched","endAdornment","InputAdornment","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","FormControlLabel","label","control","Checkbox","checked","marginTop","withSuspense","Component","Suspense","fallback","ErrorSnackBar","handleClose","reason","Snackbar","autoHideDuration","Alert","severity","AlertTitle","EditProfile","s","editProfileWrapper","enableReinitialize","updateProfileTC","PROFILE","formRow","contactText","TextField","background","handleChange","handleBlur","helperText","labelPlacement","button","Navigation","headerContent","logo","sideWrapper","NavItem","isActive","activeNavLink","unActiveNavLink","DIALOGS","USERS","EDIT_PROFILE","loginBlock","jobStatus","logOutTC","Header","headerWrapper","PrivateRoutes","location","useLocation","encodeURIComponent","pathname","replace","Error404","ErrorWrapper","stars","centralBody","image404","errorText","btnGoHome","objects","objectRocket","rocket","earthMoon","objectEarth","earth","objectMoon","moon","boxAstronaut","objectAstronaut","astronaut","glowingStars","star","DialogContainerFC","lazy","ERROR404","ANY_ROUTE","EVENTS","PHOTOS","appStatus","initializeAppTC","path","element","UsersContainerFC","ReactDOM","render","document","getElementById","Yup","min","max","required","matches","nullable","url","ADD_POST","setStatusAC","SET_STATUS","SET_SOME_USER_PROFILE","SAVE_MY_PROFILE_PHOTO","DELETE_POST","filter","post","a","profileAPI","getProfile","res","getStatus","console","log","updateStatus","resultCode","photoFile","getState","uploadAvatar","updateProfile","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","get","put","formData","FormData","append","authAPI","me","delete","logout","getFollowers","securityAPI","SET_IS_LOGGED_IN","SET_IS_INITIALIZED","SET_AUTH_PROFILE_DATA","GET_CAPTCHA","setIsLoggedInAC","getCaptchaAC","profileData","getCaptchaTC","FOLLOW","u","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROGRESS","followingIsProgress","followSuccessAC","unFollowSuccessAC","setUsersAC","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","dialogsAreaText"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,sBAAwB,8CAA8C,aAAe,qCAAqC,UAAY,oC,oBCAxJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,4BAA4B,QAAU,6B,oBCAlGD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,kBAAoB,kC,oBCA9ED,EAAOC,QAAU,CAAC,YAAc,kCAAkC,SAAW,iC,2JCEzEC,EAA4B,CAC5BC,cAAe,CACX,CAACC,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,gEACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,+DACnB,CAACF,GAAIC,eAAMC,OAAQ,iEAMZC,EAHQ,WAAwC,IAAvCC,EAAsC,uDAAjBN,EACzC,OAAOM,G,0DCCEC,EAAyCC,IAChDC,EAAcC,YAAgB,CAChCC,YAAaC,IACbC,WAAYC,IACZC,QAASV,EACTW,UAAWC,IACXC,KAAMC,IACNC,IAAKC,MAQHC,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YAAYlB,EAAaa,EAAiBM,YAAgBC,OAElEC,EAAqDC,IAIlER,OAAOG,MAAQA,G,0ICrCHM,E,kBAAAA,K,8BAAAA,E,iCAAAA,M,KAQZ,IAAMhC,EAAe,CACjBiC,MAAO,KACPC,OAAQ,QAICb,EAAa,WAAuF,IAAtFf,EAAqF,uDAA3DN,EAAcmC,EAA6C,uCAC5G,OAAQA,EAAOC,MACX,KAAKJ,EAAaK,cACd,OAAO,2BAAI/B,GAAX,IAAkB2B,MAAOE,EAAOF,QACpC,KAAKD,EAAaM,eACd,OAAO,2BAAIhC,GAAX,IAAkB4B,OAAQC,EAAOD,SACrC,QACI,OAAO5B,IAINiC,EAAgB,SAACN,GAAD,MAAkC,CAACG,KAAMJ,EAAaK,cAAeJ,UACrFO,EAAiB,SAACN,GAAD,MAAgC,CAAEE,KAAMJ,EAAaM,eAAgBJ,Y,yGCpBvFF,E,kCAAAA,K,iDAAAA,M,KAcZ,IAAMhC,EAAiC,CAEnCyC,QAAS,CACL,CACIvC,GAAIC,eACJuC,KAAM,eACNtC,OAAQ,8DACRuC,QAAS,+CAIjBC,SAAU,CACN,CAAC1C,GAAIC,eAAMwC,QAAS,4CAIf7B,EAAiB,WAA0F,IAAzFR,EAAwF,uDAA9DN,EAAcmC,EAAgD,uCACnH,OAAQA,EAAOC,MACX,KAAKJ,EAAaa,mBACd,OAAO,2BACAvC,GADP,IAEIsC,SAAS,GAAD,mBAAMtC,EAAMsC,UAAZ,CAAsB,CAAC1C,GAAIC,eAAMwC,QAASR,EAAOW,UAIjE,QACI,OAAOxC,IAMNyC,EAAe,SAACD,GAAD,MAAmB,CAACV,KAAMJ,EAAaa,mBAAoBC,U,iCCxDvF,uHASaE,EAAiBC,IAAMC,MAAK,WACrC,IAAMC,EAAWC,cACXC,EAAUvB,aAAmC,SAAAxB,GAAK,uBAAIA,EAAMK,YAAY2C,QAAQC,cAA9B,aAAI,EAAkCC,SACxFC,EAAc3B,aAA8B,SAAAxB,GAAK,OAAIA,EAAMY,KAAKwC,KAAKC,SACrEC,EAAS7B,YAAY8B,KAK3B,OACI,sBAAKC,UAAWC,IAAOC,sBAAvB,UACI,qBAAKF,UAAWC,IAAOE,aAAcC,IAAKb,GAAWc,IAAkBC,IAAK,cAC5E,qBAAKN,UAAWC,IAAOM,SAAUC,QAPhB,WACrBnB,EAAS,YAAD,OAAaS,KAMjB,SACKH,W,4KCXJc,EAAetB,IAAMC,MAAK,SAACsB,GAIpC,IAAMC,EAASC,YAAU,CACrBC,cAAe,CACX7B,KAAM,IAEV8B,SAAU,SAAAC,GACN,IAAMC,EAA0B,GAOhC,OANID,EAAO/B,OACPgC,EAAOhC,KAAO,mBAEf+B,EAAO/B,KAAKiC,QAAUC,MACrBF,EAAOhC,KAAP,mCAA0CkC,IAA1C,cAEGF,GAGXG,SAAU,SAACJ,EAAD,GAA0B,IAAhBK,EAAe,EAAfA,UACI,KAAhBL,EAAO/B,MACP0B,EAAMW,SAASN,EAAO/B,MAC1BoC,OAMR,OACI,uBAAOD,SAAUR,EAAOW,aAAxB,UACI,sBAAKtB,UAAWC,IAAOsB,YAAvB,UACI,cAAC,IAAD,yBAAYC,WAAW,EAAMxB,UAAWC,IAAOwB,SACtCC,YAAahB,EAAMiB,iBACfhB,EAAOiB,cAAc,SAFlC,IAE2CC,OAAQ,kBAAMlB,EAAOK,OAAOhC,KAAO,OAE9E,8BACI,cAAC,IAAD,CAAQ8C,MAAO,CAACC,gBAAiB,WAAYC,QAAS,YAAa1D,KAAM,SAAzE,SAAmF,cAAC,IAAD,WAG1FqC,EAAOK,OAAOhC,MAAS,sBAAK8C,MAAO,CAACG,MAAO,OAApB,cAA8BtB,EAAOK,OAAOhC,e,gCC9ChF,wZAAO,IAAMkD,EAAiB,SAAC1F,GAC3B,OAAOA,EAAMK,YAAYuB,QAEhB2B,EAAiB,SAACvD,GAC3B,OAAOA,EAAMY,KAAKwC,KAAKxD,IAEd+F,EAAoB,SAAC3F,GAC9B,OAAOA,EAAMK,YAAYuF,WAEhBC,EAAkB,SAAC7F,GAC5B,OAAOA,EAAMK,YAAY2C,SAEhB8C,EAAqB,SAAC9F,GAC/B,OAAOA,EAAMY,KAAKmF,YAETC,EAAwB,SAAChG,GAClC,OAAOA,EAAMY,KAAKqF,eAETC,EAAqB,SAAClG,GAC/B,OAAOA,EAAMU,UAAUyF,YAEdC,EAAgB,SAACpG,GAC1B,OAAOA,EAAMU,UAAU2F,OAEdC,EAAmB,SAACtG,GAC7B,OAAOA,EAAMU,UAAU6F,UAEdC,EAAsB,SAACxG,GAChC,OAAOA,EAAMU,UAAU+F,aAEdC,EAAyB,SAAC1G,GACnC,OAAOA,EAAMU,UAAUiG,YAEdC,EAAuB,SAAC5G,GACjC,OAAOA,EAAMU,UAAUmG,Y,+DCrC3BrH,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,QAAU,6BAA6B,QAAU,6BAA6B,YAAc,iCAAiC,cAAgB,mCAAmC,OAAS,8B,sDCCxQ,kHAIaqH,EAAqB,SAACC,EAAsCC,GAA+B,IAAD,EAEnGA,EAAS9E,YAAe,WACxB8E,EAAS/E,aAAc,UAAA8E,EAAME,gBAAN,eAAgB7D,KAAKzB,QAAS,gBAI5CuF,EAAuB,SAAI9D,EAAmB4D,GACnD5D,EAAKd,SAASmC,OACduC,EAAS/E,YAAcmB,EAAKd,SAAS,KAErC0E,EAAS/E,YAAc,wBAE3B+E,EAAS9E,YAAe,YAGfiF,EAA2B,SAACxF,EAAaqF,GAClDA,EAAS/E,YAAcN,EAAMU,UAC7B2E,EAAS9E,YAAe,a,mBCvB5B1C,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,YAAc,4BAA4B,QAAU,wBAAwB,gBAAkB,gCAAgC,cAAgB,8BAA8B,KAAO,qBAAqB,cAAgB,8BAA8B,WAAa,2BAA2B,UAAY,0BAA0B,MAAQ,wB,mBCA5YD,EAAOC,QAAU,CAAC,iBAAmB,mCAAmC,aAAe,+BAA+B,MAAQ,wBAAwB,YAAc,8BAA8B,SAAW,2BAA2B,UAAY,4BAA4B,QAAU,0BAA0B,aAAe,+BAA+B,eAAiB,iCAAiC,UAAY,4BAA4B,YAAc,8BAA8B,UAAY,4BAA4B,WAAa,6BAA6B,aAAe,+BAA+B,cAAgB,gCAAgC,gBAAkB,kCAAkC,gBAAkB,kCAAkC,aAAe,+BAA+B,KAAO,uBAAuB,SAAW,6B,mBCAv1BD,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,kBAAoB,wCAAwC,KAAO,2BAA2B,qBAAuB,6C,+KCmBpL,SAAS2H,EAAT,GAC2D,IAD3CC,EAC0C,EAD1CA,MAAOC,EACmC,EADnCA,eAAgBb,EACmB,EADnBA,YAAaF,EACM,EADNA,SAAUgB,EACJ,EADIA,cAAeC,EACnB,EADmBA,oBAC1DC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAC5B7E,EAAWC,cACX6E,EAAaC,KAAKC,KAAKP,EAAiBf,GACxC1C,EAA2BiE,IAMjC,OAAO,sBAAKtE,UAAW8B,IAAMyC,aAAtB,UACH,cAACC,EAAA,EAAD,CAAYvC,MAAO,UACPwC,SAPM,SAACC,EAA6BC,GAChDZ,EAAcY,IAOFC,KAAM,QACN5C,QAAS,WACT6C,MAAM,UACNC,MAAOX,EACPQ,KAAM1B,EACN8B,cAAY,eAEvBlB,EAAMmB,KAAI,SAAAC,GAAI,aAEX,qBAAmBF,cAAY,UAA/B,SACI,sBAAK/E,UAAW8B,IAAMoD,WAAtB,UACI,sBAAKlF,UAAW8B,IAAMqD,sBAAtB,UACI,qBAAK3E,QAAS,kBAAMnB,EAAS,YAAD,OAAa4F,EAAK7I,MACzC4D,UAAW8B,IAAMxF,OAAQ8D,IAAK6E,EAAKxF,OAAOC,MAAQuF,EAAKxF,OAAOC,MAAQW,EACtEC,IAAK,SACV,+BACK2E,EAAKG,SACF,cAACC,EAAA,EAAD,CAAQC,SAAUtB,EACbuB,MAAK,SAAAnJ,GAAE,OAAIA,IAAO6I,EAAK7I,MACpBoE,QAAS,WAELyD,EAAWgB,EAAK7I,KAJ5B,sBAQE,cAACiJ,EAAA,EAAD,CAAQC,SAAUtB,EAAoBuB,MAAK,SAAAnJ,GAAE,OAAIA,IAAO6I,EAAK7I,MACrDoE,QACI,WAGI0D,EAASe,EAAK7I,KAL9B,yBAWd,sBAAK4D,UAAW8B,IAAM0D,cAAtB,UACI,oBAAIxF,UAAW8B,IAAMlD,KAArB,SACI,8BAAMqG,EAAKrG,SAEf,qBAAKoB,UAAW8B,IAAM1D,OAAtB,sCAA2C6G,EAAK7G,cAAhD,QAA0D,sBA/B5D6G,EAAK7I,U,+BCtCpB,SAASqJ,IACZ,OACI,qBAAKzF,UAAWC,IAAOyF,KAAvB,SACI,qBAAK1F,UAAWC,IAAO0F,SAAvB,SACI,cAACC,EAAA,EAAD,CAAkBhB,KAAM,S,YCsDzBiB,EA5Ca1G,IAAMC,MAAK,WAEnC,IAAMoE,EAAW9G,cACXmH,EAAQ7F,YAAe4E,KACvBD,EAAa3E,YAAe0E,KAC5BK,EAAW/E,YAAe8E,KAC1BG,EAAcjF,YAAegF,KAC7Bc,EAAiB9F,YAAekF,KAChC4C,EAAe9H,YAAeoF,KAGpC2C,qBAAU,WACNvC,EAASwC,iBACV,CAAC/C,EAAaF,EAAUS,IAc3B,OACI,mCAEQb,EACI,cAAC8C,EAAD,IACA,cAAC7B,EAAD,CAAOG,cAjBD,SAACkC,GACnBzC,EAAS0C,YAAgBnD,EAAUkD,KAiBChD,YAAaA,EACba,eAAgBA,EAChBf,SAAUA,EACVc,MAAOA,EACPK,SAdvB,SAACpE,GACd0D,EAAS2C,YAAOrG,KAcoBmE,WAnBrB,SAACnE,GAChB0D,EAAS4C,YAAStG,KAmBkBkE,oBAAqB8B,S,0DC9CpDO,EAAgB,WACzB,IAAM7C,EAAW9G,cACX0B,EAASJ,YAAekE,KACxBoE,EAASC,OAAOC,cAAsBF,QAHb,EAIOG,mBAASrI,GAJhB,mBAIxBsI,EAJwB,KAIXC,EAJW,OAKCF,oBAAkB,GALnB,mBAKxBG,EALwB,KAKdC,EALc,KAQzBC,EAAmB,WACrBH,EAAevI,GACfyI,GAAY,IAEVE,EAAqB,WACvBvD,EAASwD,YAAmBN,IAC5BG,GAAY,IAWhB,OAAKP,IAAWW,IAGR,qBAAKlC,cAAY,cAAjB,SACK3G,IAIVwI,GAAYN,IAAWW,MAAa7I,EAGnC,qBACQ4B,UAAWC,IAAOiH,YAClB1G,QAASsG,EAFjB,wBAQAF,GAAYN,IAAWW,IAEvB,qBAAKjH,UAAWC,IAAOiH,YAClBnC,cAAY,gBACbvE,QAASsG,EAFb,SAGK1I,IAIG,uBAAO4B,UAAWC,IAAOkH,MAClB1C,SAtCC,SAAC2C,GACjBT,EAAeS,EAAEC,cAAcC,QAsChBC,WApCO,SAACH,GACT,UAAVA,EAAEI,KACFT,KAmCWlF,OAAQkF,EACRzI,KAAK,OACLyG,cAAY,QACZuC,MAAOZ,K,6ICzDjBe,EAAe,WACxB,IAAMjI,EAAUxB,YAAeqE,KAE/B,OACI,sBAAKrC,UAAW8B,IAAM4F,cAAtB,UACI,8BACI,gDAEHlI,EAAQmI,SAASC,IAClB,sBAAK5H,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMC,SAC9C,mBAAGC,KAAMxI,EAAQmI,SAASC,GAA1B,mBAKHpI,EAAQmI,SAASM,WAClB,sBAAKjI,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMI,gBAC9C,mBAAGF,KAAMxI,EAAQmI,SAASM,UAA1B,0BAKHzI,EAAQmI,SAASQ,SAClB,sBAAKnI,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMM,MAC9C,mBAAGJ,KAAMxI,EAAQmI,SAASQ,QAA1B,yBAKH3I,EAAQmI,SAASU,QAClB,sBAAKrI,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMQ,aAC9C,mBAAGN,KAAMxI,EAAQmI,SAASU,OAA1B,uBAKH7I,EAAQmI,SAASY,SAClB,sBAAKvI,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMU,cAC9C,mBAAGR,KAAMxI,EAAQmI,SAASY,QAA1B,wBAKH/I,EAAQmI,SAASc,UAClB,sBAAKzI,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMY,eAC9C,mBAAGV,KAAMxI,EAAQmI,SAASY,QAA1B,yBAIH/I,EAAQmI,SAASgB,SAClB,sBAAK3I,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMc,MAC9C,mBAAGZ,KAAMxI,EAAQmI,SAASgB,QAA1B,yBAIHnJ,EAAQmI,SAASkB,UAClB,sBAAK7I,UAAW8B,IAAM+F,kBAAtB,UACI,cAAC,IAAD,CAAiB7H,UAAW8B,IAAMgG,KAAMA,KAAMgB,aAC9C,mBAAGd,KAAMxI,EAAQmI,SAASgB,QAA1B,0BAIHnJ,EAAQuJ,2BACT,qCACI,8BACI,uDAEJ,qBAAK/I,UAAW8B,IAAM+F,kBAAtB,SACKrI,EAAQuJ,mC,4CCpFtB,SAASC,GAAUtI,GAEtB,OACQ,sBAAKV,UAAWiJ,IAAWC,qBAA3B,UACI,qBAAKlJ,UAAWiJ,IAAWE,gBAAiB/I,IAAKM,EAAMpE,OAAQgE,IAAK,uBACpE,sBAAMN,UAAWiJ,IAAWG,eCqB5C,IAAMtH,GAAQ,CACVuH,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,UACTC,UAAW,GACXC,EAAG,EACHC,aAAc,GAELC,GAAc3K,IAAMC,MAAK,SAACsB,GAAiC,IAAD,IAE7D8C,EAAW9G,cACX4H,EAAYtG,aAAe,SAAAxB,GAAK,uBAAIA,EAAMK,YAAY2C,QAAQC,cAA9B,aAAI,EAAkCsK,SACtEzD,EAASC,OAAOC,cAAsBF,QACtC0D,EAAOhM,YAAe+B,KACtBkK,EAAWC,iBAAyB,MACpC/N,EAAgB6B,aAAwC,SAAAxB,GAAK,OAAIA,EAAMS,QAAQd,iBAPlB,EAS3CsK,oBAAS,GATkC,mBAS5D0D,EAT4D,KAStDC,EATsD,OAU5B3D,mBAAcnC,GAVc,mBAU5D+F,EAV4D,KAU9CC,EAV8C,OAW/B7D,qBAX+B,mBAW5D8D,EAX4D,KAWhDC,EAXgD,OAY7B/D,oBAAS,GAZoB,mBAY5DgE,EAZ4D,KAY/CC,EAZ+C,KAa7DC,EAAgBT,iBAAO,MACvBU,EAAOC,OAAO9J,OAAOL,EAAMlB,QAAQmI,UAAUmD,OAAM,SAAAC,GAAI,OAAa,OAATA,KAE3DC,EAAmB,kBAAMZ,GAAQ,IA4BnCa,EAAmB9O,EAAc6I,KAAI,SAACkG,GAAD,OACjC,cAAClC,GAAD,CACI5M,GAAI8O,EAAE9O,GACNE,OAAQ4O,EAAE5O,YAEtB,OACI,sBAAK0D,UAAWC,IAAOkL,mBAAvB,UAEI,qBAAKnL,UAAWC,IAAOmL,aAAvB,SACI,sBAAKpL,UAAWC,IAAOoL,cAAvB,UACI,qBAAKjL,IAAG,oBAAEM,EAAMlB,QAAQC,cAAhB,aAAE,EAAsBsK,aAAxB,QAAiC1J,IAAkBC,IAAK,cAC/DgG,IAAW0D,GACZ,qBAAKhK,UAAWC,IAAOqL,KAAM9K,QAAS,kBAAM4J,GAAQ,IAApD,SAA2D,oDAGnE,sBAAKpK,UAAWC,IAAOsL,YAAvB,UACI,sBAAKvL,UAAWC,IAAOuL,YAAvB,UACI,iCAAS9K,EAAMlB,QAAQiM,WAEvB,cAAC,IAAD,CACIzL,UAAWC,IAAOyL,QAClBC,IAAKhB,EACLnK,QAhDM,kBAAMkK,GAAe,IAgDCkB,SAAU,QACtC3J,MAAOvB,EAAMlB,QAAQqM,eAAiB,UAAY,aAE1D,qBAAK7L,UAAWC,IAAO6L,cAAvB,SACI,cAAC,EAAD,MAEJ,mBAAG9L,UAAWC,IAAO8L,mBAArB,SACKrL,EAAMlB,QAAQwM,aAGtBpB,GAAQ,cAAC,EAAD,IAET,sBAAK5K,UAAWiJ,IAAWD,UAA3B,UACI,sBAAMhJ,UAAWiJ,IAAWgD,MAA5B,yBACChB,KAEL,cAACiB,EAAA,EAAD,CAAO/B,KAAMA,EACNgC,QAASnB,EADhB,SAGI,eAACoB,EAAA,EAAD,CAAKC,GAAIvK,GAAT,UACI,eAACsK,EAAA,EAAD,WACI,cAACA,EAAA,EAAD,CAAKtK,MAAO,CACRwK,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SAAUpD,SAAU,YAJpC,SAKG,iCACC,mBAAGvH,MAAO,CAAC8J,SAAU,QAArB,yCAEJ,cAACc,EAAA,EAAD,CAAY5K,MAAO,CAACuH,SAAU,WAAYC,IAAK,MAAOqD,MAAO,QACjDnM,QAASwK,EADrB,SAEI,cAAC4B,EAAA,EAAD,SAGR,eAACR,EAAA,EAAD,CAAKtK,MAAO,CACRwK,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAJhB,UAOI,cAACL,EAAA,EAAD,CAAKhQ,GAAG,kBAAR,SACI,qBAAKgE,IAAKiK,GAAgB/F,EAAWhE,IAAI,SACpCmJ,MAAO,QAAS3H,MAAO,CAAC+H,aAAc,MAAOgD,aAAc,YAIpE,cAACT,EAAA,EAAD,UACI,wBAAOU,QAAQ,mBAAf,UACI,uBAAOxO,KAAM,OAAQwD,MAAO,CAACwK,QAAS,QAASlQ,GAAI,SAAUuP,IAAK1B,EAC3D8C,OAAO,UAAUtI,SA5F7B,SAAC2C,GAAsC,IAAD,EACnD4F,EAAS,IAAIC,WACbC,EAAI,UAAG9F,EAAE+F,cAAL,aAAG,EAAUC,MAElBF,GAAQA,EAAK,GAAG5O,OAA2B,cAAjB4O,EAAK,GAAG5O,MAAyC,eAAjB4O,EAAK,GAAG5O,OACnEkM,EAAc0C,EAAK,IACnBF,EAAOK,UAAY,WACf/C,EAAe0C,EAAOM,SAEtBJ,EAAK,GAAGtI,MAAQsI,EAAK,GAAGtI,MAAQ2I,IAChCP,EAAOQ,cAAcN,EAAK,IAE1B1J,EAAS/E,YAAc,oCAAD,OAAqC8O,IAAiB,IAAtD,sBAI1B/J,EAAS/E,YAAc,4EA6EH,cAAC4G,EAAA,EAAD,CAAQgH,GAAI,CAACoB,cAAe,QAASzL,QAAS,YACtCxB,QAAS,kBAAMyJ,EAASyD,SAAWzD,EAASyD,QAAQC,SAD5D,0BAGA,cAACtI,EAAA,EAAD,CAAQgH,GAAI,CAACoB,cAAe,QAASzL,QAAS,YACtCxB,QArGX,WACrBgD,EAASoK,YAAerD,IACxBS,KAkGwB,uBAKR,mFAIZ,cAAC6C,EAAA,EAAD,CAAS1D,KAAMM,EACNqD,SAAUnD,EAAc+C,QACxBvB,QAlHU,kBAAMzB,GAAe,IAmH/BqD,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SATzB,SAYI,cAACE,EAAA,EAAD,CACI9B,GAAI,CAACzC,EAAG,GADZ,SACiBlJ,EAAMlB,QAAQqM,eAAiB,qBAAuB,kC,+BC9KhF,SAASuC,GAAK1N,GAA0B,IAAD,EACN+F,qBADM,mBACnC4H,EADmC,KACvBC,EADuB,KAU1C,OAJAvI,qBAAU,WAFNuI,EAAclK,KAAKmK,MAFD,IAEOnK,KAAKoK,aAI/B,IAGC,sBAAKxO,UAAWC,KAAOwO,YAAvB,UACI,qBAAKzO,UAAWC,KAAOyO,kBAAvB,SACI,cAACxP,GAAA,EAAD,MAEJ,4BACKwB,EAAM7B,UAEX,gCACI,0CAAwC,IAApB6B,EAAMiO,UAAkBjO,EAAMiO,UAAYN,Q,kCChBjEO,GAAUzP,IAAMC,MAAK,SAACsB,GAA6B,IAAD,EAEvDmO,EAAa,UAAGnO,EAAM0B,iBAAT,aAAG,EAAiB4C,KAAI,SAAA4E,GAAC,OAAI,cAACwE,GAAD,CACMvP,QAAS+K,EAAE/K,QACX8P,UAAW/E,EAAEyE,YAFRzE,EAAExN,OAEqB0S,UAChF,OACI,sBAAK9O,UAAWC,KAAO8O,UAAvB,UACI,sBAAK/O,UAAWC,KAAO+O,WAAvB,UACI,oBAAIhP,UAAWC,KAAOgP,cAAtB,sBACA,cAACxO,GAAA,EAAD,CAAckB,gBAAiBjB,EAAMiB,gBAAiBN,SAAUX,EAAMW,cAE1E,qBAAKrB,UAAWC,KAAOiP,MAAvB,SACKL,U,SCRJM,GAAYhQ,IAAMC,MAAK,SAACsB,GACjC,IAAM0B,EAAYpE,YAAemE,KAC3B3C,EAAUxB,YAAeqE,KACzBmB,EAAW9G,cAKjB,OACI,sBAAKsD,UAAS,UAAKC,IAAOmP,eAAZ,KAAd,UACI,cAACtF,GAAD,CAAatK,QAASA,IACrBkB,EAAMZ,SAAWmH,KAClB,cAAC2H,GAAD,CACIjN,gBAAiBA,KAAgB0N,gBACjChO,SATO,SAACrC,GAChB,OAAQwE,EAAS8L,YAAgBtQ,KASzBoD,UAAWA,UClBdmN,GAAyBpQ,IAAMC,MAAK,WAC7C,IAAMoE,EAAW9G,cAEX4J,EAASC,OAAOC,cAAsBF,QACtC/D,EAAavE,YAAesE,KAalC,OAZAyD,qBAAU,WAEFO,IAAWW,KAEXzD,EAASgM,YAAalJ,IACtB9C,EAASiM,YAAgBnJ,MAEzB9C,EAASgM,YAAavI,MACtBzD,EAASiM,YAAgBxI,SAG9B,CAACX,EAAQ9C,IACPjB,EAGE,cAAC4M,GAAD,CAAWrP,OAAQwG,IAFf,cAAC,IAAD,CAAUoJ,GAAIC,GAAKC,WC3B3B,SAASC,KACZ,OACI,8BACI,2CCHL,SAASC,KAEZ,OACI,8BAEI,cAACD,GAAD,M,yBCCGE,GARA,WACX,OACI,0CCYOC,OAVf,WAEI,OACI,qBAAKhQ,UAAWC,KAAOgQ,QAAvB,SAEI,cAAC,GAAD,O,yICgBCC,GAAQ/Q,IAAMC,MAAK,WAC5B,IAAMmD,EAAavE,aAAwB,SAAAxB,GAAK,OAAIA,EAAMY,KAAKmF,cACzD4N,EAAcnS,aAAqC,SAAAxB,GAAK,OAAIA,EAAMc,IAAIa,SACtEiS,EAAapS,aAAqC,SAAAxB,GAAK,OAAIA,EAAMY,KAAKgT,cACtE5M,EAAW9G,cAJiB,EAKE+J,oBAAkB,GALpB,mBAK3B4J,EAL2B,KAKfC,EALe,KAQ5B3P,EAASC,aAAU,CACrBE,SAAU,SAACC,GACP,IAAMC,EAAmC,GAazC,OAZKD,EAAOwP,MAEA,4CAA4CC,KAAKzP,EAAOwP,SAChEvP,EAAOuP,MAAQ,yBAFfvP,EAAOuP,MAAQ,WAIfxP,EAAO0P,SAASxP,OAAS,IACzBD,EAAOyP,SAAW,2BAEjB1P,EAAO0P,WACRzP,EAAOyP,SAAW,qBAGfzP,GAEXH,cAAe,CACX0P,MAAO,GACPE,SAAU,GACVC,YAAY,EACZC,QAAS,IAGbxP,SAAU,SAAAJ,GACNyC,EAASoN,aAAQ7P,OAGzB,GAAIwB,EACA,OAAO,cAAC,IAAD,CAAUmN,GAAIC,GAAKkB,OAa9B,OAEI,cAACC,GAAA,EAAD,CAAMC,WAAS,EAACvE,eAAgB,SAAhC,SACI,eAACsE,GAAA,EAAD,CAAM/F,MAAI,EAACyB,eAAgB,SAA3B,UACI,uCACA,eAACwE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,yDACI,mBAAGjJ,KAAM,wCACNkJ,IAAI,aAAa/D,OAAQ,SAD5B,sBAIJ,wEACA,0DACA,kDAEJ,sBAAMhM,SAAUR,EAAOW,aAAvB,SACI,eAAC6P,GAAA,EAAD,WACI,eAACH,GAAA,EAAD,CAAc3E,GAAI,CAAC+E,KAAM,EAAG3H,MAAO,QAASzH,QAAQ,WAApD,UACI,cAACqP,GAAA,EAAD,CAAYvE,QAAQ,2BAApB,mBACA,cAACwE,GAAA,EAAD,6BAAW3Q,EAAOiB,cAAc,UAAhC,IAA0C2P,QA9BlD,WAChBpB,GAAe3M,EAAS/E,YAAc,YAsCjBkC,EAAO6Q,QAAQjB,OAAS5P,EAAOK,OAAOuP,MACnC,qBAAKzO,MAAO,CAACG,MAAO,OAApB,SAA6BtB,EAAOK,OAAOuP,QAAe,KAE9D,eAACS,GAAA,EAAD,CAAa3E,GAAI,CAAC+E,KAAM,EAAG3H,MAAO,QAASzH,QAAQ,WAAnD,UACI,cAACqP,GAAA,EAAD,CAAYvE,QAAQ,8BAApB,sBACA,cAACwE,GAAA,EAAD,6BAAW3Q,EAAOiB,cAAc,aAAhC,IACOxF,GAAG,8BACHkC,KAAM+R,EAAa,WAAa,OAChCoB,aACI,cAACC,GAAA,EAAD,CAAgBrI,SAAS,MAAzB,SACI,cAACqD,EAAA,EAAD,CACIiF,aAAW,6BACXnR,QAhDf,WAC5B8P,GAAeD,IAgD4BuB,YA9Cf,SAAClN,GAC7BA,EAAMmN,kBA0CiC,SAKKxB,EAAa,cAACyB,GAAA,EAAD,IAAmB,cAACC,GAAA,EAAD,WAMnDpR,EAAO6Q,QAAQf,UAAY9P,EAAOK,OAAOyP,SACtC,qBAAK3O,MAAO,CAACG,MAAO,OAApB,SAA6BtB,EAAOK,OAAOyP,WAAkB,QAarE,cAACuB,GAAA,EAAD,2BACIC,MAAO,cACPC,QAAS,cAACC,GAAA,EAAD,KACLxR,EAAOiB,cAAc,eAH7B,IAIIwQ,QAASzR,EAAOiB,cAAc,cAAc0F,SAG/C8I,GACD,qCACI,qBAAKhQ,IAAKgQ,EAAY9P,IAAK,eAC3B,eAAC0Q,GAAA,EAAD,CAAa3E,GAAI,CAAC+E,KAAM,EAAG3H,MAAO,QAASzH,QAAQ,WAAnD,UACI,cAACqP,GAAA,EAAD,CAAYvE,QAAQ,8BAApB,qBACA,cAACwE,GAAA,EAAD,gBAAW3Q,EAAOiB,cAAc,aAG/BjB,EAAO6Q,QAAQb,SAAWhQ,EAAOK,OAAO2P,QACrC,qBAAK7O,MAAO,CAACG,MAAO,OAApB,SAA6BtB,EAAOK,OAAO2P,UAAiB,WAKxE,cAACtL,EAAA,EAAD,CAAQvD,MAAO,CAACuQ,UAAU,SAAUrQ,QAAS,YACrC1D,KAAM,SADd,mCCtJbgU,OARf,SAAyBC,GAErB,OAAO,SAAC7R,GAAD,OACH,cAAC,IAAM8R,SAAP,CAAgBC,SAAU,cAAChN,EAAD,IAA1B,SACI,cAAC8M,EAAD,gBAAe7R,Q,8BCEdgS,GAAgB,WAEzB,IAAMlP,EAAW/G,cAEX0B,EAAQH,aAAqC,SAAAxB,GAAK,OAAIA,EAAMc,IAAIa,SAEhEwU,EAAc,SAACjO,EAAsCkO,GACxC,cAAXA,GAGJpP,EAAS/E,YAAc,QAG3B,OACI,cAACoU,GAAA,EAAD,CAAU1I,KAAgB,OAAVhM,EAAgB2U,iBAAkB,IAAM3G,QAASwG,EAAa5E,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAA9H,SACI,eAAC8E,GAAA,EAAD,CACI5G,QAASwG,EAAaK,SAAS,QAAQ3G,GAAI,CAAC5C,MAAO,QADvD,UAEI,cAACwJ,GAAA,EAAD,oBACA,iCAAS9U,U,8BCZZ+U,GAAc/T,IAAMC,MAAK,WAClC,IAAMkH,EAAStI,aAAe,SAAAxB,GAAK,OAAIA,EAAMY,KAAKwC,KAAKxD,MACjDoD,EAAUxB,YAAeqE,KACzBmB,EAAW9G,cACX2C,EAAWC,cAOjB,OALAyG,qBAAU,WACNvC,EAASgM,YAAalJ,MACvB,CAACA,EAAQ9C,IAIR,qBAAKxD,UAAWmT,KAAEC,mBAAlB,SACI,sBAAKpT,UAAWmT,KAAElD,QAAlB,UAA2B,8CACvB,2CACA,cAAC,KAAD,CAAQoD,oBAAoB,EACpBxS,cAAe,CACXyF,OAAQA,EACRuF,eAAgBrM,EAAQqM,eACxB9C,0BAA2BvJ,EAAQuJ,0BACnC0C,SAAUjM,EAAQiM,SAClBO,QAASxM,EAAQwM,QACjBrE,SAAU,CACNc,SAAUjJ,EAAQmI,SAASc,SAC3BE,QAASnJ,EAAQmI,SAASgB,QAC1Bf,GAAIpI,EAAQmI,SAASC,GACrBW,QAAS/I,EAAQmI,SAASY,QAC1BN,UAAWzI,EAAQmI,SAASM,UAC5BE,QAAS3I,EAAQmI,SAASQ,QAC1BE,OAAQ7I,EAAQmI,SAASU,OACzBQ,SAAUrJ,EAAQmI,SAASkB,WAKnC1H,SACI,SAAAJ,GACIyC,EAAS8P,YAAgBvS,IACzB1B,EAAS,GAAD,OAAIsQ,GAAK4D,QAAT,YAAoBjN,KAvB5C,SA2BK,SAAA5F,GAAK,eACF,uBAAMS,SAAUT,EAAMY,aAAtB,UACI,sBAAKtB,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,sBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,kBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO4G,SAASU,OAC7BlK,SAAQ,UAACuC,EAAMM,OAAO2G,gBAAd,aAAC,EAAuBU,QAChCyL,WAAU,UAAEpT,EAAMM,OAAO2G,gBAAf,aAAE,EAAuBU,YAGlD,sBAAKrI,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,wBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,oBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO4G,SAASc,cAI5C,sBAAKzI,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,kBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,cACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO4G,SAASC,QAI5C,sBAAK5H,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,yBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,qBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO4G,SAASM,eAK5C,sBAAKjI,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,uBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,mBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO4G,SAASY,aAI5C,sBAAKvI,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,uBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,mBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,gBAI7B,sBAAK7T,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,4BACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,mBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,gBAI7B,sBAAK7T,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,yBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,oBACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,gBAI7B,sBAAK7T,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,wBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtCjI,WAAW,EACXoD,KAAM,QACNtG,KAAK,OACLM,KAAM,UACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAOiL,aAKnC,sBAAKhM,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,yBACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtC7E,KAAM,QACNtG,KAAK,OACLM,KAAM,WACN6F,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAO0K,cAInC,qBAAK3J,MAAO,CAACwK,QAAS,OAAQE,eAAgB,UAA9C,SAEI,cAACwF,GAAA,EAAD,CACI+B,eAAgB,QAChB/T,UAAWmT,KAAEM,YACbxB,MAAO,qBACPrT,KAAM,iBACNsT,QAAS,cAACC,GAAA,EAAD,IACTC,QAAS1R,EAAMK,OAAO8K,eACtBpH,SAAU/D,EAAMkT,iBAGxB,sBAAK5T,UAAWmT,KAAEK,QAAlB,UACI,mBAAGxT,UAAWmT,KAAEM,YAAhB,+BACA,cAACC,GAAA,EAAD,CAAW5R,MAAO,CAAC6R,WAAY,UAAWlK,MAAO,SACtCjI,WAAW,EACXoD,KAAM,QACNhG,KAAM,4BACNN,KAAK,OACLmG,SAAU/D,EAAMkT,aAChB/R,OAAQnB,EAAMmT,WACdvM,MAAO5G,EAAMK,OAAOgI,+BAKnC,qBAAK/I,UAAWmT,KAAEa,OAAlB,SACI,cAAC3O,EAAA,EAAD,CAAQrD,QAAS,YAAa1D,KAAM,SAApC,4C,6BChNjB,OAA0B,iC,oFCiBlC,SAAS2V,KACZ,IAAM5U,EAAWC,cACXkE,EAAW9G,cACX6F,EAAatE,YAAYqE,KAKzB3C,EAAc3B,aAA8B,SAAAxB,GAAK,OAAIA,EAAMY,KAAKwC,KAAKC,SACrEC,EAAS7B,YAAY8B,KAI3B,OACI,sBAAKC,UAAWC,KAAOiU,cAAvB,UACI,qBAAKlU,UAAWC,KAAOkU,KAAvB,SAA6B,qBAAK/T,IAAK+T,GAAM7T,IAAI,WACjD,sBAAKN,UAAWC,KAAOmU,YAAvB,UACI,qBAAKpU,UAAWC,KAAOoU,QAAvB,SACI,eAAC,KAAD,CAAS3E,GAAE,UAAKC,GAAK4D,QAAV,YAAqBtM,KACvBjH,UAAW,gBAAEsU,EAAF,EAAEA,SAAF,MAAwB,UAARA,EAAcrU,KAAOsU,cAAqBtU,KAAOuU,kBADrF,UAEI,cAAC,KAAD,CAAa5I,SAAU,UACvB,4CAGR,qBAAK5L,UAAWC,KAAOoU,QAAvB,SACI,eAAC,KAAD,CAAS3E,GAAIC,GAAK8E,QAASzU,UAAW,gBAAEsU,EAAF,EAAEA,SAAF,MAAwB,UAARA,EAAcrU,KAAOsU,cAAqBtU,KAAOuU,kBAAvG,UACI,cAAC,KAAD,CAAa5I,SAAU,UACvB,gDAIR,qBAAK5L,UAAWC,KAAOoU,QAAvB,SACI,eAAC,KAAD,CAAS3E,GAAIC,GAAK+E,MACT1U,UAAW,gBAAEsU,EAAF,EAAEA,SAAF,MAAwB,UAARA,EAAcrU,KAAOsU,cAAqBtU,KAAOuU,kBADrF,UAEI,cAAC,KAAD,CAAe5I,SAAU,UACzB,iDAGR,qBAAK5L,UAAWC,KAAOoU,QAAvB,SACI,eAAC,KAAD,CAAS3E,GAAIC,GAAKgF,aAAc3U,UAAW,gBAAEsU,EAAF,EAAEA,SAAF,MAAwB,UAARA,EAAcrU,KAAOsU,cAAqBtU,KAAOuU,kBAA5G,UACI,cAAC,KAAD,CAAc5I,SAAU,UACxB,uDAMZ,sBAAK5L,UAAWC,KAAO2U,WAAvB,UAEI,qBAAK5U,UAAWC,KAAO4U,UAAvB,SACI,qBAAK7U,UAAWC,KAAOM,SAAUC,QAxCxB,WACrBnB,EAAS,YAAD,OAAaS,KAuCT,SACKH,MAGR4C,GACD,cAAC8C,EAAA,EAAD,CAAQrD,QAAS,WAAYhC,UAAWC,KAAOJ,MAAOW,QAnD5C,WAClBgD,EAASsR,gBACTzV,EAAS,WAiDD,2BCnET,SAAS0V,KAEZ,OACI,wBAAQ/U,UAAWC,KAAO+U,cAA1B,SACI,cAACf,GAAD,MCHZ,IAsBegB,GAtBO,WAClB,IAAMC,EAAWC,cAIjB,OAFmBnX,YAAwBsE,KAYvC,qCACI,cAACyS,GAAD,IACA,cAAC,IAAD,OAVA,cAAC,IAAD,CACIrF,GAAE,4BAAuB0F,mBAAmBF,EAASG,WACrDC,SAAO,K,oBCfR,OAA0B,sCCA1B,OAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,mCCA1B,OAA0B,oCCW5BC,GAAW,WAEpB,OACI,qBAAKvV,UAAWC,KAAOuV,aAAvB,SAEI,sBAAKxV,UAAWC,KAAOwV,MAAvB,UAEI,sBAAKzV,UAAWC,KAAOyV,YAAvB,UACI,qBAAK1V,UAAWC,KAAO0V,SAAUvV,IAAKwV,GAAWtV,IAAK,WACtD,cAAC,KAAD,CAASoP,GAAE,UAAKC,GAAKkB,MAAQ7Q,UAAWC,KAAO4V,UAA/C,6BAEJ,sBAAK7V,UAAWC,KAAO6V,QAAvB,UACI,qBAAK9V,UAAWC,KAAO8V,aAAc3V,IAAK4V,GAAQ1V,IAAK,cACvD,sBAAKN,UAAWC,KAAOgW,UAAvB,UACI,qBAAKjW,UAAWC,KAAOiW,YAAa9V,IAAK+V,GAAO7V,IAAK,aACrD,qBAAKN,UAAWC,KAAOmW,WAAYhW,IAAKiW,GAAM/V,IAAK,eAEvD,qBAAKN,UAAWC,KAAOqW,aAAvB,SACI,qBAAKtW,UAAWC,KAAOsW,gBAAiBnW,IAAKoW,GAAWlW,IAAK,sBAGrE,sBAAKN,UAAWC,KAAOwW,aAAvB,UACI,qBAAKzW,UAAWC,KAAOyW,OACvB,qBAAK1W,UAAWC,KAAOyW,OACvB,qBAAK1W,UAAWC,KAAOyW,OACvB,qBAAK1W,UAAWC,KAAOyW,OACvB,qBAAK1W,UAAWC,KAAOyW,OACvB,qBAAK1W,UAAWC,KAAOyW,gBChBrCC,GAAoBxX,IAAMyX,MAAK,kBAAM,iCAE9BjH,GAAO,CAChBkB,KAAM,IACNjB,MAAO,SACP2D,QAAS,WACTmB,MAAO,SACPmC,SAAU,OACVC,UAAW,IACXrC,QAAS,WACTsC,OAAQ,UACRC,OAAQ,UACRrC,aAAc,iBA4CHrX,GAxCC,WAEZ,IAAM2Z,EAAYjZ,aAAkC,SAAAxB,GAAK,OAAIA,EAAMc,IAAIc,UACjEoF,EAAW9G,cACXoD,EAAS9B,aAAe,SAAAxB,GAAK,OAAIA,EAAMY,KAAKwC,KAAKxD,MACjDqG,EAAgBzE,YAAewE,KAOrC,OAJAuD,qBAAU,WACNvC,EAAS0T,kBACV,CAAC1T,IAECf,EAKD,qBAAKzC,UAAW,MAAhB,SACI,uBAAMA,UAAW,cAAjB,UACmB,YAAdiX,GAA2B,cAACxR,EAAD,IAC5B,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0R,KAAMxH,GAAKkB,KAAMuG,QAAS,cAAC,IAAD,CAAU1H,GAAE,UAAKC,GAAK4D,QAAV,YAAqBzT,OAClE,eAAC,IAAD,CAAOsX,QAAS,cAAC,GAAD,IAAhB,UACI,cAAC,IAAD,CAAOD,KAAI,UAAKxH,GAAK4D,QAAV,YAA6B6D,QAAS,cAAC7H,GAAD,MACjD,cAAC,IAAD,CAAO4H,KAAMxH,GAAK8E,QAAS2C,QAAS9E,GAAaqE,GAAbrE,CAAgC,MACpE,cAAC,IAAD,CAAO6E,KAAMxH,GAAK+E,MAAO0C,QAAS,cAACC,EAAD,MAClC,cAAC,IAAD,CAAOF,KAAMxH,GAAKgF,aAAcyC,QAAS,cAAClE,GAAD,SAE7C,cAAC,IAAD,CAAOiE,KAAMxH,GAAKC,MAAOwH,QAAS,cAAClH,GAAD,MAClC,cAAC,IAAD,CAAOiH,KAAMxH,GAAKoH,OAAQK,QAAS,cAACtH,GAAD,MACnC,cAAC,IAAD,CAAOqH,KAAMxH,GAAKqH,OAAQI,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAMxH,GAAKmH,UAAWM,QAAS,cAAC,IAAD,CAAU1H,GAAIC,GAAKkH,aACzD,cAAC,IAAD,CAAOM,KAAI,UAAKxH,GAAKkH,UAAYO,QAAS,cAAC,GAAD,SAE9C,cAAC,GAAD,SArBD,cAAC3R,EAAD,KC1CfhI,OAAOG,MAAQA,IAEX0Z,IAASC,OACD,cAAC,IAAD,CAAU3Z,MAAOA,IAAjB,SACI,cAAC,KAAD,UACI,cAAC,GAAD,QAGZ4Z,SAASC,eAAe,U,gCCjBhC,gFAGaxQ,EAAW,MACXsG,EAAiB,IAGemK,MAAa7S,MAAM,CAC5D4G,SAAUiM,MACLC,IAAI,EAAG,yCACPC,IAAI,GAAI,0CACRC,SAAS,YACd7L,QAAS0L,MACJC,IAAI,EAAG,qDACPC,IAAI,IAAK,uDACTC,SAAS,YACd9O,0BAA2B2O,MACtBC,IAAI,EAAG,oDACPC,IAAI,IAAK,sDACTC,SAAS,YACdlQ,SAAU+P,MAAa7S,MAAM,CACzB4D,SAAUiP,KAAS,SAAApQ,GAAK,OAAKA,EAAuBoQ,MAAaI,QAC7D,0FACA,4BAFiCJ,SAIrC/O,QAAS+O,MACJC,IAAI,GACJI,WACAD,QAvBW,kHAyBR,4BAERlQ,GAAI8P,MAECI,QACG,2FACA,+BAERvP,QAASmP,MACJC,IAAI,GACJI,UAAS,GACTD,QACG,wBACA,oCAGR7P,UAAWyP,MACNC,IAAI,GACJI,UAAS,GACTD,QACG,sFACA,sCAGR3P,QAASuP,MACJC,IAAI,GACJI,UAAS,GACTD,QACG,kDACA,oCAGRzP,OAAQqP,MACHC,IAAI,GACJI,UAAS,GACTD,QACG,4DACA,mCAGRjP,SAAU6O,MACLC,IAAI,GACJI,UAAS,GACTC,W,kRClED9Z,E,mFAAAA,K,kCAAAA,E,4BAAAA,E,sDAAAA,E,oDAAAA,E,sDAAAA,E,gCAAAA,E,mCAAAA,M,KA2DL,IAAMoR,EAAkB,SAAC1P,GAAD,MAAmB,CAACtB,KAAMJ,EAAa+Z,SAAUrY,SAUnEsY,EAAc,SAAC9Z,GAAD,MAAqB,CAACE,KAAMJ,EAAaia,WAAY/Z,WAI1ElC,EAAgC,CAElCkG,UAAW,CACP,CAAChG,GAAIC,eAAMwC,QAAS,+CAAgDwP,WAAY,GAChF,CAACjS,GAAIC,eAAMwC,QAAS,6CAA8CwP,WAAY,GAC9E,CAACjS,GAAIC,eAAMwC,QAAS,2CAA4CwP,WAAY,IAEhFjQ,OAAQ,GAERoB,QAAS,CACL8G,OAAQ,EACRmF,SAAU,GACVI,gBAAgB,EAChB9C,0BAA2B,GAC3BiD,QAAS,GACTrE,SAAU,CACNc,SAAU,GACVJ,OAAQ,GACRJ,UAAW,GACXY,SAAU,GACVN,QAAS,GACTX,GAAI,GACJe,QAAS,GACTR,QAAS,IAEb1I,OACI,CACIC,MAAO,GACPqK,MAAO,MAIVjN,EAAiB,WAAyF,IAAxFN,EAAuF,uDAA9DN,EAAcmC,EAAgD,uCAClH,OAAQA,EAAOC,MACX,KAAKJ,EAAa+Z,SACd,OAAO,2BACAzb,GADP,IAEI4F,UAAU,GAAD,mBAAM5F,EAAM4F,WAAZ,CAAuB,CAAChG,GAAIC,eAAMwC,QAASR,EAAOuB,KAAMyO,WAAY,OAErF,KAAKnQ,EAAaka,sBACd,OAAO,2BAAI5b,GAAX,IAAkBgD,QAASnB,EAAOmB,UACtC,KAAKtB,EAAaia,WACd,OAAO,2BAAI3b,GAAX,IAAkB4B,OAAQC,EAAOD,SACrC,KAAKF,EAAama,sBACd,OAAO,2BAAI7b,GAAX,IAAkBgD,QAAQ,2BAAKhD,EAAMgD,SAAZ,IAAqBC,OAAQpB,EAAOoB,WACjE,KAAKvB,EAAaoa,YACd,OAAO,2BAAI9b,GAAX,IAAkB4F,UAAW5F,EAAM4F,UAAUmW,QAAO,SAAAC,GAAI,OAAIA,EAAKpc,KAAOiC,EAAOjC,QACnF,QACI,OAAOI,IAINgT,EAAe,SAAClJ,GAAD,8CAA2B,WAAO9C,GAAP,eAAAiV,EAAA,6DACnDjV,EAAS9E,YAAe,YAD2B,SAEnCga,IAAWC,WAAWrS,GAFa,OAE/CsS,EAF+C,OAGnD,IACIpV,GApEyBhE,EAoECoZ,EAAIhZ,KApEyB,CAC3DtB,KAAMJ,EAAaka,sBACnB5Y,aAmEIgE,EAAS9E,YAAe,cAC1B,MAAOP,GACLmF,YAAmBnF,EAAOqF,GAPqB,iCAhEvB,IAAChE,IAgEsB,OAA3B,uDAYfiQ,EAAkB,SAACnJ,GAAD,8CAA2B,WAAO9C,GAAP,eAAAiV,EAAA,6DACtDjV,EAAS9E,YAAe,YAD8B,SAEtCga,IAAWG,UAAUvS,GAFiB,OAElDsS,EAFkD,OAGtD,IACuB,MAAfA,EAAIxa,QACJoF,EAAS0U,EAAYU,EAAIhZ,OACzB4D,EAAS9E,YAAe,eAExBgF,YAAqBkV,EAAIhZ,KAAM4D,GAErC,MAAOrF,GACL2a,QAAQC,IAAI,qCAAsC5a,GAClDwF,YAAyBxF,EAAOqF,GAZkB,2CAA3B,uDAiBlBwD,EAAqB,SAAC5I,GAAD,8CAAoB,WAAOoF,GAAP,eAAAiV,EAAA,6DAClDjV,EAAS9E,YAAe,YAD0B,SAElCga,IAAWM,aAAa5a,GAFU,OAE9Cwa,EAF8C,OAGlD,IACgC,IAAxBA,EAAIhZ,KAAKqZ,YACTzV,EAAS0U,EAAY9Z,IACrBoF,EAAS9E,YAAe,eAExBgF,YAAqBkV,EAAIhZ,KAAM4D,GAErC,MAAOrF,GACL2a,QAAQC,IAAI,wCAAyC5a,GACrDwF,YAAyBxF,EAAOqF,GAZc,2CAApB,uDAgBrBoK,EAAiB,SAACsL,GAAD,8CAAqB,WAAO1V,EAA4B2V,GAAnC,iBAAAV,EAAA,6DAC/CjV,EAAS9E,YAAe,YAClB4H,EAAS6S,IAAW/b,KAAKwC,KAAKxD,GAFW,SAG/Bsc,IAAWU,aAAaF,GAHO,UAG3CN,EAH2C,gBAKf,IAAxBA,EAAIhZ,KAAKqZ,WAL8B,wBAMvCzV,EAAS9E,YAAe,cANe,KAOvC8E,EAPuC,UAOxBgM,EAAalJ,GAPW,2DASvC5C,YAAqBkV,EAAIhZ,KAAM4D,GATQ,0DAY3CsV,QAAQC,IAAI,mCAAZ,MACApV,YAAyB,EAAD,GAAQH,GAbW,0DAArB,yDAiBjB8P,EAAkB,SAAC9T,GAAD,8CAA8B,WAAOgE,EAA4B2V,GAAnC,iBAAAV,EAAA,6DAEzDjV,EAAS9E,YAAe,YAFiC,SAGzCga,IAAWW,cAAc7Z,GAHgB,UAGrDoZ,EAHqD,OAInDtS,EAAS6S,IAAW/b,KAAKwC,KAAKxD,GAJqB,SAMzB,IAAxBwc,EAAIhZ,KAAKqZ,WANwC,6BAOjDzV,EAPiD,UAOlCgM,EAAalJ,GAPqB,mCAQjD9C,EAAS9E,YAAe,cARyB,wBAUjDgF,YAAqBkV,EAAIhZ,KAAM4D,GAVkB,0DAarDsV,QAAQC,IAAI,oCAAZ,MACApV,YAAyB,EAAD,GAAQH,GAdqB,0DAA9B,0D,6LC5LlB8V,E,OAAWC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAeNC,EAAU,CACnBC,SADmB,SACV5W,EAAqBF,GAC1B,OAAOuW,EAASQ,IAAT,qBAA0C7W,EAA1C,kBAA+DF,MAIjE2V,EAAa,CACtBC,WADsB,SACX7Y,GACP,OAAOwZ,EAASQ,IAAT,kBAAyCha,KAEpD+Y,UAJsB,SAIZ/Y,GACN,OAAOwZ,EAASQ,IAAT,yBAA6Dha,KAExEkZ,aAPsB,SAOT5a,GAET,OAAOkb,EAASS,IAAT,iBAA4D,CAAC3b,YAExEgb,aAXsB,SAWTF,GACT,IAAMc,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAAShB,GAClBI,EAASS,IAAT,gBAAuEC,EAAU,CACpFL,QAAS,CACL,eAAgB,0BAI5BN,cApBsB,SAoBR7Z,GACV,OAAO8Z,EAASS,IAAT,yBAAyDva,MAI3D2a,EAAU,CACnBC,GADmB,WAEf,OAAOd,EAASQ,IAAT,YAEX3T,OAJmB,SAIZrG,GACH,OAAOwZ,EAASd,KAAT,iBAAgD1Y,KAE3DsG,SAPmB,SAOVtG,GACL,OAAOwZ,EAASe,OAAT,iBAAkDva,KAE7DD,MAVmB,SAUbD,GACF,OAAO0Z,EAASd,KAAT,aAAoD5Y,IAE/D0a,OAbmB,WAcf,OAAOhB,EAASe,OAAiB,gBAErCE,aAhBmB,SAgBNza,GACT,OAAOwZ,EAASQ,IAAT,iBAAuBha,MAIzB0a,EAAc,CACvB7J,QADuB,WAEnB,OAAO2I,EAASQ,IAAT,gC,mBC9Ef9d,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,aAAe,kCAAkC,cAAgB,mCAAmC,KAAO,0BAA0B,YAAc,iCAAiC,YAAc,iCAAiC,QAAU,6BAA6B,cAAgB,mCAAmC,mBAAqB,wCAAwC,aAAe,kCAAkC,YAAc,iCAAiC,UAAY,+BAA+B,WAAa,kC,4KCOrlBiC,E,2EAAAA,K,yCAAAA,E,6CAAAA,E,mDAAAA,E,gCAAAA,M,KA2BZ,IAAMhC,EAAiC,CACnC0D,KAAM,CACFxD,GAAI6K,IACJsJ,MAAO,GACP1Q,MAAO,IAGX4C,eAAe,EACfF,YAAY,EACZ6N,WAAY,MAIH/S,EAAc,WAAwF,IAAvFb,EAAsF,uDAA5DN,EAAcmC,EAA8C,uCAC9G,OAAQA,EAAOC,MAEX,KAAKJ,EAAauc,iBACd,OAAO,2BAAIje,GAAX,IAAkB+F,WAAYlE,EAAOkE,aACzC,KAAKrE,EAAawc,mBACd,OAAO,2BAAIle,GAAX,IAAkBiG,cAAepE,EAAOoE,gBAC5C,KAAKvE,EAAayc,sBACd,OAAO,2BAAIne,GAAX,IAAkBoD,KAAMvB,EAAOuB,OACnC,KAAK1B,EAAa0c,YACd,OAAO,2BAAIpe,GAAX,IAAkB4T,WAAY/R,EAAOsS,UACzC,QACI,OAAOnU,IAINqe,EAAkB,SAACtY,GAAD,MAC1B,CAACjE,KAAMJ,EAAauc,iBAAkBlY,eAO9BuY,EAAe,SAACnK,GAAD,MACvB,CAACrS,KAAMJ,EAAa0c,YAAajK,YAKzBuG,EAAkB,yDAAM,WAAO1T,GAAP,eAAAiV,EAAA,sEAEjB0B,IAAQC,KAFS,OAE7BxB,EAF6B,OAGjC,IACgC,IAAxBA,EAAIhZ,KAAKqZ,YACTzV,EAASqX,GAAgB,IACzBrX,GAdqBuX,EAcKnC,EAAIhZ,KAAKA,KAb1C,CAACtB,KAAMJ,EAAayc,sBAAuB/a,KAAMmb,MAgB1CvX,EAAS9E,YAAe,WAE9B,MAAOP,GACL2a,QAAQC,IAAI,oCAAqC5a,GACjDmF,YAAmBnF,EAAOqF,GAV9B,QAYIA,GA1ByBf,GA0BC,EAzB7B,CAACnE,KAAMJ,EAAawc,mBAAoBjY,mBAUR,iCAXL,IAACA,EAGAsY,IAQI,OAAN,uDAsBlBnK,EAAU,SAAChR,GAAD,8CAA2B,WAAO4D,GAAP,eAAAiV,EAAA,sEAE9B0B,IAAQta,MAAMD,GAFgB,UAE1CgZ,EAF0C,gBAId,IAAxBA,EAAIhZ,KAAKqZ,WAJ6B,wBAKtCzV,EAASqX,GAAgB,IACzBrX,EAASsX,EAAa,OANgB,KAOtCtX,EAPsC,UAOtB0T,IAPsB,8DASX,KAAxB0B,EAAIhZ,KAAKqZ,WAT0B,6BAUlCzV,EAVkC,UAUnBwX,IAVmB,2CAYlCtX,YAAqBkV,EAAIhZ,KAAM4D,GAZG,0DAe1CsV,QAAQC,IAAI,8BAAZ,MACApV,YAAyB,EAAD,GAAQH,GAhBU,0DAA3B,uDAqBVsR,EAAW,yDAAM,WAAOtR,GAAP,eAAAiV,EAAA,sEACV0B,IAAQG,SADE,OACtB1B,EADsB,OAE1B,IACgC,IAAxBA,EAAIhZ,KAAKqZ,WACTzV,EAASqX,GAAgB,IAGzBnX,YAAqBkV,EAAIhZ,KAAM4D,GAErC,MAAOrF,GACL2a,QAAQC,IAAI,+BAAgC5a,GAC5CwF,YAAyBxF,EAAOqF,GAXV,2CAAN,uDAeXwX,EAAe,yDAAM,WAAOxX,GAAP,eAAAiV,EAAA,sEACd+B,IAAY7J,UADE,OAC1BiI,EAD0B,OAE9B,IAEIpV,EAASsX,EAAalC,EAAIhZ,KAAKoY,MAEnC,MAAO7Z,GACH2a,QAAQC,IAAI,+BAAgC5a,GAC5CwF,YAAyBxF,EAAOqF,GARN,2CAAN,wD,mBCvI5BxH,EAAOC,QAAU,CAAC,aAAe,4BAA4B,WAAa,0BAA0B,sBAAwB,qCAAqC,OAAS,sBAAsB,cAAgB,6BAA6B,OAAS,sBAAsB,KAAO,sB,8MCKvQiC,E,2EAAAA,K,sBAAAA,E,0BAAAA,E,4BAAAA,E,0CAAAA,E,oDAAAA,E,gCAAAA,E,qDAAAA,M,KAyCZ,IAAMhC,EAA8B,CAChC2G,MAAO,GACPE,SAAU,EACVI,WAAY,EACZF,YAAa,EACbN,YAAY,EACZU,UAAW,IAEFlG,EAAc,WAAmF,IAAlFX,EAAiF,uDAA1DN,EAAcmC,EAA4C,uCACzG,OAAQA,EAAOC,MACX,KAAKJ,EAAa+c,OACd,OAAO,2BAAIze,GAAX,IAAkBqG,MAAOrG,EAAMqG,MAAMmC,KAAI,SAAAkW,GAAC,OAAIA,EAAE9e,KAAOiC,EAAOyB,OAAhB,2BAA6Bob,GAA7B,IAAgC9V,UAAU,IAAQ8V,OACpG,KAAKhd,EAAaid,SACd,OAAO,2BAAI3e,GAAX,IAAkBqG,MAAOrG,EAAMqG,MAAMmC,KAAI,SAAAkW,GAAC,OAAIA,EAAE9e,KAAOiC,EAAOyB,OAAhB,2BAA6Bob,GAA7B,IAAgC9V,UAAU,IAAS8V,OACrG,KAAKhd,EAAakd,UACd,OAAO,2BAAI5e,GAAX,IAAkBqG,MAAOxE,EAAOwF,QACpC,KAAK3F,EAAamd,iBACd,OAAO,2BAAI7e,GAAX,IAAkByG,YAAa5E,EAAO4E,cAC1C,KAAK/E,EAAaod,sBACd,OAAO,2BAAI9e,GAAX,IAAkB2G,WAAY9E,EAAO8E,aACzC,KAAKjF,EAAaqd,YACd,OAAO,2BAAI/e,GAAX,IAAkBmG,WAAYtE,EAAOsE,aACzC,KAAKzE,EAAasd,sBACd,OAAO,2BACAhf,GADP,IAEI6G,UAAWhF,EAAOod,oBAAP,sBACDjf,EAAM6G,WADL,CACgBhF,EAAOyB,SAC5BtD,EAAM6G,UAAUkV,QAAO,SAAAnc,GAAE,OAAIA,IAAOiC,EAAOyB,YAEzD,QACI,OAAOtD,IAKNkf,EAAkB,SAAC5b,GAAD,MAAqB,CAACxB,KAAMJ,EAAa+c,OAAQnb,OAAQA,IAC3E6b,EAAoB,SAAC7b,GAAD,MAAqB,CAACxB,KAAMJ,EAAaid,SAAUrb,OAAQA,IAC/E8b,EAAa,SAAC/X,GAAD,MAAwB,CAACvF,KAAMJ,EAAakd,UAAWvX,MAAOA,IAK3EgY,EAAuB,SAACC,GAAD,MAAoC,CACpExd,KAAMJ,EAAaod,sBACnBnY,WAAY2Y,IAEHC,EAAqB,SAACpZ,GAAD,MAA0B,CACxDrE,KAAMJ,EAAaqd,YACnB5Y,WAAYA,IAEHqZ,EAA4B,SAACP,EAA8B3b,GAA/B,MAAmD,CACxFxB,KAAMJ,EAAasd,sBACnBC,oBAAqBA,EACrB3b,OAAQA,IAICkG,EAAa,yDAAM,WAAOxC,EAA4B2V,GAAnC,qBAAAV,EAAA,+DACEU,IAAWjc,UAApC+F,EADuB,EACvBA,YAAaF,EADU,EACVA,SAClBS,EAASuY,GAAmB,IAFA,SAGZnC,IAAQC,SAAS5W,EAAaF,GAHlB,OAGxB6V,EAHwB,OAI5B,IACIpV,EAASuY,GAAmB,IAC5BvY,EAASoY,EAAWhD,EAAIhZ,KAAKiD,QAC7BW,EAASqY,EAAqBjD,EAAIhZ,KAAKuD,aACzC,MAAOhF,GACL2a,QAAQC,IAAI,+BAAgC5a,GAC5CwF,YAAyBxF,EAAOqF,GAVR,2CAAN,yDAcb0C,EAAkB,SAACnD,EAAkBkD,GAAnB,8CAA0C,WAAOzC,GAAP,eAAAiV,EAAA,6DACrEjV,EAASuY,GAAmB,IAC5BvY,GAnC6BP,EAmCHgD,EAnC4B,CACtD3H,KAAMJ,EAAamd,iBACnBpY,YAAaA,KA+BwD,SAGrD2W,IAAQC,SAAS5T,EAAYlD,GAHwB,OAGjE6V,EAHiE,OAIrE,IACIpV,EAASoY,EAAWhD,EAAIhZ,KAAKiD,QAC7BW,EAASqY,EAAqBjD,EAAIhZ,KAAKuD,aACvCK,EAASuY,GAAmB,IAC9B,MAAO5d,GACL2a,QAAQC,IAAI,iCAAkC5a,GAC9CwF,YAAyBxF,EAAOqF,GAViC,iCAjCzC,IAACP,IAiCwC,OAA1C,uDAgBlBkD,EAAS,SAACrG,GAAD,8CAAoB,WAAO0D,GAAP,eAAAiV,EAAA,6DACtCjV,EAASwY,GAA0B,EAAMlc,IADH,SAGjBqa,IAAQhU,OAAOrG,GAHE,OAGlC2D,EAHkC,OAItC,IACqC,IAA7BA,EAAS7D,KAAKqZ,WACdzV,EAASkY,EAAgB5b,KAEzB0D,EAAS/E,YAAc,wBACvB+E,EAAS9E,YAAe,YAE5B8E,EAASwY,GAA0B,EAAOlc,IAC5C,MAAO3B,GACL2a,QAAQC,IAAI,iCAAkC5a,GAC9CwF,YAAyBxF,EAAOqF,GAdE,2CAApB,uDAoBT4C,EAAW,SAACtG,GAAD,8CAAoB,WAAO0D,GAAP,eAAAiV,EAAA,6DACxCjV,EAASwY,GAA0B,EAAMlc,IADD,SAEnBqa,IAAQ/T,SAAStG,GAFE,OAEpC2D,EAFoC,OAGxC,IACqC,IAA7BA,EAAS7D,KAAKqZ,YACdzV,EAASmY,EAAkB7b,IAE/B0D,EAASwY,GAA0B,EAAOlc,IAC5C,MAAO3B,GACLmF,YAAmBnF,EAAOqF,GATU,2CAApB,wD,mBCzJxBxH,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,gBAAkB,mCAAmC,UAAY,6BAA6B,qBAAuB,0C,gCCDlM,QAA0B,8C,mBCCzCD,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,YAAc,6BAA6B,MAAQ,yB,gCCDtH,oEAAO,IAAM0F,EAAkB,CAC3B0N,gBAAiB,uBACjB4M,gBAAiB,kBAER/a,EAA0B,K,mBCHvClF,EAAOC,QAAU,CAAC,UAAY,2BAA2B,WAAa,4BAA4B,cAAgB,+BAA+B,MAAQ,0B","file":"static/js/main.614a42e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\",\"jobStatus\":\"MyProfilePhoto_jobStatus__1F5Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__2BYGT\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"userAndLoginBlock\":\"Post_userAndLoginBlock__2x_uT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\"};","import {SideBarType} from \"../components/OldComponents/OldStore\";\r\nimport {v1} from \"uuid\";\r\n\r\nlet initialState: SideBarType = {\r\n    onlineFriends: [\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-3.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-6.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-2.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-7.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-10.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-9.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-5.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-8.jpg\"},\r\n    ],\r\n}\r\nconst sidebarReducer = (state: SideBarType = initialState) => {\r\n    return state\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\nimport sidebarReducer from \"./NavBarReducer\";\r\nimport {UsersActionsType, userReducer} from \"./UsersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk'\r\nimport {appReducer, AppActionsType} from \"./AppReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogsReducer} from \"./DialogsReducer\";\r\n\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nexport type RootActionsType = AuthActionsType | AppActionsType | ProfileActionsType | UsersActionsType\r\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\r\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    SideBar: sidebarReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","\r\n\r\n//types\r\nexport type NullableType<T> = null | T\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\",\r\n    APP_SET_STATUS = \"APP/SET-STATUS\"\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    error: null as NullableType<string>,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTIONS_TYPE.APP_SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: NullableType<string>) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: ACTIONS_TYPE.APP_SET_STATUS, status} as const);\r\n\r\n\r\n\r\n\r\n\r\n","import {v1} from \"uuid\";\r\n\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport enum ACTIONS_TYPE {\r\n    ADD_DIALOG_MESSAGE = \"DIALOGS/ADD-DIALOG-MESSAGE\",\r\n}\r\nexport type DialogActionsType = ReturnType<typeof addMessageAC>\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Boris Jonson\",\r\n            avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\",\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: DialogActionsType): DialogsStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text} as const)\r\n\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useAppSelector} from \"../../../Redux/store\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {userIDSelector} from \"../Selectors/Selectors\";\r\n\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate()\r\n    const myPhoto = useAppSelector<string | undefined>(state => state.ProfilePage.profile.photos?.small);\r\n    const myLoginName = useAppSelector<string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = ()=>{\r\n        navigate(`/profile/${userID}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div className={styles.userName} onClick={navigateToMyMage}>\r\n                {myLoginName}\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport {TextField} from \"@mui/material\";\r\n\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: MyPostsPropsType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(!values.text){\r\n                errors.text = \"Enter a message\"\r\n            }\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <TextField  multiline={true} className={styles.textArea}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")} onBlur={() => formik.errors.text = \"\"}\r\n            />\r\n                <div>\r\n                    <Button style={{backgroundColor: \"#0077B5\"}} variant={\"contained\"} type={\"submit\"}><TelegramIcon/></Button>\r\n                </div>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})","import {AppRootStateType} from \"../../../Redux/store\";\r\nimport {UserType} from \"../../../Redux/UsersReducer\";\r\nimport {PostType, ProfileDataType} from \"../../../Redux/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const userIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const postsDataSelector = (state:AppRootStateType):Array<PostType> =>{\r\n    return state.ProfilePage.postsData;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editProfileWrapper\":\"EditProfile_editProfileWrapper__30i2D\",\"content\":\"EditProfile_content___ZHRn\",\"formRow\":\"EditProfile_formRow__nKvXR\",\"contactText\":\"EditProfile_contactText___RyRo\",\"checkBoxLabel\":\"EditProfile_checkBoxLabel__3Yx_B\",\"button\":\"EditProfile_button__1wtrb\"};","import {AxiosError} from \"axios\";\r\nimport {AppThunkDispatch} from \"../Redux/store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../Redux/AppReducer\";\r\nimport {RespType} from \"../components/api\";\r\n\r\n\r\nexport const handleNetworkError = (Error: AxiosError<{ error: string }>, dispatch: AppThunkDispatch) =>{\r\n\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n    dispatch(setAppErrorAC(Error.response?.data.error || \"some Error\"));\r\n}\r\n\r\n\r\nexport const handleServerAppError = <D>(data: RespType<D>, dispatch: AppThunkDispatch, ) =>{\r\n    if (data.messages.length) {\r\n        dispatch(setAppErrorAC(data.messages[0]));\r\n    } else {\r\n        dispatch(setAppErrorAC(\"Some error occupied\"));\r\n    }\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\nexport const handleServerNetworkError = (error:Error, dispatch:AppThunkDispatch) =>{\r\n    dispatch(setAppErrorAC(error.message));\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"sideWrapper\":\"Header_sideWrapper__3LECh\",\"NavItem\":\"Header_NavItem__11nuk\",\"unActiveNavLink\":\"Header_unActiveNavLink__3MLaf\",\"activeNavLink\":\"Header_activeNavLink__1evn6\",\"logo\":\"Header_logo__22GGz\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"jobStatus\":\"Header_jobStatus__H8bbu\",\"login\":\"Header_login__2_qsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinEarthOnHover\":\"Error404_spinEarthOnHover__e2isj\",\"ErrorWrapper\":\"Error404_ErrorWrapper__1pf8y\",\"stars\":\"Error404_stars__SQd2w\",\"centralBody\":\"Error404_centralBody__1JEWd\",\"image404\":\"Error404_image404__3kdlv\",\"btnGoHome\":\"Error404_btnGoHome__1aZp-\",\"objects\":\"Error404_objects__1c8KN\",\"objectRocket\":\"Error404_objectRocket__Dl0sG\",\"rocketMovement\":\"Error404_rocketMovement__1jP2b\",\"earthMoon\":\"Error404_earthMoon__2Oh1x\",\"objectEarth\":\"Error404_objectEarth__1Upwt\",\"spinEarth\":\"Error404_spinEarth__1em9y\",\"objectMoon\":\"Error404_objectMoon__jD2Jg\",\"boxAstronaut\":\"Error404_boxAstronaut__2allS\",\"moveAstronaut\":\"Error404_moveAstronaut__3vQwN\",\"objectAstronaut\":\"Error404_objectAstronaut__34-08\",\"rotateAstronaut\":\"Error404_rotateAstronaut__2OcHy\",\"glowingStars\":\"Error404_glowingStars__3cRJl\",\"star\":\"Error404_star__1VYV1\",\"glowStar\":\"Error404_glowStar__3cklv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"ContactBlock_contactsBlock__2Civ_\",\"contactsBlockItem\":\"ContactBlock_contactsBlockItem__2K0-l\",\"icon\":\"ContactBlock_icon__3Ov0h\",\"lastContactBlockItem\":\"ContactBlock_lastContactBlockItem__2KVn5\"};","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../Redux/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../Redux/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC());\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {statusSelector} from \"../Common/Selectors/Selectors\";\r\n\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport { myUserID} from \"../../constants\";\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if ( userId !== myUserID ) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID && !status){\r\n\r\n        return (\r\n        <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if((editMode && userId === myUserID) ){\r\n        return (\r\n        <div className={styles.editableDiv}\r\n             data-testid=\"editableMyDiv\"\r\n            onClick={activateEditMode}>\r\n            {status}\r\n        </div>)\r\n    }\r\n\r\n    else return <input className={styles.input}\r\n                       onChange={changeTitle}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={deactivateEditMode}\r\n                       type=\"text\"\r\n                       data-testid=\"input\"\r\n                       value={localStatus}/>\r\n};\r\n\r\n","import React from 'react';\r\nimport {useAppSelector} from \"../../../Redux/store\";\r\nimport {profileSelector} from \"../../Common/Selectors/Selectors\";\r\nimport style from \"./ContactBlock.module.scss\"\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons/faGithub\";\r\nimport {faVk} from \"@fortawesome/free-brands-svg-icons/faVk\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons/faTwitter\";\r\nimport {faFacebook} from \"@fortawesome/free-brands-svg-icons/faFacebook\";\r\nimport {faFirefoxBrowser, faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faInstagram} from \"@fortawesome/free-brands-svg-icons/faInstagram\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons/faGoogle\";\r\n\r\nexport const ContactBlock = () => {\r\n    const profile = useAppSelector(profileSelector);\r\n\r\n    return (\r\n        <div className={style.contactsBlock}>\r\n            <div>\r\n                <strong>Contacts</strong>\r\n            </div>\r\n            {profile.contacts.vk &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faVk}/>\r\n                <a href={profile.contacts.vk}>\r\n                    Vk\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.instagram &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faInstagram}/>\r\n                <a href={profile.contacts.instagram}>\r\n                    Instagram\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.youtube &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faYoutube}/>\r\n                <a href={profile.contacts.youtube}>\r\n                    You tube\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.github &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGithub}/>\r\n                <a href={profile.contacts.github}>\r\n                    GitHub\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.twitter &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faTwitter}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    twitter\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.facebook &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFacebook}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    faceBook\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.website &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFirefoxBrowser}/>\r\n                <a href={profile.contacts.website}>\r\n                    Web site\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.mainLink &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGoogle}/>\r\n                <a href={profile.contacts.website}>\r\n                    Main link\r\n                </a>\r\n            </div>}\r\n            {profile.lookingForAJobDescription &&\r\n            <>\r\n                <div>\r\n                    <strong>Job description</strong>\r\n                </div>\r\n                <div className={style.contactsBlockItem}>\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n            </>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","import {OnlineFriendType} from \"../OldComponents/OldStore\";\r\nimport React from \"react\";\r\nimport chatStyles from \"../OldComponents/ChatBlock.module.scss\"\r\n\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType, uploadAvatarTC,\r\n} from \"../../../Redux/ProfileReducer\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../ProfileStatus\";\r\nimport Modal from \"@mui/material/Modal/Modal\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useAppSelector} from \"../../../Redux/store\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../Redux/AppReducer\";\r\nimport {userIDSelector} from \"../../Common/Selectors/Selectors\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {maxPictureSize} from \"../../../constants\";\r\nimport {ContactBlock} from \"../ProdileData/ContactBlock\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport {ChatBlock} from \"../../Navbar/ChatBlock\";\r\nimport {OnlineFriendType} from \"../../OldComponents/OldStore\";\r\nimport chatStyles from \"../../OldComponents/ChatBlock.module.scss\";\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 350,\r\n    bgcolor: '#F9F9FE',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: 2,\r\n}\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos?.large);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const myId = useAppSelector(userIDSelector);\r\n    const photoRef = useRef<HTMLInputElement>(null);\r\n    const onlineFriends = useAppSelector<Array<OnlineFriendType>>(state => state.SideBar.onlineFriends)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\r\n    const [fileAvatar, setFileAvatar] = useState<any>();\r\n    const [openPopover, setOpenPopover] = useState(false)\r\n    const popoverAnchor = useRef(null);\r\n    const show = Object.values(props.profile.contacts).every(item => item !== null)\r\n\r\n    const handleCloseModal = () => setOpen(false);\r\n    const handleClosePopover = () => setOpenPopover(false);\r\n    const handleOpenPopover = () => setOpenPopover(true);\r\n\r\n    const handleSaveAvatar = () => {\r\n        dispatch(uploadAvatarTC(fileAvatar));\r\n        handleCloseModal();\r\n    }\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const reader = new FileReader();\r\n        const file = e.target?.files;\r\n\r\n        if ((file && file[0].type) && (file[0].type === \"image/png\" || file[0].type === \"image/jpeg\")) {\r\n            setFileAvatar(file[0])\r\n            reader.onloadend = function () {\r\n                setLocalAvatar(reader.result)\r\n            }\r\n            if (file[0].size && file[0].size <= maxPictureSize) {\r\n                reader.readAsDataURL(file[0])\r\n            } else {\r\n                dispatch(setAppErrorAC(`Your file size must be less then ${maxPictureSize / 1000000}MB 😕`))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setAppErrorAC(`Your file has not in .png .jpeg format. Please choose the right file`))\r\n        }\r\n\r\n    }\r\n    let onlineFriendsArr = onlineFriends.map((f) =>\r\n            <ChatBlock\r\n                id={f.id}\r\n                avatar={f.avatar}/>\r\n        )\r\n    return (\r\n        <div className={styles.profileInfoWrapper}>\r\n\r\n            <div className={styles.profilePhoto}>\r\n                <div className={styles.avatarWrapper}>\r\n                    <img src={props.profile.photos?.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>\r\n                    {userId === myId &&\r\n                    <div className={styles.menu} onClick={() => setOpen(true)}><p>Change photo</p></div>}\r\n                </div>\r\n            </div>\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>\r\n                    <strong>{props.profile.fullName}</strong>\r\n                    {/*<img src={smallLogo} alt=\"smallLogo\"/>*/}\r\n                    <CheckCircleOutlineIcon\r\n                        className={styles.popover}\r\n                        ref={popoverAnchor}\r\n                        onClick={handleOpenPopover} fontSize={\"small\"}\r\n                        color={props.profile.lookingForAJob ? \"success\" : \"error\"}/>\r\n                </div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                <p className={styles.profileDescription}>\r\n                    {props.profile.aboutMe}\r\n                </p>\r\n            </div>\r\n            {show && <ContactBlock/>}\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriendsArr}\r\n            </div>\r\n            <Modal open={open}\r\n                   onClose={handleCloseModal}\r\n            >\r\n                <Box sx={style}>\r\n                    <Box>\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: 'center',\r\n                            alignItems: \"center\", position: \"relative\"\r\n                        }}><strong>\r\n                            <p style={{fontSize: \"20px\"}}>Uploading profile photo</p>\r\n                        </strong></Box>\r\n                        <IconButton style={{position: \"absolute\", top: \"5px\", right: \"10px\"}}\r\n                                    onClick={handleCloseModal}>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: 'center',\r\n                        alignItems: \"center\"\r\n                    }}>\r\n\r\n                        <Box id=\"outer-container\">\r\n                            <img src={base64Avatar || userPhoto} alt=\"avatar\"\r\n                                 width={\"200px\"} style={{borderRadius: \"8px\", marginBottom: \"10px\"}}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <input type={\"file\"} style={{display: \"none\"}} id={\"answer\"} ref={photoRef}\r\n                                       accept=\"image/*\" onChange={onChangeAvatar}/>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={() => photoRef.current && photoRef.current.click()}>Upload\r\n                                    photo</Button>\r\n                                <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                        onClick={handleSaveAvatar}>Save\r\n                                </Button>\r\n                            </label>\r\n                        </Box>\r\n                        <p>You can upload images in JPG or PNG format</p>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n            <Popover open={openPopover}\r\n                     anchorEl={popoverAnchor.current}\r\n                     onClose={handleClosePopover}\r\n                     anchorOrigin={{\r\n                         vertical: 'top',\r\n                         horizontal: 'left',\r\n                     }}\r\n                     transformOrigin={{\r\n                         vertical: 'bottom',\r\n                         horizontal: 'right',\r\n                     }}\r\n            >\r\n                <Typography\r\n                    sx={{p: 1}}>{props.profile.lookingForAJob ? \"In search of a job\" : \"Not looking for a job\"}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\n\r\ntype MyPostsPropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likesCount, setLikesCount] = useState<number>();\r\n    const maxLikesCount = 1000;\r\n    const generateLike = () => {\r\n        setLikesCount(Math.round(Math.random() * maxLikesCount));\r\n    };\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.userAndLoginBlock}>\r\n                <MyProfilePhoto/>\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div>\r\n                <span>Like: </span>{props.likeCount !== 0 ? props.likeCount : likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport {TextAreaForm} from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <div className={styles.myPostForm}>\r\n                <h5 className={styles.newPostHeader}>NEW POST</h5>\r\n                <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>)\r\n\r\n})\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {addPostActionAC} from \"../../Redux/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\n\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {postsDataSelector, profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {myUserID} from \"../../constants\";\r\n\r\ntype ProfilePropsType = {\r\n    userID: number| null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(postsDataSelector);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const addMessage = (text: string) =>{\r\n        return  dispatch(addPostActionAC(text));\r\n    }\r\n    return (\r\n        <div className={`${styles.profileWrapper} `}>\r\n            <ProfileInfo profile={profile}/>\r\n            {props.userID === myUserID &&\r\n            <MyPosts\r\n                placeholderText={placeholderText.profileAreaText}\r\n                callBack={addMessage}\r\n                postsData={postsData}/>}\r\n        </div>)\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\n\r\n\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {PATH} from \"../../App\";\r\nimport {myUserID} from \"../../constants\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector)\r\n    useEffect(() => {\r\n\r\n        if (userId !== myUserID){\r\n\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }else{\r\n            dispatch(getProfileTC(myUserID));\r\n            dispatch(getUserStatusTC(myUserID));\r\n        }\r\n\r\n    }, [userId, dispatch]);\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport {loginTC} from \"../../Redux/AuthReducer\";\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {NullableType, setAppErrorAC} from \"../../Redux/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const captchaUrl = useAppSelector<NullableType<string>>(state => state.Auth.captchaUrl)\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n            captcha: \"\"\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item justifyContent={'center'}>\r\n                <h1>Login</h1>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <FormControl  sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {/*<TextField label=\"Email\"\r\n                                       placeholder={\"email\"}\r\n                                       type=\"email\"\r\n                                       margin=\"normal\"\r\n                                       {...formik.getFieldProps(\"email\")} onFocus={removeError}/>*/}\r\n\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n                            {/*<TextField type={\"password\"}\r\n                                       label=\"Password\"\r\n                                       margin=\"normal\"\r\n                                       placeholder={\"Password\"}\r\n                                       {...formik.getFieldProps(\"password\")}\r\n                                       onFocus={removeError}/>\r\n\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}*/}\r\n\r\n\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n                            {captchaUrl &&\r\n                            <>\r\n                                <img src={captchaUrl} alt={\"captchaImg\"}/>\r\n                                <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Captcha</InputLabel>\r\n                                    <Input {...formik.getFieldProps(\"captcha\")}\r\n\r\n                                    />\r\n                                    {formik.touched.captcha && formik.errors.captcha ?\r\n                                        <div style={{color: \"red\"}}>{formik.errors.captcha}</div> : null}\r\n                                </FormControl>\r\n                            </>\r\n                            }\r\n\r\n                            <Button style={{marginTop:\" 1rem\"}} variant={'contained'}\r\n                                    type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\r\n\r\n    return (props:T):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {AlertTitle} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/store\";\r\nimport {NullableType, setAppErrorAC} from \"../../Redux/AppReducer\";\r\n\r\n\r\n\r\nexport const ErrorSnackBar = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const error = useAppSelector<NullableType<string>>(state => state.App.error);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert\r\n                onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>{error}</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport s from \"./EditProfile.module.scss\"\r\nimport {useAppSelector} from \"../../Redux/store\";\r\nimport {profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Formik} from \"formik\";\r\nimport {getProfileTC, updateProfileTC} from \"../../Redux/ProfileReducer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\n\r\nexport const EditProfile = React.memo(() => {\r\n    const userId = useAppSelector(state => state.Auth.data.id);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileTC(userId));\r\n    }, [userId, dispatch]);\r\n\r\n\r\n    return (\r\n        <div className={s.editProfileWrapper}>\r\n            <div className={s.content}><h3>Edit profile</h3>\r\n                <p>Contacts: </p>\r\n                <Formik enableReinitialize={true}\r\n                        initialValues={{\r\n                            userId: userId,\r\n                            lookingForAJob: profile.lookingForAJob,\r\n                            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n                            fullName: profile.fullName,\r\n                            aboutMe: profile.aboutMe,\r\n                            contacts: {\r\n                                facebook: profile.contacts.facebook,\r\n                                website: profile.contacts.website,\r\n                                vk: profile.contacts.vk,\r\n                                twitter: profile.contacts.twitter,\r\n                                instagram: profile.contacts.instagram,\r\n                                youtube: profile.contacts.youtube,\r\n                                github: profile.contacts.github,\r\n                                mainLink: profile.contacts.mainLink,\r\n                            }\r\n\r\n                        }}\r\n\r\n                        onSubmit={\r\n                            values => {\r\n                                dispatch(updateProfileTC(values));\r\n                                navigate(`${PATH.PROFILE}/${userId}`);\r\n                            }\r\n                        }>\r\n\r\n                    {props => (\r\n                        <form onSubmit={props.handleSubmit}>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Github: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.github\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.github}\r\n                                           error={!!props.errors.contacts?.github}\r\n                                           helperText={props.errors.contacts?.github}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Facebook: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.facebook\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.facebook}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>VK: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.vk\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.vk}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Instagram: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.instagram\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.instagram}\r\n\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Twitter: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.twitter\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.twitter}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>YouTube: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.youtube\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Your WebSite: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.website\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Main link: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.mainLink\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>About me: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"aboutMe\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.aboutMe}\r\n\r\n                                />\r\n\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Full name: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"fullName\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.fullName}\r\n\r\n                                />\r\n                            </div>\r\n                            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\r\n                                <FormControlLabel\r\n                                    labelPlacement={\"start\"}\r\n                                    className={s.contactText}\r\n                                    label={'Looking for a job:'}\r\n                                    name={\"lookingForAJob\"}\r\n                                    control={<Checkbox/>}\r\n                                    checked={props.values.lookingForAJob}\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Job description: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"260px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           name={\"lookingForAJobDescription\"}\r\n                                           type=\"text\"\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.lookingForAJobDescription}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className={s.button}>\r\n                                <Button variant={'contained'} type={\"submit\"}>Submit\r\n                                    changes</Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo.559316d0.svg\";","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../Redux/AuthReducer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector, userIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport logo from \"./../../Images/Logo.svg\"\r\nimport {PATH} from \"../../App\";\r\nimport {myUserID} from \"../../constants\";\r\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport {useAppSelector} from \"../../Redux/store\";\r\n\r\n\r\nexport function Navigation() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n    const myLoginName = useAppSelector<string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = ()=>{\r\n        navigate(`/profile/${userID}`)\r\n    }\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <div className={styles.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <nav className={styles.sideWrapper}>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={`${PATH.PROFILE}/${myUserID}`}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <RssFeedIcon fontSize={'large'}/>\r\n                        <div>Feed</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.DIALOGS} className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <MessageIcon fontSize={'large'}/>\r\n                        <div>Messages</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.USERS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <PeopleAltIcon fontSize={'large'}/>\r\n                        <div>All Users</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.EDIT_PROFILE} className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <SettingsIcon fontSize={'large'}/>\r\n                        <div>Edit Profile</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <div className={styles.loginBlock}>\r\n\r\n                <div className={styles.jobStatus}>\r\n                    <div className={styles.userName} onClick={navigateToMyMage}>\r\n                        {myLoginName}\r\n                    </div>\r\n                </div>\r\n                {isLoggedIn &&\r\n                <Button variant={\"outlined\"} className={styles.login} onClick={logOutHandler}>\r\n                    Log out\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {Navigation} from \"./Navigation\";\r\n\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <header className={styles.headerWrapper}>\r\n            <Navigation/>\r\n        </header>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Navigate, Outlet, useLocation} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../Redux/store\";\r\nimport {isLoggedInSelector} from \"./Common/Selectors/Selectors\";\r\nimport {Header} from \"./Header/Header\";\r\n\r\nconst PrivateRoutes = () => {\r\n    const location = useLocation();\r\n\r\n    const isLoggedIn = useAppSelector<boolean>(isLoggedInSelector);\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Navigate\r\n                to={`/login?redirectTo=${encodeURIComponent(location.pathname)}`}\r\n                replace\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Outlet/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;","export default __webpack_public_path__ + \"static/media/astronaut.efda7730.svg\";","export default __webpack_public_path__ + \"static/media/earth.e0fbdf02.svg\";","export default __webpack_public_path__ + \"static/media/moon.5a77d87b.svg\";","export default __webpack_public_path__ + \"static/media/rocket.9c039dba.svg\";","export default __webpack_public_path__ + \"static/media/404Text.154db121.svg\";","import React from \"react\";\r\nimport styles from \"./Error404.module.scss\";\r\nimport {NavLink, } from \"react-router-dom\";\r\n\r\nimport astronaut from \"./../../Images/astronaut.svg\";\r\nimport earth from \"./../../Images/earth.svg\";\r\nimport moon from \"./../../Images/moon.svg\";\r\nimport rocket from \"./../../Images/rocket.svg\";\r\nimport errorText from \"./../../Images/404Text.svg\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={styles.ErrorWrapper } >\r\n\r\n            <div className={styles.stars} >\r\n\r\n                <div className={styles.centralBody}>\r\n                    <img className={styles.image404} src={errorText} alt={\"img404\"}/>\r\n                    <NavLink to={`${PATH.HOME}`} className={styles.btnGoHome}>GO BACK HOME</NavLink>\r\n                </div>\r\n                <div className={styles.objects}>\r\n                    <img className={styles.objectRocket} src={rocket} alt={\"imgRocket\"}/>\r\n                    <div className={styles.earthMoon}>\r\n                        <img className={styles.objectEarth} src={earth} alt={\"imgEarth\"}/>\r\n                        <img className={styles.objectMoon} src={moon} alt={\"imgMoon\"}/>\r\n                    </div>\r\n                    <div className={styles.boxAstronaut}>\r\n                        <img className={styles.objectAstronaut} src={astronaut} alt={\"imgAstronaut\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.glowingStars}>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {useAppSelector} from \"./Redux/store\";\r\nimport UsersContainerFC from './components/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport {EventsContainer} from \"./components/Events/EventsContainer\";\r\nimport PhotosContainer from \"./components/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./Redux/AuthReducer\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\nimport {RequestStatusType} from \"./Redux/AppReducer\";\r\nimport {ErrorSnackBar} from \"./components/ErrorSnackBar/ErrorSnackBar\";\r\nimport {EditProfile} from \"./components/EditProfile/EditProfile\";\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\nimport {Error404} from \"./components/Error404/Error404\";\r\n\r\n\r\n\r\nconst DialogContainerFC = React.lazy(() => import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE: \"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS: \"/events\",\r\n    PHOTOS: \"/photos\",\r\n    EDIT_PROFILE: \"/edit_profile\"\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\r\n    const dispatch = useDispatch();\r\n    const userID = useAppSelector(state => state.Auth.data.id)\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={\"App\"}>\r\n            <main className={\"mainContent\"}>\r\n                {appStatus === 'loading' && <Preloader/>}\r\n                <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}/${userID}`}/>}/>\r\n                    <Route element={<PrivateRoutes />}>\r\n                        <Route path={`${PATH.PROFILE}/:userId`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={PATH.DIALOGS} element={withSuspense(DialogContainerFC)({})}/>\r\n                        <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                        <Route path={PATH.EDIT_PROFILE} element={<EditProfile/>}/>\r\n                    </Route>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>}/>\r\n                    <Route path={`${PATH.ERROR404}`} element={<Error404/>}/>\r\n                </Routes>\r\n                <ErrorSnackBar/>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./Redux/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import * as Yup from \"yup\";\r\n\r\nexport const freeUserId = 1079;\r\nexport const myUserID = 21748;\r\nexport const maxPictureSize = 10000000; //10MB\r\nconst webSiteRegular =  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n\r\nexport const DisplayingErrorMessagesSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n        .min(3, 'User name must be more than 3 symbols')\r\n        .max(50, 'User name must be less than 50 symbols')\r\n        .required('Required'),\r\n    aboutMe: Yup.string()\r\n        .min(3, 'User description text must be more than 3 symbols')\r\n        .max(300, 'User description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    lookingForAJobDescription: Yup.string()\r\n        .min(3, 'Job description text must be more than 3 symbols')\r\n        .max(300, 'Job description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    contacts: Yup.object().shape({\r\n        facebook: Yup.lazy(value => !value ? Yup.string() : Yup.string().matches(\r\n            /(?:https:\\/\\/)?(?:www\\.)?facebook\\.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[\\w]*\\/)*([\\w]*)/,\r\n            'Please enter correct url'\r\n        )),\r\n        website: Yup.string()\r\n            .min(0)\r\n            .nullable()\r\n            .matches(\r\n                webSiteRegular,\r\n                'Please enter correct url'\r\n            ),\r\n        vk: Yup.string()\r\n\r\n            .matches(\r\n                /(?:https:\\/\\/)?[-a-zA-Z0-9@:%_+.~#?&=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&=]*)?/gi,\r\n                'Please enter correct vk url'\r\n            ),\r\n        twitter: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /@([A-Za-z0-9_]{1,15})/,\r\n                'Please enter correct twitter url'\r\n            )\r\n            ,\r\n        instagram: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com|instagr.am|instagr.com)\\/(\\w+)/igm,\r\n                'Please enter correct instagram url'\r\n            )\r\n            ,\r\n        youtube: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /youtu(?:.*\\/v\\/|.*v\\|\\.be\\/)([A-Za-z0-9_-]{11})/,\r\n                'Please enter correct YouTube url'\r\n            )\r\n            ,\r\n        github: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:github.com)\\/(\\w+)/igm,\r\n                'Please enter correct github url'\r\n            )\r\n            ,\r\n        mainLink: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .url(),\r\n\r\n    }),\r\n\r\n\r\n});","import {v1} from \"uuid\";\r\nimport {profileAPI} from \"../components/api\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    SAVE_MY_PROFILE_PHOTO = \"PROFILE/SAVE-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n    DELETE_POST = \"PROFILE/DELETE-POST\",\r\n\r\n}\r\n\r\nexport type ProfileActionsType =\r\n    ReturnType<typeof addPostActionAC>\r\n    | ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof savePhotoAC>\r\n    | ReturnType<typeof setStatusAC>\r\n    | ReturnType<typeof deletePostAC>\r\n\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type UserProfileContactType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileDataType = {\r\n    userId: number,\r\n    aboutMe?: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription?: string\r\n    fullName?: string\r\n    contacts: UserProfileContactType\r\n    photos?: userProfilePhotosType\r\n\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (data: string) => ({type: ACTIONS_TYPE.ADD_POST, data} as const)\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\r\n    profile\r\n} as const);\r\nexport const savePhotoAC = (photos: userProfilePhotosType) => ({\r\n    type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO,\r\n    photos\r\n} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\nexport const deletePostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_POST, id} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n\r\n    postsData: [\r\n        {id: v1(), message: \"Do you have a job for me? What if I find it?\", likesCount: 0},\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n        {id: v1(), message: \"What is the good weather today,isn't it?\", likesCount: 0},\r\n    ],\r\n    status: \"\",\r\n\r\n    profile: {\r\n        userId: 0,\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {id: v1(), message: action.data, likesCount: 0}]\r\n            };\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ACTIONS_TYPE.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        case ACTIONS_TYPE.DELETE_POST:\r\n            return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getProfile(userId);\r\n    try {\r\n        dispatch(setUserProfileAC(res.data));\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.getStatus(userId);\r\n    try {\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.updateStatus(status)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const uploadAvatarTC = (photoFile: File) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    const userId = getState().Auth.data.id;\r\n    let res = await profileAPI.uploadAvatar(photoFile)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n            dispatch(await getProfileTC(userId))\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try upload avatar\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\nexport const updateProfileTC = (profile: ProfileDataType) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    let res = await profileAPI.updateProfile(profile)\r\n    const userId = getState().Auth.data.id;\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(await getProfileTC(userId))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update profile\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersPageType} from \"../Redux/UsersReducer\";\r\nimport {ProfileDataType} from \"../Redux/ProfileReducer\";\r\nimport {LoginParamsType} from \"../Redux/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\nexport type RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<RespType>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(photoFile:File){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<RespType<{photos:{small:\"\", large:\"\"}}>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile: ProfileDataType){\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile`, {...profile})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    },\r\n    getFollowers(userID: string | undefined){\r\n        return instance.get(`follow/${userID}`)\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    captcha(){\r\n        return instance.get<{url:string| null}>(`/security/get-captcha-url`)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__iDoIF\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3sygl\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__1II4U\",\"menu\":\"ProfileInfo_menu__4TXbA\",\"statusBlock\":\"ProfileInfo_statusBlock__12kNH\",\"profileName\":\"ProfileInfo_profileName__QENTj\",\"popover\":\"ProfileInfo_popover__3IVNF\",\"profileStatus\":\"ProfileInfo_profileStatus__P1vsw\",\"profileDescription\":\"ProfileInfo_profileDescription__4gsPq\",\"modalMainBox\":\"ProfileInfo_modalMainBox__3RTcD\",\"avatarBlock\":\"ProfileInfo_avatarBlock__3CI4t\",\"avatarImg\":\"ProfileInfo_avatarImg__3-stZ\",\"iconUpload\":\"ProfileInfo_iconUpload__aSS_N\"};","import {authAPI, AuthDataType, securityAPI} from \"../components/api\";\r\nimport {AppThunkDispatch} from \"./store\";\r\nimport {myUserID} from \"../constants\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGGED_IN = \"AUTH/SET-IS-LOGGED-IN\",\r\n    SET_IS_INITIALIZED = \"AUTH/SET-IS-INITIALIZED\",\r\n    SET_AUTH_PROFILE_DATA = \"AUTH/SET-AUTH-PROFILE-DATA\",\r\n    GET_CAPTCHA = \"AUTH/GET-CAPTCHA\"\r\n}\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n    | ReturnType<typeof getCaptchaAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n    captchaUrl: null | string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: myUserID,\r\n        email: \"\",\r\n        login: \"\",\r\n\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n    captchaUrl: null\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.SET_AUTH_PROFILE_DATA:\r\n            return {...state, data: action.data}\r\n        case ACTIONS_TYPE.GET_CAPTCHA:\r\n            return {...state, captchaUrl: action.captcha}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_LOGGED_IN, isLoggedIn} as const);\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.SET_AUTH_PROFILE_DATA, data: profileData} as const);\r\nexport const getCaptchaAC = (captcha : string| null) =>\r\n    ({type: ACTIONS_TYPE.GET_CAPTCHA, captcha} as const);\r\n\r\n\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.me();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n        }\r\n        else {\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try initialize app\", error)\r\n        handleNetworkError(error, dispatch);\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\r\n\r\n    let res = await authAPI.login(data);\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(getCaptchaAC(null))\r\n            dispatch( await initializeAppTC())\r\n        } else {\r\n            if(res.data.resultCode === 10){\r\n                dispatch(await getCaptchaTC())\r\n            }\r\n                handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to login\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        }\r\n        else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await securityAPI.captcha();\r\n    try{\r\n\r\n        dispatch(getCaptchaAC(res.data.url))\r\n    }\r\n    catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__2NhZI\",\"usersBlock\":\"users_usersBlock__30vL-\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__3flk2\",\"avatar\":\"users_avatar__3IP3J\",\"nameAndStatus\":\"users_nameAndStatus__nYsqe\",\"status\":\"users_status__2gbbh\",\"name\":\"users_name__3sX1D\"};","import {authAPI, userAPI} from \"../components/api\";\r\nimport {handleNetworkError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./AppReducer\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"USERS/FOLLOW\",\r\n    UNFOLLOW = \"USERS/UNFOLLOW\",\r\n    SET_USERS = \"USERS/SET-USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"USERS/SET-TOTAL-USERS-COUNT\",\r\n    IS_FETCHING = \"USERS/IS-FETCHING\",\r\n    IS_FOLLOWING_PROGRESS = \"USERS/IS-FOLLOWING-PROGRESS\"\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followSuccessAC> |\r\n    ReturnType<typeof unFollowSuccessAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC> |\r\n    ReturnType<typeof toggleIsFetchingAC>|\r\n    ReturnType < typeof toggleFollowingProgressAC>\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\nexport type UsersPageType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nconst initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state: UsersPageType = initialState, action: UsersActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case ACTIONS_TYPE.UNFOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case ACTIONS_TYPE.SET_USERS:\r\n            return {...state, items: action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case ACTIONS_TYPE.IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.FOLLOW, userID: userID} as const)\r\nexport const unFollowSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: ACTIONS_TYPE.SET_USERS, users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: ACTIONS_TYPE.IS_FETCHING,\r\n    isFetching: isFetching,\r\n} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = () => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    let {currentPage, pageSize} = getState().UsersPage\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let res = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get users\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let res = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try change page\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccessAC(userID));\r\n        } else{\r\n            dispatch(setAppErrorAC(\"Some error occupied\"));\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try follow user\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__2sV7W\",\"Title\":\"ChatBlock_Title__mV3fH\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__3QDbI\",\"OnlineDot\":\"ChatBlock_OnlineDot__1FIsc\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__2Jgwr\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__by2mZ\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","export const placeholderText = {\r\n    profileAreaText: \"What's on your mind?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"myPostForm\":\"MyPosts_myPostForm__2JNfF\",\"newPostHeader\":\"MyPosts_newPostHeader__3Y4vh\",\"posts\":\"MyPosts_posts__2zln9\"};"],"sourceRoot":""}