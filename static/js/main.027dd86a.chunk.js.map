{"version":3,"sources":["components/Common/boxStyle.module.scss","Redux/AppReducer.tsx","components/api.tsx","Redux/AuthReducer.tsx","components/Header/TopContainer.tsx","components/Header/Header.tsx","components/Navbar/ChatBlock.tsx","components/Navbar/SideBar.tsx","Redux/ProfileReducer.tsx","Redux/NavBarReducer.tsx","Redux/UsersReducer.tsx","Redux/reduxStore.ts","components/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","components/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","components/Events/Events.tsx","components/Events/EventsContainer.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspense.tsx","App.tsx","index.tsx","components/Common/Selectors/Selectors.ts","components/Navbar/Navbar.module.scss","components/Users/users.module.scss","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.scss","components/Navbar/ChatBlock.module.scss","Images/defaultUserImage.jpg","components/Header/Header.module.scss","components/Profile/Profile.module.scss","components/Common/TextAreaForm/textAreaData.ts","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/Preloader/Preloader.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/MyPosts.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","Redux/DialogsReducer.tsx","components/Common/TextAreaForm/TextAreaForm.tsx"],"names":["module","exports","ACTIONS_TYPE","instance","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","profileAPI","userID","status","put","authAPI","post","delete","data","initialState","error","setAppErrorAC","type","APP_SET_ERROR","myUserID","id","email","login","isInitialized","isLoggedIn","setIsLoggedInAC","AUTH_SET_IS_LOGGED_IN","TopContainer","navigate","useNavigate","dispatch","useDispatch","useSelector","isLoggedInSelector","className","styles","headerContent","src","alt","loginBlock","MyProfilePhoto","Button","onClick","a","res","resultCode","console","log","message","Header","headerWrapper","ChatBlock","props","chatStyles","onlineFriendsWrapper","imgProfilePhoto","avatar","OnlineDot","SideBar","onlineFriends","map","f","to","style","sideWrapper","NavItem","color","isActive","Title","v1","sidebarReducer","state","items","totalCount","isFetching","following","followSuccess","unFollowSuccess","setUsersAC","users","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","followingIsProgress","setStatusAC","SET_STATUS","postsData","likesCount","photo","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","photos","small","large","getProfileTC","userId","SET_SOME_USER_PROFILE","getUserStatusTC","rootReducer","combineReducers","ProfilePage","action","ADD_POST","SET_MY_PROFILE_PHOTO","DELETE_POST","filter","DialogPage","dialogsReducer","UsersPage","u","followed","Auth","AUTH_SET_IS_INITIALIZED","AUTH_SET_PROFILE_DATA","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","useAppSelector","Users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","defaultUserPhoto","userPhoto","usersWrapper","Pagination","onChange","event","page","size","variant","shape","count","data-testid","user","usersBlock","avatarAndFollowButton","disabled","some","nameAndStatus","name","Preloader","preloaderContainer","progress","CircularProgress","UserContainerFC","React","memo","usersSelector","isFetchingSelector","pageSizeSelector","currentPageSelector","totalUserCountSelector","followingArr","followingArrSelector","useEffect","response","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","statusSelector","Number","useParams","useState","localStatus","setLocalStatus","editMode","setEditMode","activateEditMode","deactivateEditMode","updateUserStatusTC","editableDiv","input","e","currentTarget","value","onKeyPress","key","onBlur","ProfileInfo","wrapper","descriptionBlock","statusBlock","profileName","profileStatus","Post","setLikesCount","round","random","itemWrapper","userAndLoginBlock","likeCount","MyPosts","postsElements","p","reverse","postBlock","TextAreaForm","placeholderText","callBack","posts","ProfileFC","postsDataSelector","profileSelector","commonStyle","mainBox","profileAreaText","text","ProfileContainerFC","myId","userIDSelector","PATH","LOGIN","Events","EventsContainer","Photos","PhotosContainer","content","Login","serverError","isPassType","setIsPassType","formik","useFormik","validate","values","errors","test","password","length","initialValues","rememberMe","onSubmit","messages","HOME","Grid","container","justifyContent","item","FormControl","FormLabel","href","rel","target","handleSubmit","FormGroup","sx","mTop","width","InputLabel","htmlFor","Input","getFieldProps","onFocus","touched","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","FormControlLabel","label","control","Checkbox","checked","withSuspense","Component","Suspense","fallback","DialogContainerFC","lazy","PROFILE","USERS","ERROR404","ANY_ROUTE","DIALOGS","EVENTS","PHOTOS","getState","isInitializedSelector","profileData","path","element","UsersContainerFC","ReactDOM","render","document","getElementById","dialogsAreaText","maxMessageLength","myPhoto","myLoginName","myProfilePhotoWrapper","mySmallPhoto","userName","dialogs","addMessageAC","resetForm","formWrapper","textArea","maxLength","placeholder","autoFocus"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,QAAU,4B,qHCEhBC,E,mHCGCC,E,OAAWC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAcNC,EAAU,SACVC,EAAqBC,GAC1B,OAAOR,EAASS,IAAT,qBAAsCF,EAAtC,kBAA2DC,KAI7DE,EAAa,SACXC,GACP,OAAOX,EAASS,IAAT,kBAAyCE,KAF3CD,EAAa,SAIZC,GACN,OAAOX,EAASS,IAAT,yBAA2DE,KAL7DD,EAAa,SAOTE,GAET,OAAOZ,EAASa,IAAT,iBAA4D,CAACD,YAI/DE,EAAU,WAEf,OAAOd,EAASS,IAAT,YAFFK,EAAU,SAIZH,GACH,OAAOX,EAASe,KAAT,iBAAgDJ,KALlDG,EAAU,SAOVH,GACL,OAAOX,EAASgB,OAAT,iBAAkDL,KARpDG,EAAU,SAUbG,GACF,OAAOjB,EAASe,KAAT,aAAoDE,IAXtDH,EAAU,WAcf,OAAOd,EAASgB,OAAiB,iB,SDtD7BjB,K,+BAAAA,M,KAWZ,IENYA,EFMNmB,EAAiC,CACnCC,MAAO,IAcEC,EAAgB,SAACD,GAAD,MAAoB,CAACE,KAAMtB,EAAauB,cAAeH,UExBvEI,EAAW,O,SAGZxB,K,yCAAAA,E,6CAAAA,E,0CAAAA,M,KA0BZ,IAAMmB,EAAiC,CACnCD,KAAM,CACFO,GAAID,EACJE,MAAO,GACPC,MAAO,IAEXC,eAAe,EACfC,YAAY,GAoBHC,EAAkB,SAACD,GAAD,MAC1B,CAACP,KAAMtB,EAAa+B,sBAAuBF,e,gCCpDzC,SAASG,IACZ,IAAMC,EAAWC,cACXC,EAAWC,cACXP,EAAaQ,YAAYC,KAQ/B,OACI,sBAAKC,UAAWC,IAAOC,cAAvB,UACI,qBAAKC,IAAK,sEAAuEC,IAAI,SACjF,sBAAKJ,UAAWC,IAAOI,WAAvB,UACKf,GAAc,cAACgB,EAAA,EAAD,IACdhB,GAAc,cAACiB,EAAA,EAAD,CAAQP,UAAWC,IAAOb,MAAOoB,QAV1C,WAClBZ,EDuFgB,uCAAM,WAAOA,GAAP,eAAAa,EAAA,sEACVjC,IADU,OACtBkC,EADsB,OAE1B,IACgC,IAAxBA,EAAI/B,KAAKgC,YACTf,EAASL,GAAgB,IAE/B,MAAOV,GACL+B,QAAQC,IAAIhC,EAAMiC,SAPI,2CAAN,uDCtFhBpB,EAAS,WAQkB,2BCpB5B,SAASqB,IACZ,OACQ,wBAAQf,UAAWC,IAAOe,cAA1B,SACI,cAACvB,EAAD,M,8CCLT,SAASwB,EAAUC,GAEtB,OACQ,sBAAKlB,UAAWmB,IAAWC,qBAA3B,UACI,qBAAKpB,UAAWmB,IAAWE,gBAAiBlB,IAAKe,EAAMI,OAAQlB,IAAK,uBACpE,sBAAMJ,UAAWmB,IAAWI,eCGrC,SAASC,EAAQN,GAEpB,IAAIO,EAAgBP,EAAMM,QAAQC,cAAcC,KAAI,SAACC,GAAD,OAChD,cAAC,IAAD,CAAoBC,GAAI,WAAaD,EAAEzC,GAAvC,SACI,cAAC+B,EAAD,CACW/B,GAAIyC,EAAEzC,GACNoC,OAAQK,EAAEL,UAHXK,EAAEzC,OAKpB,OACI,wBAAOc,UAAW6B,IAAMC,YAAxB,UACI,qBAAK9B,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAAUH,GAAE,mBAAc3C,GAAY4C,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAAlG,uBAEJ,qBAAKjC,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAASH,GAAI,WAAYC,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAArF,wBAEJ,qBAAKjC,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAASH,GAAI,UAAWC,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAApF,sBAEJ,qBAAKjC,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAASH,GAAI,UAAWC,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAApF,sBAEJ,qBAAKjC,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAASH,GAAI,SAAUC,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAAnF,4BAEJ,qBAAKjC,UAAW6B,IAAME,QAAtB,SACI,cAAC,IAAD,CAASH,GAAI,YAAaC,MAAO,kBAAmB,CAAEG,MAArB,EAAGC,SAAoC,YAAc,UAAtF,wBAGJ,sBAAKjC,UAAWmB,IAAWF,UAA3B,UACI,sBAAMjB,UAAWmB,IAAWe,MAA5B,yBACCT,Q,ICpCLhE,E,wBCJRmB,EAA4B,CAC5B6C,cAAe,CACX,CAACvC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,gEACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,+DACnB,CAACpC,GAAIiD,eAAMb,OAAQ,iEAMZc,EAHQ,WAAwC,IAAvCC,EAAsC,uDAAjBzD,EACzC,OAAOyD,G,QCUPzD,EAA0B,CAC1B0D,MAAO,GACPpE,SAAU,EACVqE,WAAY,EACZtE,YAAa,EACbuE,YAAY,EACZC,UAAW,IA8BFC,GAAgB,SAACrE,GAAD,MAAqB,CAACU,KAAM,SAAUV,OAAQA,IAC9DsE,GAAkB,SAACtE,GAAD,MAAqB,CAACU,KAAM,WAAYV,OAAQA,IAClEuE,GAAa,SAACC,GAAD,MAAwB,CAAC9D,KAAM,YAAa8D,MAAOA,IAKhEC,GAAuB,SAACC,GAAD,MAAoC,CACpEhE,KAAM,wBACNwD,WAAYQ,IAEHC,GAAqB,SAACR,GAAD,MAA0B,CAACzD,KAAM,cAAeyD,WAAYA,IACjFS,GAA4B,SAACC,EAA8B7E,GAA/B,MAAmD,CACxFU,KAAM,wBACNmE,oBAAqBA,EACrB7E,OAAQA,I,oBFvEAZ,K,kCAAAA,E,oBAAAA,E,oDAAAA,E,oDAAAA,E,sDAAAA,E,gCAAAA,E,mCAAAA,M,KAiDL,IAUM0F,GAAc,SAAC7E,GAAD,MAAqB,CAACS,KAAMtB,EAAa2F,WAAY9E,WAI1EM,GAAgC,CAElCyE,UAAW,CACP,CAACnE,GAAIiD,eAAMrB,QAAS,+CAAgDwC,WAAY,GAChF,CAACpE,GAAIiD,eAAMrB,QAAS,6CAA8CwC,WAAY,GAC9E,CAACpE,GAAIiD,eAAMrB,QAAS,2CAA4CwC,WAAY,IAEhFhF,OAAQ,GACRiF,MAAO,GACPC,QAAS,CACLC,SAAU,GACVC,gBAAgB,EAChBC,0BAA2B,GAC3BC,QAAS,GACTC,SAAU,CACNC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,GAAI,GACJC,QAAS,GACTC,QAAS,IAEbC,OACI,CACIC,MAAO,GACPC,MAAO,MA4BVC,GAAe,SAACC,GAAD,8CAA2B,WAAO9E,GAAP,eAAAa,EAAA,sEAEnCrC,EAAsBsG,GAFa,OAE/ChE,EAF+C,OAGnD,IACId,GAvEyB4D,EAuEC9C,EAAI/B,KAvEyB,CAC3DI,KAAMtB,EAAakH,sBACnBnB,aAsEE,MAAO3E,GACL+B,QAAQC,IAAIhC,EAAMiC,SAN6B,iCAnEvB,IAAC0C,IAmEsB,OAA3B,uDAWfoB,GAAkB,SAACF,GAAD,8CAA2B,WAAO9E,GAAP,eAAAa,EAAA,sEAEtCrC,EAAqBsG,GAFiB,OAElDhE,EAFkD,OAGtD,IACuB,MAAfA,EAAIpC,QACJsB,EAASuD,GAAYzC,EAAI/B,OAE/B,MAAOE,GACL+B,QAAQC,IAAIhC,EAAMiC,SARgC,2CAA3B,uDG1HzB+D,GAAcC,YAAgB,CAChCC,YHsF0B,WAAmF,IAAlF1C,EAAiF,uDAAxDzD,GAAcoG,EAA0C,uCAC5G,OAAQA,EAAOjG,MACX,KAAKtB,EAAawH,SACd,OAAO,2BACA5C,GADP,IAEIgB,UAAU,GAAD,mBAAMhB,EAAMgB,WAAZ,CAAuB,CAACnE,GAAIiD,eAAMrB,QAASkE,EAAOrG,KAAM2E,WAAY,OAGrF,KAAK7F,EAAakH,sBACd,OAAO,2BAAItC,GAAX,IAAkBmB,QAASwB,EAAOxB,UAEtC,KAAK/F,EAAayH,qBACd,OAAO,2BAAI7C,GAAX,IAAkBkB,MAAOyB,EAAOzB,QAEpC,KAAK9F,EAAa2F,WACd,OAAO,2BAAIf,GAAX,IAAkB/D,OAAQ0G,EAAO1G,SAErC,KAAKb,EAAa0H,YACd,OAAO,2BAAI9C,GAAX,IAAkBgB,UAAWhB,EAAMgB,UAAU+B,QAAO,SAAA3G,GAAI,OAAIA,EAAKS,KAAO8F,EAAO9F,QACnF,QACI,OAAOmD,IGzGfgD,WAAYC,IACZ9D,QAASY,EACTmD,UDiBuB,WAA4D,IAA3DlD,EAA0D,uDAAlDzD,EAAcoG,EAAoC,uCAClF,OAAQA,EAAOjG,MACX,IAAK,SAED,OAAO,2BAAIsD,GAAX,IAAkBC,MAAOD,EAAMC,MAAMZ,KAAI,SAAA8D,GAAC,OAAIA,EAAEtG,KAAO8F,EAAO3G,OAAhB,2BAA6BmH,GAA7B,IAAgCC,UAAU,IAAQD,OACpG,IAAK,WACD,OAAO,2BAAInD,GAAX,IAAkBC,MAAOD,EAAMC,MAAMZ,KAAI,SAAA8D,GAAC,OAAIA,EAAEtG,KAAO8F,EAAO3G,OAAhB,2BAA6BmH,GAA7B,IAAgCC,UAAU,IAASD,OACrG,IAAK,YACD,OAAO,2BAAInD,GAAX,IAAkBC,MAAO0C,EAAOnC,QACpC,IAAK,mBACD,OAAO,2BAAIR,GAAX,IAAkBpE,YAAa+G,EAAO/G,cAC1C,IAAK,wBACD,OAAO,2BAAIoE,GAAX,IAAkBE,WAAYyC,EAAOzC,aACzC,IAAK,cACD,OAAO,2BAAIF,GAAX,IAAkBG,WAAYwC,EAAOxC,aACzC,IAAK,wBACD,OAAO,2BACAH,GADP,IAEII,UAAWuC,EAAO9B,oBAAP,sBACDb,EAAMI,WADL,CACgBuC,EAAO3G,SAC5BgE,EAAMI,UAAU2C,QAAO,SAAAlG,GAAE,OAAIA,IAAO8F,EAAO3G,YAEzD,QACI,OAAOgE,ICvCfqD,KR2BuB,WAAwF,IAAvFrD,EAAsF,uDAA5DzD,EAAcoG,EAA8C,uCAC9G,OAAQA,EAAOjG,MAEX,KAAKtB,EAAa+B,sBACd,OAAO,2BAAI6C,GAAX,IAAkB/C,WAAY0F,EAAO1F,aACzC,KAAK7B,EAAakI,wBACd,OAAO,2BAAItD,GAAX,IAAkBhD,cAAe2F,EAAO3F,gBAC5C,KAAK5B,EAAamI,sBACd,OAAO,2BAAIvD,GAAX,IAAkB1D,KAAMqG,EAAOrG,OAEnC,QACI,OAAO0D,IQrCfwD,IVDsB,WAAwF,IAAvFxD,EAAsF,uDAA5DzD,EAAcoG,EAA8C,uCAC7G,OAAQA,EAAOjG,MAEX,KAAKtB,EAAauB,cACd,OAAO,2BAAIqD,GAAX,IAAkBxD,MAAOmG,EAAOnG,QACpC,QACI,OAAOwD,MUGbyD,GAAmBC,OAAOC,sCAAwCC,IAE3DC,GAAQC,YAAYtB,GAAaiB,GAAiBM,YAAgBC,QAElEC,GAAqDxG,IAIlEiG,OAAOG,MAAQA,G,2CChBR,SAASK,GAAT,GAC2D,IAD3C1D,EAC0C,EAD1CA,MAAO2D,EACmC,EADnCA,eAAgBvI,EACmB,EADnBA,YAAaC,EACM,EADNA,SAAUuI,EACJ,EADIA,cAAeC,EACnB,EADmBA,oBAC1DC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAC5BlH,EAAWC,cACXkH,EAAaC,KAAKC,KAAKP,EAAiBtI,GACxC8I,EAA2BC,KAMjC,OAAO,sBAAKjH,UAAW6B,KAAMqF,aAAtB,UACH,cAACC,GAAA,EAAD,CAAYnF,MAAO,UACPoF,SAPM,SAACC,EAA6BC,GAChDb,EAAca,IAOFC,KAAM,QACNC,QAAS,WACTC,MAAM,UACNC,MAAOb,EACPS,KAAMrJ,EACN0J,cAAY,eAEvB9E,EAAMnB,KAAI,SAAAkG,GAAI,aAEX,qBAAmBD,cAAY,UAA/B,SACI,sBAAK3H,UAAW6B,KAAMgG,WAAtB,UACI,sBAAK7H,UAAW6B,KAAMiG,sBAAtB,UACI,qBAAKtH,QAAS,kBAAMd,EAAS,YAAD,OAAakI,EAAK1I,MACzCc,UAAW6B,KAAMP,OAAQnB,IAAKyH,EAAKtD,OAAOC,MAAQqD,EAAKtD,OAAOC,MAAQyC,EACtE5G,IAAK,SACV,+BACKwH,EAAKnC,SACF,cAAClF,EAAA,EAAD,CAAQwH,SAAUrB,EACbsB,MAAK,SAAA9I,GAAE,OAAIA,IAAO0I,EAAK1I,MACpBsB,QAAS,WAELmG,EAAWiB,EAAK1I,KAJ5B,sBAQE,cAACqB,EAAA,EAAD,CAAQwH,SAAUrB,EAAoBsB,MAAK,SAAA9I,GAAE,OAAIA,IAAO0I,EAAK1I,MACrDsB,QACI,WAGIoG,EAASgB,EAAK1I,KAL9B,yBAWd,sBAAKc,UAAW6B,KAAMoG,cAAtB,UACI,oBAAIjI,UAAW6B,KAAMqG,KAArB,SACI,8BAAMN,EAAKM,SAEf,qBAAKlI,UAAW6B,KAAMvD,OAAtB,sCAA2CsJ,EAAKtJ,cAAhD,QAA0D,sBA/B5DsJ,EAAK1I,U,kCCtCpB,SAASiJ,KACZ,OACI,qBAAKnI,UAAWC,KAAOmI,mBAAvB,SACI,qBAAKpI,UAAWC,KAAOoI,SAAvB,SACI,cAACC,GAAA,EAAD,CAAkBf,KAAM,SCUxC,IA4CegB,GA5CaC,IAAMC,MAAK,WAEnC,IAAM7I,EAAWC,cACXgD,EAAQyD,GAAeoC,KACvBlG,EAAa8D,GAAeqC,KAC5BzK,EAAWoI,GAAesC,KAC1B3K,EAAcqI,GAAeuC,KAC7BrC,EAAiBF,GAAewC,KAChCC,EAAezC,GAAe0C,KAGpCC,qBAAU,WACNrJ,EJoDkB,SAAC3B,EAAqBC,GAAtB,8CAA2C,WAAO0B,GAAP,eAAAa,EAAA,6DACjEb,EAASoD,IAAmB,IADqC,SAE5ChF,EAAiBC,EAAaC,GAFc,OAE7DgL,EAF6D,OAGjE,IACItJ,EAASoD,IAAmB,IAC5BpD,EAASgD,GAAWsG,EAASvK,KAAK2D,QAClC1C,EAASkD,GAAqBoG,EAASvK,KAAK4D,aAC9C,MAAO1D,GACL+B,QAAQC,IAAIhC,EAAMiC,SAR2C,2CAA3C,sDIpDTqI,CAAWlL,EAAaC,MAClC,CAACD,EAAaC,EAAU0B,IAc3B,OACI,mCAEQ4C,EACI,cAAC2F,GAAD,IACA,cAAC5B,GAAD,CAAOE,cAjBD,SAAC2C,GACnBxJ,EJ4DuB,SAAC1B,EAAkBkL,GAAnB,8CAA0C,WAAOxJ,GAAP,eAAAa,EAAA,6DACrEb,EAASoD,IAAmB,IAC5BpD,EA9BsD,CACtDb,KAAM,mBACNd,YA4B0BmL,IAF2C,SAGhDpL,EAAiBoL,EAAYlL,GAHmB,OAGjEgL,EAHiE,OAIrE,IACItJ,EAASgD,GAAWsG,EAASvK,KAAK2D,QAClC1C,EAASkD,GAAqBoG,EAASvK,KAAK4D,aAC5C3C,EAASoD,IAAmB,IAC9B,MAAOnE,GACL+B,QAAQC,IAAIhC,EAAMiC,SAT+C,2CAA1C,sDI5DduI,CAAgBnL,EAAUkL,KAiBCnL,YAAaA,EACbuI,eAAgBA,EAChBtI,SAAUA,EACV2E,MAAOA,EACP+D,SAdvB,SAACvI,GACduB,EJmEc,SAACvB,GAAD,8CAAoB,WAAOuB,GAAP,eAAAa,EAAA,6DACtCb,EAASqD,IAA0B,EAAM5E,IADH,SAGjBG,EAAeH,GAHE,OAGlC6K,EAHkC,OAItC,IACqC,IAA7BA,EAASvK,KAAKgC,YACdf,EAAS8C,GAAcrE,IAE3BuB,EAASqD,IAA0B,EAAO5E,IAC5C,MAAOQ,GACL+B,QAAQC,IAAIhC,EAAMiC,SAVgB,2CAApB,sDInELwI,CAAOjL,KAcoBsI,WAnBrB,SAACtI,GAChBuB,EJuFgB,SAACvB,GAAD,8CAAoB,WAAOuB,GAAP,eAAAa,EAAA,6DACxCb,EAASqD,IAA0B,EAAM5E,IADD,SAEnBG,EAAiBH,GAFE,OAEpC6K,EAFoC,OAGxC,IACqC,IAA7BA,EAASvK,KAAKgC,YACdf,EAAS+C,GAAgBtE,IAE7BuB,EAASqD,IAA0B,EAAO5E,IAC5C,MAAOQ,GACL+B,QAAQC,IAAIhC,EAAMiC,SATkB,2CAApB,sDIvFPyI,CAASlL,KAmBkBqI,oBAAqBqC,S,iDC/CpDS,GAAgB,WACzB,IAAM5J,EAAWC,cACXvB,EAASgI,GAAemD,KACxB/E,EAASgF,OAAOC,cAAsBjF,QAHb,EAIOkF,mBAAStL,GAJhB,oBAIxBuL,EAJwB,KAIXC,EAJW,OAKCF,oBAAkB,GALnB,oBAKxBG,EALwB,KAKdC,EALc,KAQzBC,EAAmB,WACrBH,EAAexL,GACf0L,GAAY,IAEVE,EAAqB,WACvBtK,EP+H0B,SAACtB,GAAD,8CAAoB,WAAOsB,GAAP,eAAAa,EAAA,sEAElCrC,EAAwBE,GAFU,OAE9CoC,EAF8C,OAGlD,IACgC,IAAxBA,EAAI/B,KAAKgC,YACTf,EAASuD,GAAY7E,IAE3B,MAAOO,GACL+B,QAAQC,IAAIhC,EAAMiC,SAR4B,2CAApB,sDO/HjBqJ,CAAmBN,IAC5BG,GAAY,IAWhB,OAAKtF,IAAWzF,EAGR,qBAAK0I,cAAY,cAAjB,SACKrJ,IAIVyL,GAAYrF,IAAWzF,IAAaX,EAGnC,qBACQ0B,UAAWC,KAAOmK,YAClB5J,QAASyJ,EAFjB,wBAODF,GAAYrF,IAAWzF,EAEtB,qBAAKe,UAAWC,KAAOmK,YAClBzC,cAAY,gBACbnH,QAASyJ,EAFb,SAGK3L,IAIG,uBAAO0B,UAAWC,KAAOoK,MAClBjD,SArCC,SAACkD,GACjBR,EAAeQ,EAAEC,cAAcC,QAqChBC,WAnCO,SAACH,GACT,UAAVA,EAAEI,KACFR,KAkCWS,OAAQT,EACRnL,KAAK,OACL4I,cAAY,QACZ6C,MAAOX,KCvDjBe,GAAcpC,IAAMC,MAAK,SAACvH,GAAgC,IAAD,IAElE,OACI,sBAAKlB,UAAWC,KAAO4K,QAAvB,UACI,qBAAK7K,UAAWC,KAAO6K,iBAAvB,SACI,qBAAK3K,IAAG,oBAAEe,EAAMsC,eAAR,aAAE,EAAec,OAAOE,aAAxB,QAAiCwC,KAAkB5G,IAAK,gBAEpE,sBAAKJ,UAAWC,KAAO8K,YAAvB,UACI,qBAAK/K,UAAWC,KAAO+K,YAAvB,SAAqC9J,EAAMsC,QAAQC,WACnD,qBAAKzD,UAAWC,KAAOgL,cAAvB,SACI,cAAC,GAAD,MAEJ,sBAAKjL,UAAWC,KAAO0D,0BAAvB,uCACgCzC,EAAMsC,QAAQG,6BAE9C,sBAAK3D,UAAWC,KAAO4D,SAAvB,UACI,8CACA,6CAAgB3C,EAAMsC,QAAQK,SAASC,YACvC,8CAAiB5C,EAAMsC,QAAQK,SAASG,aACxC,4CAAe9C,EAAMsC,QAAQK,SAASQ,WACtC,uCAAUnD,EAAMsC,QAAQK,SAASM,kB,yCCxB9C,SAAS+G,GAAKhK,GAA0B,IAAD,EACN0I,qBADM,oBACnCtG,EADmC,KACvB6H,EADuB,KAU1C,OAJAlC,qBAAU,WAFNkC,EAAcrE,KAAKsE,MAFD,IAEOtE,KAAKuE,aAI/B,IAGC,sBAAKrL,UAAWC,KAAOqL,YAAvB,UACI,qBAAKtL,UAAWC,KAAOsL,kBAAvB,SACI,cAACjL,EAAA,EAAD,MAEJ,4BACKY,EAAMJ,UAEX,gCACI,0CAAwC,IAApBI,EAAMsK,UAAkBtK,EAAMsK,UAAYlI,Q,iCChBjEmI,GAAUjD,IAAMC,MAAK,SAACvH,GAA6B,IAAD,EAEvDwK,EAAa,UAAGxK,EAAMmC,iBAAT,aAAG,EAAiB3B,KAAI,SAAAiK,GAAC,OAAI,cAACT,GAAD,CACMpK,QAAS6K,EAAE7K,QACX0K,UAAWG,EAAErI,YAFRqI,EAAEzM,OAEqB0M,UAChF,OAAO,sBAAK5L,UAAWC,KAAO4L,UAAvB,UACH,0CACA,cAACC,GAAA,EAAD,CAAcC,gBAAiB7K,EAAM6K,gBAAiBC,SAAU9K,EAAM8K,WACtE,qBAAKhM,UAAWC,KAAOgM,MAAvB,SACKP,U,SCLAQ,GAAY1D,IAAMC,MAAK,SAACvH,GACjC,IAAMmC,EAAYiD,GAAe6F,KAC3B3I,EAAU8C,GAAe8F,KACzBxM,EAAWC,cAKjB,OACI,sBAAKG,UAAS,UAAKC,KAAO4K,QAAZ,YAAuBwB,KAAYC,SAAjD,UACI,cAAC1B,GAAD,CAAapH,QAASA,IACrBtC,EAAM7C,SAAWY,GAAY,cAACwM,GAAD,CAASM,gBAAiBA,KAAgBQ,gBACjCP,SAP5B,SAACQ,GAChB,OAAQ5M,GXkCgBjB,EWlCS6N,EXkCS,CAACzN,KAAMtB,EAAawH,SAAUtG,UAAjD,IAACA,GW3BmB0E,UAAWA,UCnBjDoJ,GAAyBjE,IAAMC,MAAK,WAE7C,IAAM/D,EAASgF,OAAOC,cAAsBjF,QACtCgI,EAAOpG,GAAeqG,KACtBrN,EAAagH,GAAevG,KAC5BH,EAAWC,cAcjB,OAXAoJ,qBAAU,WACFvE,IAAWgI,GACX9M,EAAS6E,GAAaC,IACtB9E,EAASgF,GAAgBF,MAEzB9E,EAAS6E,GAAaiI,IACtB9M,EAASgF,GAAgB8H,OAG9B,CAAChI,EAAQ9E,EAAU8M,IAEjBpN,EAGE,cAAC4M,GAAD,CAAW7N,OAAQqG,IAFf,cAAC,IAAD,CAAU9C,GAAIgL,GAAKC,WC1B3B,SAASC,KACZ,OACI,8BACI,2CCHL,SAASC,KAEZ,OACI,8BAEI,cAACD,GAAD,M,yBCCGE,GARA,WACX,OACI,0CCYOC,OAVf,WAEI,OACI,qBAAKjN,UAAWC,KAAOiN,QAAvB,SAEI,cAAC,GAAD,O,iICgBCC,GAAQ3E,IAAMC,MAAK,WAC5B,IAAMnJ,EAAaQ,aAAuC,SAAAuC,GAAK,OAAIA,EAAMqD,KAAKpG,cACxE8N,EAActN,aAAsC,SAAAuC,GAAK,OAAIA,EAAMwD,IAAIhH,SACvEe,EAAWC,cAHiB,EAIE+J,oBAAkB,GAJpB,oBAI3ByD,EAJ2B,KAIfC,EAJe,KAM5BC,EAASC,aAAU,CACrBC,SAAU,SAACC,GACP,IAAMC,EAAmC,GAazC,OAZKD,EAAOvO,MAEA,4CAA4CyO,KAAKF,EAAOvO,SAChEwO,EAAOxO,MAAQ,yBAFfwO,EAAOxO,MAAQ,WAIfuO,EAAOG,SAASC,OAAS,IACzBH,EAAOE,SAAW,2BAEjBH,EAAOG,WACRF,EAAOE,SAAW,qBAGfF,GAEXI,cAAe,CACX5O,MAAO,GACP0O,SAAU,GACVG,YAAY,GAGhBC,SAAU,SAAAP,GtBiCK,IAAC/O,EsBhCZiB,GtBgCYjB,EsBhCK+O,EtBgCN,uCAA2B,WAAO9N,GAAP,eAAAa,EAAA,sEAE9BjC,EAAcG,GAFgB,OAE1C+B,EAF0C,OAG9C,IACgC,IAAxBA,EAAI/B,KAAKgC,WACTf,EAASL,GAAgB,IAEzBK,EAASd,EAAc4B,EAAI/B,KAAKuP,SAAS,KAE/C,MAAOrP,GACL+B,QAAQC,IAAIhC,EAAMiC,SAVwB,2CAA3B,2DsB7BnB,GAAIxB,EACA,OAAO,cAAC,IAAD,CAAUsC,GAAIgL,GAAKuB,OAY9B,OAEI,cAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,eAAgB,SAAhC,SACI,eAACF,GAAA,EAAD,CAAMG,MAAI,EAACD,eAAgB,SAA3B,UACI,uCACA,eAACE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,yDACI,mBAAGC,KAAM,wCACNC,IAAI,aAAaC,OAAQ,SAD5B,sBAIJ,wEACA,0DACA,kDAEJ,sBAAMX,SAAUV,EAAOsB,aAAvB,SACI,eAACC,GAAA,EAAD,WACI,eAACN,GAAA,EAAD,CAAcO,GAAI,CAACC,KAAM,EAAGC,MAAO,QAASzH,QAAQ,WAApD,UACI,cAAC0H,GAAA,EAAD,CAAYC,QAAQ,2BAApB,mBACA,cAACC,GAAA,EAAD,2BAAW7B,EAAO8B,cAAc,UAAhC,IAA0CC,QA7BlD,WAChBlC,GAAexN,EAASd,EAAc,YAqCjByO,EAAOgC,QAAQpQ,OAASoO,EAAOI,OAAOxO,MACnC,qBAAK0C,MAAO,CAACG,MAAO,OAApB,SAA6BuL,EAAOI,OAAOxO,QAAe,KAE9D,eAACqP,GAAA,EAAD,CAAaO,GAAI,CAACC,KAAM,EAAGC,MAAO,QAASzH,QAAQ,WAAnD,UACI,cAAC0H,GAAA,EAAD,CAAYC,QAAQ,8BAApB,sBACA,cAACC,GAAA,EAAD,2BAAW7B,EAAO8B,cAAc,aAAhC,IACOnQ,GAAG,8BACHH,KAAMsO,EAAa,WAAa,OAChCmC,aACI,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACI,cAACC,GAAA,EAAD,CACIC,aAAW,6BACXpP,QA/Cf,WAC5B8M,GAAeD,IA+C4BwC,YA7Cf,SAACxI,GAC7BA,EAAMyI,kBAyCiC,SAKKzC,EAAa,cAAC0C,GAAA,EAAD,IAAmB,cAACC,GAAA,EAAD,WAMnDzC,EAAOgC,QAAQ1B,UAAYN,EAAOI,OAAOE,SACtC,qBAAKhM,MAAO,CAACG,MAAO,OAApB,SAA6BuL,EAAOI,OAAOE,WAAkB,QAarE,cAACoC,GAAA,EAAD,yBACIC,MAAO,cACPC,QAAS,cAACC,GAAA,EAAD,KACL7C,EAAO8B,cAAc,eAH7B,IAIIgB,QAAS9C,EAAO8B,cAAc,cAAc7E,SAI/C4C,GAAe,qBAAKvL,MAAO,CAACG,MAAO,OAApB,SAA6BoL,IAG7C,cAAC7M,EAAA,EAAD,CAAQiH,QAAS,YACTzI,KAAM,SADd,mCCxIbuR,OARf,SAA2BC,GAEvB,OAAO,SAACrP,GAAD,OACH,cAAC,IAAMsP,SAAP,CAAgBC,SAAU,cAACtI,GAAD,IAA1B,SACI,cAACoI,EAAD,eAAerP,QCUrBwP,GAAoBlI,IAAMmI,MAAK,kBAAK,iCAE7B/D,GAAO,CAChBuB,KAAM,IACNtB,MAAO,SACP+D,QAAS,WACTC,MAAO,SACPC,SAAU,OACVC,UAAU,IACVC,QAAS,WACTC,OAAO,UACPC,OAAO,WA6CIrL,GAxCC,WAEZ,IAAMxD,EAAQ6D,GAAMiL,WACdvR,EAAWC,cACXxB,EAASiI,GAAeqG,KACxBrN,EAAagH,GAAevG,KAC5BV,EAAgBiH,GAAe8K,KAMrC,OAJAnI,qBAAU,WACNrJ,ExB4BuB,uCAAM,WAAOA,GAAP,eAAAa,EAAA,sEAEjBjC,IAFiB,OAE7BkC,EAF6B,OAGjC,IACgC,IAAxBA,EAAI/B,KAAKgC,aACTf,EAASL,GAAgB,IACzBK,GAVqByR,EAUK3Q,EAAI/B,KAAKA,KAT1C,CAACI,KAAMtB,EAAamI,sBAAuBjH,KAAM0S,MAWhD,MAAOxS,GACL+B,QAAQC,IAAIhC,EAAMiC,SANtB,QAQIlB,GAlByBP,GAkBC,EAjB7B,CAACN,KAAMtB,EAAakI,wBAAyBtG,mBAMb,iCAPL,IAACA,EAGAgS,IAII,OAAN,yDwB3BxB,CAACzR,IAECP,EAOD,sBAAKW,UAAW,MAAhB,UACI,cAACe,EAAD,IACA,uBAAMf,UAAW,cAAjB,UACCV,GAAc,cAACkC,EAAD,CAASA,QAASa,EAAMb,UAClC,eAAC,IAAD,WACG,cAAC,IAAD,CAAO8P,KAAM1E,GAAKuB,KAAMoD,QAAS,cAAC,IAAD,CAAU3P,GAAE,UAAKgL,GAAKgE,QAAV,YAAqBvS,OAClE,cAAC,IAAD,CAAOiT,KAAM1E,GAAKC,MAAO0E,QAAS,cAACpE,GAAD,MAClC,cAAC,IAAD,CAAOmE,KAAI,UAAK1E,GAAKgE,QAAV,YAA6BW,QAASjB,GAAa7D,GAAb6D,CAAiC,MAClF,cAAC,IAAD,CAAOgB,KAAM1E,GAAKoE,QAASO,QAASjB,GAAaI,GAAbJ,CAAgC,MACpE,cAAC,IAAD,CAAOgB,KAAM1E,GAAKqE,OAAQM,QAAS,cAACxE,GAAD,MACnC,cAAC,IAAD,CAAOuE,KAAM1E,GAAKsE,OAAQK,QAAS,cAAC,GAAD,MACnC,cAAC,IAAD,CAAOD,KAAM1E,GAAKiE,MAAOU,QAAS,cAACC,GAAD,MAClC,cAAC,IAAD,CAAOF,KAAM1E,GAAKmE,UAAWQ,QAAS,cAAC,IAAD,CAAU3P,GAAIgL,GAAKkE,aACzD,cAAC,IAAD,CAAOQ,KAAM1E,GAAKkE,SAAUS,QAAS,uDAnB1C,cAACpJ,GAAD,KCtCfpC,OAAOG,MAAQA,GAEXuL,IAASC,OACD,cAAC,IAAD,CAAUxL,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,QAGZyL,SAASC,eAAe,U,gCCbhC,wZAAO,IAAMnI,EAAiB,SAACpH,GAC3B,OAAOA,EAAM0C,YAAYzG,QAEhBqO,EAAiB,SAACtK,GAC3B,OAAOA,EAAMqD,KAAK/G,KAAKO,IAEdiN,EAAoB,SAAC9J,GAC9B,OAAOA,EAAM0C,YAAY1B,WAEhB+I,EAAkB,SAAC/J,GAC5B,OAAOA,EAAM0C,YAAYvB,SAEhBzD,EAAqB,SAACsC,GAC/B,OAAOA,EAAMqD,KAAKpG,YAET8R,EAAwB,SAAC/O,GAClC,OAAOA,EAAMqD,KAAKrG,eAETsJ,EAAqB,SAACtG,GAC/B,OAAOA,EAAMkD,UAAU/C,YAEdkG,EAAgB,SAACrG,GAC1B,OAAOA,EAAMkD,UAAUjD,OAEdsG,EAAmB,SAACvG,GAC7B,OAAOA,EAAMkD,UAAUrH,UAEd2K,EAAsB,SAACxG,GAChC,OAAOA,EAAMkD,UAAUtH,aAEd6K,EAAyB,SAACzG,GACnC,OAAOA,EAAMkD,UAAUhD,YAEdyG,EAAuB,SAAC3G,GACjC,OAAOA,EAAMkD,UAAU9C,Y,mBCrC3BlF,EAAOC,QAAU,CAAC,YAAc,4BAA4B,QAAU,wBAAwB,OAAS,uBAAuB,UAAY,4B,mBCA1ID,EAAOC,QAAU,CAAC,aAAe,4BAA4B,WAAa,0BAA0B,sBAAwB,qCAAqC,OAAS,sBAAsB,cAAgB,6BAA6B,OAAS,sBAAsB,KAAO,sB,mBCAnRD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,YAAc,iCAAiC,cAAgB,mCAAmC,SAAW,8BAA8B,iBAAmB,wC,mBCAtQD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,gBAAkB,mCAAmC,UAAY,6BAA6B,qBAAuB,0C,gCCDlM,QAA0B,8C,mBCCzCD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,cAAgB,8BAA8B,WAAa,2BAA2B,MAAQ,wB,mBCA9JD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,MAAQ,yB,gCCDxG,oEAAO,IAAMuO,EAAkB,CAC3BQ,gBAAiB,uBACjBsF,gBAAiB,kBAERC,EAA0B,K,gCCJvC,8GAQaxR,EAAiBkI,IAAMC,MAAK,WACrC,IAAM/I,EAAWC,cACXoS,EAAUjS,aAAkD,SAAAuC,GAAK,OAAIA,EAAM0C,YAAYxB,SACvFyO,EAAclS,aAA6C,SAAAuC,GAAK,OAAIA,EAAMqD,KAAK/G,KAAKS,SACpFf,EAASyB,YAAY6M,KAK3B,OACI,sBAAK3M,UAAWC,IAAOgS,sBAAvB,UACI,qBAAKjS,UAAWC,IAAOiS,aAAc/R,IAAK4R,GAAW/K,IAAkB5G,IAAK,cAC5E,qBAAKJ,UAAWC,IAAOkS,SAAU3R,QAPhB,WACrBd,EAAS,YAAD,OAAarB,KAMjB,SACK2T,W,mBCpBjBzU,EAAOC,QAAU,CAAC,sBAAwB,8CAA8C,aAAe,uC,mBCAvGD,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,SAAW,4BAA4B,QAAU,6B,mBCA9HD,EAAOC,QAAU,CAAC,YAAc,0BAA0B,kBAAoB,kC,mBCA9ED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,mBCAjED,EAAOC,QAAU,CAAC,YAAc,kCAAkC,SAAW,iC,6FCmBvEoB,EAAiC,CAEnCwT,QAAS,CACL,CACIlT,GAAIiD,eACJ+F,KAAM,eACN5G,OAAQ,8DACRR,QAAS,+CAIjBoN,SAAU,CACN,CAAChP,GAAIiD,eAAMrB,QAAS,4CAoBfuR,EAAe,SAAC7F,GAAD,MAAmB,CAACzN,KAAM,qBAAsByN,SAE7DlH,IAlBQ,WAAqF,IAApFjD,EAAmF,uDAAzDzD,EAAcoG,EAA2C,uCACvG,OAAQA,EAAOjG,MACX,IAAK,qBACD,OAAO,2BACAsD,GADP,IAEI6L,SAAS,GAAD,mBAAM7L,EAAM6L,UAAZ,CAAsB,CAAChP,GAAIiD,eAAMrB,QAASkE,EAAOwH,UAIjE,QACI,OAAOnK,K,8ICrCNyJ,EAAetD,IAAMC,MAAK,SAACvH,GAIpC,IAAMqM,EAASC,YAAU,CACrBO,cAAe,CACXvB,KAAM,IAEViB,SAAU,SAAAC,GACN,IAAMC,EAA0B,GAOhC,OANID,EAAOlB,OACPmB,EAAOnB,KAAO,mBAEfkB,EAAOlB,KAAKsB,QAAUgE,MACrBnE,EAAOnB,KAAP,mCAA0CsF,IAA1C,cAEGnE,GAGXM,SAAU,SAACP,EAAD,GAA0B,IAAhB4E,EAAe,EAAfA,UACI,KAAhB5E,EAAOlB,MACPtL,EAAM8K,SAAS0B,EAAOlB,MAC1B8F,OAMR,OACI,uBAAOrE,SAAUV,EAAOsB,aAAxB,UACI,sBAAK7O,UAAWC,IAAOsS,YAAvB,UACI,kDAAUvS,UAAWC,IAAOuS,SAAUC,UAAW,IACxCC,YAAaxR,EAAM6K,iBACfwB,EAAO8B,cAAc,SAFlC,IAGSsD,WAAW,EAAMhI,OAAQ,kBAAM4C,EAAOI,OAAOnB,KAAO,OAE7D,8BACI,cAAC,IAAD,CAAQzN,KAAM,SAAd,0BAGPwO,EAAOI,OAAOnB,MAAS,sBAAK3K,MAAO,CAACG,MAAO,OAApB,cAA8BuL,EAAOI,OAAOnB,gB","file":"static/js/main.027dd86a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBox\":\"boxStyle_mainBox__24wr7\"};","\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\"\r\n\r\n}\r\n\r\nexport type AuthActionsType = ReturnType<typeof setAppErrorAC>\r\n\r\ntype InitialStateType = {\r\n    error: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    error: \"\"\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: string) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\n\r\n\r\n\r\n\r\n\r\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersType} from \"../Redux/UsersReducer\";\r\nimport {ProfileDataType} from \"../Redux/ProfileReducer\";\r\nimport {LoginParamsType} from \"../Redux/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\ntype RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<string>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    }\r\n\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI, AuthDataType} from \"../components/api\";\r\nimport {setAppErrorAC} from \"./AppReducer\";\r\n\r\n\r\nexport const myUserID = 21748;\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    AUTH_SET_IS_LOGGED_IN = \"SET-IS-LOGGED-IN\",\r\n    AUTH_SET_IS_INITIALIZED = \"SET-IS-INITIALIZED\",\r\n    AUTH_SET_PROFILE_DATA = \"SET-PROFILE-DATA\",\r\n}\r\n\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: myUserID,\r\n        email: \"\",\r\n        login: \"\"\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case ACTIONS_TYPE.AUTH_SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.AUTH_SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.AUTH_SET_PROFILE_DATA:\r\n            return {...state, data: action.data}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_IS_LOGGED_IN, isLoggedIn} as const);\r\n\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_IS_INITIALIZED, isInitialized} as const);\r\n\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.AUTH_SET_PROFILE_DATA, data: profileData} as const);\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n\r\n    let res = await authAPI.me();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: Dispatch) => {\r\n\r\n    let res = await authAPI.login(data);\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n        } else {\r\n            dispatch(setAppErrorAC(res.data.messages[0]))\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: Dispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../Redux/AuthReducer\";\r\nimport {MyProfilePhoto} from \"../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\n\r\n\r\nexport function TopContainer() {\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n\r\n\r\n    const logOutHandler = () =>{\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <img src={\"https://templates.envytheme.com/zust/default/assets/images/logo.png\"} alt=\"logo\"/>\r\n                <div className={styles.loginBlock}>\r\n                    {isLoggedIn && <MyProfilePhoto/>}\r\n                    {isLoggedIn && <Button className={styles.login} onClick={logOutHandler}>\r\n                        Log out\r\n                    </Button>}\r\n                </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {TopContainer} from \"./TopContainer\";\r\n\r\n\r\n\r\nexport function Header(){\r\n    return(\r\n            <header className={styles.headerWrapper}>\r\n                <TopContainer/>\r\n            </header>\r\n\r\n    )\r\n}","import {OnlineFriendType} from \"../OldComponents/OldStore\";\r\nimport React from \"react\";\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\n\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React from 'react';\r\nimport style from \"./Navbar.module.scss\"\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {SideBarType} from \"../OldComponents/OldStore\";\r\nimport {ChatBlock} from \"./ChatBlock\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\n\r\ntype NavBarPropsType = {\r\n    SideBar: SideBarType,\r\n}\r\n\r\nexport function SideBar(props: NavBarPropsType) {\r\n\r\n    let onlineFriends = props.SideBar.onlineFriends.map((f) =>\r\n        <NavLink key={f.id} to={\"/friends\" + f.id}>\r\n            <ChatBlock\r\n                       id={f.id}\r\n                       avatar={f.avatar}/>\r\n        </NavLink>)\r\n    return (\r\n        <aside className={style.sideWrapper}>\r\n            <div className={style.NavItem}>\r\n                <NavLink  to={`/profile/${myUserID}`} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/dialogs\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/events\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Events</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/photos\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Photos</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/users\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Find Friends</NavLink>\r\n            </div>\r\n            <div className={style.NavItem}>\r\n                <NavLink to={\"/settings\"} style={({ isActive }) => ({ color: isActive ? \"goldenrod\" : 'black' })}>Settings</NavLink>\r\n            </div>\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriends}\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n","import {v1} from \"uuid\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../components/api\";\r\nimport {ActionsTypes} from \"./ActionsTypes\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    ADD_POST = \"ADD-POST\",\r\n    SET_MY_PROFILE_PHOTO = \"PROFILE/SET-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n    DELETE_POST = \"PROFILE/DELETE-POST\"\r\n}\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n    postsData: Array<PostType>\r\n    profile: ProfileDataType\r\n    photo: string | undefined\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type userProfileContactType = {\r\n    facebook: string | undefined\r\n    website: string | null\r\n    vk: string | undefined\r\n    twitter: string | undefined\r\n    instagram: string | undefined\r\n    youtube: string | undefined\r\n    github: string | null | undefined\r\n    mainLink: string | null\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string | undefined\r\n    large: string | undefined\r\n}\r\nexport type ProfileDataType = {\r\n    aboutMe: string | null\r\n    contacts: userProfileContactType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    photos: userProfilePhotosType\r\n\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (data: string) => ({type: ACTIONS_TYPE.ADD_POST, data} as const)\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\r\n    profile\r\n} as const);\r\nexport const setMyProfilePhotoAC = (photo: string | undefined) => ({\r\n    type: ACTIONS_TYPE.SET_MY_PROFILE_PHOTO,\r\n    photo\r\n} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\nexport const deletePostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_POST, id} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n\r\n    postsData: [\r\n        {id: v1(), message: \"Do you have a job for me? What if I find it?\", likesCount: 0},\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n        {id: v1(), message: \"What is the good weather today,isn't it?\", likesCount: 0},\r\n    ],\r\n    status: \"\",\r\n    photo: \"\",\r\n    profile: {\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, {id: v1(), message: action.data, likesCount: 0}]\r\n            };\r\n        }\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case ACTIONS_TYPE.SET_MY_PROFILE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        case ACTIONS_TYPE.SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case ACTIONS_TYPE.DELETE_POST:\r\n            return {...state, postsData: state.postsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null) => async (dispatch: Dispatch) => {\r\n\r\n    let res = await profileAPI.getProfile(userId);\r\n    try {\r\n        dispatch(setUserProfileAC(res.data));\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: Dispatch) => {\r\n\r\n    let res = await profileAPI.getStatus(userId);\r\n    try {\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: Dispatch) => {\r\n\r\n    let res = await profileAPI.updateStatus(status)\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n        }\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n","import {SideBarType} from \"../components/OldComponents/OldStore\";\r\nimport {v1} from \"uuid\";\r\n\r\nlet initialState: SideBarType = {\r\n    onlineFriends: [\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-3.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-6.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-2.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-7.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-10.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-9.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-5.jpg\"},\r\n        {id: v1(), avatar: \"https://themified.com/friend-finder/images/users/user-8.jpg\"},\r\n    ],\r\n}\r\nconst sidebarReducer = (state: SideBarType = initialState) => {\r\n    return state\r\n}\r\nexport default sidebarReducer;","import {authAPI, userAPI} from \"../components/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActionsTypes} from \"./ActionsTypes\";\r\n\r\n//types\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n\r\n}\r\nexport type UsersType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nlet initialState: UsersType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state = initialState, action: ActionsTypes): UsersType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case \"UNFOLLOW\":\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case \"SET-USERS\":\r\n            return {...state, items: action.users}\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-USERS-COUNT\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"IS-FOLLOWING-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccess = (userID: string) => ({type: \"FOLLOW\", userID: userID,} as const)\r\nexport const unFollowSuccess = (userID: string) => ({type: \"UNFOLLOW\", userID: userID,} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: \"SET-USERS\", users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: \"SET-CURRENT-PAGE\",\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: \"SET-TOTAL-USERS-COUNT\",\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching: isFetching,} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: \"IS-FOLLOWING-PROGRESS\",\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(response.data.items));\r\n        dispatch(setUsersTotalCountAC(response.data.totalCount));\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let response = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(response.data.items));\r\n        dispatch(setUsersTotalCountAC(response.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccess(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccess(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(error.message)\r\n    }\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\nimport dialogsReducer from \"./DialogsReducer\";\r\nimport sidebarReducer from \"./NavBarReducer\";\r\nimport {userReducer} from \"./UsersReducer\";\r\nimport {authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./AppReducer\";\r\nimport {profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    SideBar: sidebarReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../Redux/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.preloaderContainer} >\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>)\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../Redux/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC(currentPage, pageSize));\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {statusSelector} from \"../Common/Selectors/Selectors\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if ( userId !== myUserID ) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID && !status){\r\n\r\n        return (\r\n        <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n        </div>\r\n        )\r\n    }\r\n    if(editMode && userId === myUserID){\r\n        return (\r\n        <div className={styles.editableDiv}\r\n             data-testid=\"editableMyDiv\"\r\n            onClick={activateEditMode}>\r\n            {status}\r\n        </div>)\r\n    }\r\n\r\n    else return <input className={styles.input}\r\n                       onChange={changeTitle}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={deactivateEditMode}\r\n                       type=\"text\"\r\n                       data-testid=\"input\"\r\n                       value={localStatus}/>\r\n};\r\n\r\n","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType,\r\n} from \"../../../../Redux/ProfileReducer\";\r\nimport defaultUserPhoto from \"./../../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../../ProfileStatus\";\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType\r\n\r\n}\r\n\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType)=> {\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={props.profile?.photos.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            </div>\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>{props.profile.fullName}</div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                <div className={styles.lookingForAJobDescription}>\r\n                    Looking for a job status: { props.profile.lookingForAJobDescription}\r\n                </div>\r\n                <div className={styles.contacts}>\r\n                    <span>contacts: </span>\r\n                    <div>facebook: {props.profile.contacts.facebook}</div>\r\n                    <div>instagram: {props.profile.contacts.instagram}</div>\r\n                    <div>YouTube: {props.profile.contacts.youtube}</div>\r\n                    <div>Vk: {props.profile.contacts.vk}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\n\r\ntype MyPostsPropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likesCount, setLikesCount] = useState<number>();\r\n    const maxLikesCount = 1000;\r\n    const generateLike = () => {\r\n        setLikesCount(Math.round(Math.random() * maxLikesCount));\r\n    };\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.userAndLoginBlock}>\r\n                <MyProfilePhoto/>\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div>\r\n                <span>Like: </span>{props.likeCount !== 0 ? props.likeCount : likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport { TextAreaForm } from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return <div className={styles.postBlock}>\r\n        <h3>My posts</h3>\r\n        <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n        <div className={styles.posts}>\r\n            {postsElements}\r\n        </div>\r\n    </div>\r\n\r\n})\r\n\r\n","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport {addPostActionAC} from \"../../Redux/ProfileReducer\";\r\nimport commonStyle from \"../Common/boxStyle.module.scss\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {myUserID} from \"../../Redux/AuthReducer\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {postsDataSelector, profileSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\ntype ProfilePropsType = {\r\n    userID: number| null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(postsDataSelector);\r\n    const profile = useAppSelector(profileSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const addMessage = (text: string) =>{\r\n        return  dispatch(addPostActionAC(text));\r\n    }\r\n    return (\r\n        <div className={`${styles.wrapper} ${commonStyle.mainBox}`}>\r\n            <ProfileInfo profile={profile}/>\r\n            {props.userID === myUserID && <MyPosts placeholderText={placeholderText.profileAreaText}\r\n                                                   callBack={addMessage}\r\n                                                   postsData={postsData}/>}\r\n        </div>)\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../Redux/ProfileReducer\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector, userIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() =>{\r\n\r\n    const userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const myId = useAppSelector(userIDSelector);\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId !== myId){\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }else{\r\n            dispatch(getProfileTC(myId));\r\n            dispatch(getUserStatusTC(myId));\r\n        }\r\n\r\n    }, [userId, dispatch, myId]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {loginTC} from \"../../Redux/AuthReducer\";\r\nimport {AppRootStateType} from \"../../Redux/reduxStore\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {setAppErrorAC} from \"../../Redux/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useSelector<AppRootStateType, string>(state => state.App.error);\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n    return (\r\n\r\n        <Grid container justifyContent={\"center\"}>\r\n            <Grid item justifyContent={'center'}>\r\n                <h1>Login</h1>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup>\r\n                            <FormControl  sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {/*<TextField label=\"Email\"\r\n                                       placeholder={\"email\"}\r\n                                       type=\"email\"\r\n                                       margin=\"normal\"\r\n                                       {...formik.getFieldProps(\"email\")} onFocus={removeError}/>*/}\r\n\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '35ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n                            {/*<TextField type={\"password\"}\r\n                                       label=\"Password\"\r\n                                       margin=\"normal\"\r\n                                       placeholder={\"Password\"}\r\n                                       {...formik.getFieldProps(\"password\")}\r\n                                       onFocus={removeError}/>\r\n\r\n                            {formik.touched.password && formik.errors.password ?\r\n                                <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}*/}\r\n\r\n\r\n                            <FormControlLabel\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n\r\n                            {serverError && <div style={{color: \"red\"}}>{serverError}</div>}\r\n\r\n\r\n                            <Button variant={'contained'}\r\n                                    type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<WCP>(Component: React.ComponentType<WCP>) {\r\n\r\n    return (props:WCP):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {SideBar} from \"./components/Navbar/SideBar\";\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {store, useAppSelector} from \"./Redux/reduxStore\";\r\nimport UsersContainerFC from './components/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport {EventsContainer} from \"./components/Events/EventsContainer\";\r\nimport PhotosContainer from \"./components/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./Redux/AuthReducer\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector, isLoggedInSelector, userIDSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\n\r\n\r\nconst DialogContainerFC = React.lazy(()=> import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE:\"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS:\"/events\",\r\n    PHOTOS:\"/photos\"\r\n}\r\n\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const state = store.getState();\r\n    const dispatch = useDispatch();\r\n    const userID = useAppSelector(userIDSelector)\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector);\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"App\"}>\r\n            <Header/>\r\n            <main className={\"mainContent\"}>\r\n            {isLoggedIn && <SideBar SideBar={state.SideBar}/>}\r\n                 <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}/${userID}`}/>}/>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={`${PATH.PROFILE}/:userId`} element={withSuspense(ProfileContainerFC)({})}/>\r\n                    <Route path={PATH.DIALOGS} element={withSuspense(DialogContainerFC)({})}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>} />\r\n                    <Route path={PATH.ERROR404} element={<div>Error 404</div>} />\r\n                </Routes>\r\n                \r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./Redux/reduxStore\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import {AppRootStateType} from \"../../../Redux/reduxStore\";\r\nimport {UserType} from \"../../../Redux/UsersReducer\";\r\nimport {PostType, ProfileDataType} from \"../../../Redux/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const userIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const postsDataSelector = (state:AppRootStateType):Array<PostType> =>{\r\n    return state.ProfilePage.postsData;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideWrapper\":\"Navbar_sideWrapper__1dV1_\",\"NavItem\":\"Navbar_NavItem__3u4wb\",\"active\":\"Navbar_active__2IssC\",\"ChatBlock\":\"Navbar_ChatBlock__1-WE4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__2NhZI\",\"usersBlock\":\"users_usersBlock__30vL-\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__3flk2\",\"avatar\":\"users_avatar__3IP3J\",\"nameAndStatus\":\"users_nameAndStatus__nYsqe\",\"status\":\"users_status__2gbbh\",\"name\":\"users_name__3sX1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__2zQ9G\",\"statusBlock\":\"ProfileInfo_statusBlock__A6KlW\",\"profileName\":\"ProfileInfo_profileName__aXVcE\",\"profileStatus\":\"ProfileInfo_profileStatus__3sbu8\",\"contacts\":\"ProfileInfo_contacts__3rDuc\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__WC_wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__5ewrq\",\"Title\":\"ChatBlock_Title__YfUmN\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__dibQ_\",\"OnlineDot\":\"ChatBlock_OnlineDot__2krZz\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__14FnN\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"login\":\"Header_login__2_qsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__3dKt0\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","export const placeholderText = {\r\n    profileAreaText: \"What's new with you?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/reduxStore\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {userIDSelector} from \"../Selectors/Selectors\";\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate()\r\n    const myPhoto = useSelector<AppRootStateType, string | undefined>(state => state.ProfilePage.photo);\r\n    const myLoginName = useSelector<AppRootStateType, string | null>(state => state.Auth.data.login);\r\n    const userID = useSelector(userIDSelector)\r\n    const navigateToMyMage = ()=>{\r\n        navigate(`/profile/${userID}`)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div className={styles.userName} onClick={navigateToMyMage}>\r\n                {myLoginName}\r\n            </div>\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__13SXq\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"userAndLoginBlock\":\"Post_userAndLoginBlock__2x_uT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"posts\":\"MyPosts_posts__2zln9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\"};","import {v1} from \"uuid\";\r\nimport {ActionsTypes} from \"./ActionsTypes\";\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Boris Jonson\",\r\n            avatar: \"https://themified.com/friend-finder/images/users/user-4.jpg\",\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nconst dialogsReducer = (state: DialogsStateType = initialState, action: ActionsTypes): DialogsStateType => {\r\n    switch (action.type) {\r\n        case \"ADD-DIALOG-MESSAGE\": {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: \"ADD-DIALOG-MESSAGE\", text} as const)\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: MyPostsPropsType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(!values.text){\r\n                errors.text = \"Enter a message\"\r\n            }\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <textarea className={styles.textArea} maxLength={1000}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")}\r\n                         autoFocus={true} onBlur={() => formik.errors.text = \"\"}\r\n            />\r\n                <div>\r\n                    <Button type={\"submit\"}>Publish</Button>\r\n                </div>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})"],"sourceRoot":""}