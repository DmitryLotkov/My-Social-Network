{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogContainerFC.tsx"],"names":["module","exports","DialogItem","props","dialogItem","DialogPage","dialogs","map","m","className","styles","userAvatarAndName","src","avatar","alt","name","jobDescription","message","id","Message","React","memo","messagesWrapper","MyProfilePhoto","Dialogs","dispatch","useDispatch","messagesElements","messages","addMessage","useCallback","text","addMessageAC","dialogsWrapper","TextAreaForm","callBack","placeholderText","dialogsAreaText","DialogContainerFC","dialogPage","useSelector","state"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,WAAa,4BAA4B,kBAAoB,mCAAmC,eAAiB,gCAAgC,gBAAkB,mC,6FCQ/N,SAASC,EAAWC,GAEvB,IAAIC,EAAaD,EAAME,WAAWC,QAAQC,KAAI,SAAAC,GAAC,OAC3C,sBAAKC,UAAWC,IAAON,WAAvB,UACI,sBAAKK,UAAWC,IAAOC,kBAAvB,UACQ,qBAAKC,IAAKJ,EAAEK,OACRC,IAAK,iBACb,iCAASN,EAAEO,OACX,qBAAKN,UAAWC,IAAOM,eAAvB,gCAEJ,8BAAMR,EAAES,YAP4BT,EAAEU,OAU9C,OACI,mCACKd,I,aCdCe,EAAUC,IAAMC,MAAK,SAAClB,GAEhC,OACI,sBAAKM,UAAWC,IAAOY,gBAAvB,UACI,mBAAGb,UAAWC,IAAON,WAArB,SAAkCD,EAAMc,UACxC,cAACM,EAAA,EAAD,U,0BCFCC,EAAUJ,IAAMC,MAAK,SAAClB,GAC/B,IAAMsB,EAAWC,cACXC,EAAmBxB,EAAME,WAAWuB,SAASrB,KAAI,SAACC,GAAD,OAAO,cAACW,EAAD,CACSF,QAAST,EAAES,QACXC,GAAIV,EAAEU,IAFDV,EAAEU,OAGxEW,EAAaC,uBAAY,SAACC,GAC5BN,EAASO,YAAaD,MACvB,CAACN,IAEJ,OACI,sBAAKhB,UAAWC,IAAOuB,eAAvB,UACI,cAAC/B,EAAD,CAAYG,WAAYF,EAAME,aAC7BsB,EACD,cAACO,EAAA,EAAD,CAAcC,SAAUN,EACVO,gBAAiBA,IAAgBC,wBCJ5CC,UAde,WAE1B,IAAMC,EAAaC,aAAgD,SAAAC,GAAK,OAAIA,EAAMpC,cAGlF,OAEI,aADI,CACHmB,EAAD,CAASnB,WAAYkC","file":"static/js/3.55e9f33f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3F0bp\",\"dialogItem\":\"Dialogs_dialogItem__2sb9K\",\"userAvatarAndName\":\"Dialogs_userAvatarAndName__3RqOE\",\"jobDescription\":\"Dialogs_jobDescription__1UECd\",\"messagesWrapper\":\"Dialogs_messagesWrapper__3fn-w\"};","import styles from \"../Dialogs.module.scss\";\r\nimport React from \"react\";\r\nimport {DialogsStateType} from \"../../../store/DialogsReducer\";\r\n\r\n\r\ntype DialogItemPropsType = {\r\n    DialogPage: DialogsStateType\r\n}\r\n\r\nexport function DialogItem(props: DialogItemPropsType) {\r\n\r\n    let dialogItem = props.DialogPage.dialogs.map(m =>\r\n        <div className={styles.dialogItem} key={m.id}>\r\n            <div className={styles.userAvatarAndName}>\r\n                    <img src={m.avatar}\r\n                        alt={\"friendAvatar\"}/>\r\n                <strong>{m.name}</strong>\r\n                <div className={styles.jobDescription}>Product manager</div>\r\n            </div>\r\n            <div>{m.message}</div>\r\n        </div>\r\n    )\r\n    return (\r\n        <>\r\n            {dialogItem}\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.scss\"\r\nimport {MyProfilePhoto} from \"../../Common/MyProfilePhoto/MyProfilePhoto\";\r\n\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    message: string\r\n}\r\n\r\nexport  const Message = React.memo((props: MessageType) =>{\r\n\r\n    return (\r\n        <div className={styles.messagesWrapper}>\r\n            <p className={styles.dialogItem}>{props.message}</p>\r\n            <MyProfilePhoto/>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n","import React, {useCallback} from \"react\";\r\nimport styles from \"./Dialogs.module.scss\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {addMessageAC, DialogsStateType} from \"../../store/DialogsReducer\";\r\nimport {TextAreaForm} from \"../Common/TextAreaForm/TextAreaForm\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype DialogsPropsType = {\r\n    DialogPage: DialogsStateType\r\n}\r\n\r\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\r\n    const dispatch = useDispatch();\r\n    const messagesElements = props.DialogPage.messages.map((m) => <Message key={m.id}\r\n                                                                           message={m.message}\r\n                                                                           id={m.id}/>)\r\n    const addMessage = useCallback((text: string) => {\r\n        dispatch(addMessageAC(text));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.dialogsWrapper}>\r\n            <DialogItem DialogPage={props.DialogPage}/>\r\n            {messagesElements}\r\n            <TextAreaForm callBack={addMessage}\r\n                          placeholderText={placeholderText.dialogsAreaText}/>\r\n        </div>\r\n\r\n\r\n    )\r\n})\r\n","import React, {FC} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\n\r\nimport {DialogsStateType} from \"../../store/DialogsReducer\";\r\n\r\n\r\n\r\nconst DialogContainerFC: FC = () => {\r\n\r\n    const dialogPage = useSelector<AppRootStateType, DialogsStateType>(state => state.DialogPage);\r\n\r\n    // const Redirect = WithAuthRedirect(Dialogs);\r\n    return (\r\n            /*<Redirect DialogPage={dialogPage}/>*/\r\n        <Dialogs DialogPage={dialogPage}/>\r\n\r\n    );\r\n};\r\n/*compose<React.ComponentType>(\r\n    WithAuthRedirect\r\n)(DialogContainerFC);*/\r\nexport default DialogContainerFC"],"sourceRoot":""}