{"version":3,"sources":["Images/Users/user-4.jpg","components/Profile/MyPosts.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","components/Common/Preloader/Preloader.module.scss","Pages/Footer/Footer.module.scss","store/store.ts","store/DialogsReducer.tsx","Pages/EditProfile/EditProfile.module.scss","store/AppReducer.tsx","Pages/Chat/Messages.module.scss","components/Header/Header.module.scss","components/Common/Selectors/Selectors.ts","utils/error.utils.ts","Pages/Error404/Error404.module.scss","components/Profile/ContactBlock/ContactBlock.module.scss","Pages/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","Pages/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","constants.ts","components/Profile/ContactBlock/ContactBlock.tsx","components/Profile/OnlineFriends/ChatBlock.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/AnyUserPosts/AnyUserPost.tsx","components/Profile/AnyUserPosts/AnyUserPosts.tsx","Pages/Chat/Message.tsx","Pages/Chat/Messages.tsx","Pages/Chat/Chat.tsx","Pages/Chat/ChatPage.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","Pages/Photos/Photos.tsx","Pages/Photos/PhotosContainer.tsx","components/HOC/withSuspense.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","Images/Logo.svg","components/Header/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoutes.tsx","Images/astronaut.svg","Images/earth.svg","Images/moon.svg","Images/rocket.svg","Images/404Text.svg","Pages/Error404/Error404.tsx","Pages/Login/Login.tsx","Pages/Footer/Footer.tsx","Pages/EditProfile/EditProfile.tsx","Pages/Events/Events.tsx","Pages/Events/EventsContainer.tsx","App.tsx","index.tsx","api/api.tsx","store/ProfileReducer.tsx","store/AuthReducer.tsx","components/Profile/AnyUserPosts/AnyUserPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","Pages/Chat/Message.module.scss","api/chatAPI.ts","store/chatReducer.tsx","Pages/Login/login.module.scss","Images/defaultUserImage.jpg","store/UserPostsReducer.tsx","Images/Users/user-1.jpg","Images/Users/user-2.jpg","Images/Users/user-3.jpg","Images/Users/user-5.jpg","Images/Users/user-6.jpg","Images/Users/user-7.jpg","Images/Users/user-8.jpg","Images/Users/user-9.jpg","Images/Post photo.png","Pages/Users/users.module.scss","store/UsersReducer.tsx","components/Profile/Profile.module.scss","components/Profile/OnlineFriends/ChatBlock.module.scss","Pages/Chat/ChatPage.module.scss","components/Common/TextAreaForm/textAreaData.ts"],"names":["module","exports","MyProfilePhoto","React","memo","navigate","useNavigate","myPhoto","useAppSelector","state","Auth","myProfile","photos","small","myLoginName","fullName","userID","useSelector","myIDSelector","onClick","className","styles","myProfilePhotoWrapper","mySmallPhoto","src","defaultUserPhoto","alt","jobDescription","TextAreaForm","props","formik","useFormik","initialValues","text","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","formWrapper","multiline","textArea","placeholder","placeholderText","getFieldProps","onBlur","onKeyUp","e","webSocketStatusDisabled","key","ctrlKey","iconButton","type","disabled","style","color","useAppDispatch","useDispatch","rootReducer","combineReducers","ProfilePage","profileReducer","DialogPage","dialogsReducer","HardcodedUsers","hardcodedUsersReducer","UsersPage","userReducer","authReducer","App","appReducer","ChatPage","chatReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ACTIONS_TYPE","initialState","dialogs","id","v1","name","avatar","user4","message","messages","action","ADD_DIALOG_MESSAGE","addMessageAC","error","status","APP_SET_ERROR","APP_SET_STATUS","setAppErrorAC","setAppStatusAC","statusSelector","data","profileSelector","profile","isLoggedInSelector","isLoggedIn","isInitializedSelector","isInitialized","isFetchingSelector","isFetching","usersSelector","items","pageSizeSelector","pageSize","currentPageSelector","currentPage","totalUserCountSelector","totalCount","followingArrSelector","following","handleNetworkError","Error","dispatch","response","handleServerAppError","handleServerNetworkError","Users","users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","userPhoto","usersWrapper","Pagination","onChange","event","page","size","variant","shape","count","data-testid","map","user","usersBlock","avatarAndFollowButton","followed","Button","some","nameAndStatus","Preloader","main","progress","CircularProgress","UserContainerFC","followingArr","useEffect","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","useState","localStatus","setLocalStatus","editMode","setEditMode","userId","myID","activateEditMode","deactivateEditMode","updateUserStatusTC","editableDiv","input","currentTarget","value","onKeyPress","maxPictureSize","Yup","min","max","required","aboutMe","lookingForAJobDescription","contacts","facebook","matches","website","nullable","vk","twitter","instagram","youtube","github","mainLink","url","ContactBlock","contactsBlock","contactsBlockItem","icon","faVk","href","faInstagram","faYoutube","faGithub","faTwitter","faFacebook","faFirefoxBrowser","faGoogle","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","ProfileInfo","large","Number","useParams","myId","photoRef","useRef","onlineFriends","open","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","openPopover","setOpenPopover","popoverAnchor","show","Object","every","item","handleCloseModal","onlineFriendsArr","f","profileInfoWrapper","profilePhoto","avatarWrapper","isNaN","menu","statusBlock","profileName","popover","ref","fontSize","lookingForAJob","profileStatus","profileDescription","Title","Modal","onClose","Box","sx","display","flexDirection","justifyContent","alignItems","IconButton","right","Close","marginBottom","accept","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","textTransform","current","click","uploadAvatarTC","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Post","likeCount","updated","likeObj","setLikeObj","addLikeHandler","likeGenerator","round","random","generateLike","itemWrapper","avatarAndClose","height","deleteMyPostAC","likeBlock","MyPosts","postsElements","postsData","likesCount","reverse","postBlock","myPostForm","newPostHeader","posts","AnyUserPost","postText","postPhoto","anyUserPost","userWrapper","userPhotoAndDescriptionBlock","userDescription","userPosition","deleteUsersPostAC","AnyUserPosts","anyPostsElements","anyUserPostsData","post","Message","devChatMessageBlock","myImgAndMessage","someUserImgAndMessage","myNameAndMessage","someUserNameAndMessage","userName","marginLeft","photo","defaultUserImage","Messages","isAutoScroll","setIsAutoScroll","messagesAnchorRef","scrollIntoView","messagesBlock","onScroll","element","abs","scrollHeight","scrollTop","clientHeight","m","Chat","startMessagesListeningTC","stopMessagesListeningTC","sendMessageTC","filter","startMessagesCount","isChatOpen","setIsChatOpen","startMessagesLength","setStartMessagesLength","newMessagesCount","setStartMessagesCountAC","chatPageBlockOpen","chatPageBlockCollapsed","chatTitle","messageFlag","noMessageFlag","minimizeIcon","ProfileFC","myPostsData","profileWrapper","allPostsBlock","profileAreaText","addPostActionAC","ProfileContainerFC","myUserID","getProfileTC","getUserStatusTC","to","PATH","LOGIN","Photos","PhotosContainer","content","withSuspense","Component","Suspense","fallback","ErrorSnackBar","handleClose","reason","Snackbar","autoHideDuration","Alert","severity","AlertTitle","Navigation","logOutHandler","logOutTC","headerContent","logo","sideWrapper","NavItem","PROFILE","isActive","activeNavLink","unActiveNavLink","hideForMobile","DIALOGS","USERS","LastNavItem","EDIT_PROFILE","loginBlock","loginButton","logOutIcon","Header","headerWrapper","PrivateRoutes","location","useLocation","encodeURIComponent","pathname","replace","Error404","ErrorWrapper","stars","centralBody","image404","errorText","HOME","btnGoHome","objects","objectRocket","rocket","earthMoon","objectEarth","earth","objectMoon","moon","boxAstronaut","objectAstronaut","astronaut","glowingStars","star","Login","serverError","captchaUrl","isPassType","setIsPassType","email","test","password","rememberMe","captcha","loginTC","listener","code","preventDefault","document","addEventListener","removeEventListener","Grid","loginWrapper","container","login","h2","FormControl","textFields","FormLabel","rel","FormGroup","mTop","InputLabel","htmlFor","Input","onFocus","touched","emailError","endAdornment","InputAdornment","aria-label","onMouseDown","VisibilityOff","Visibility","passError","FormControlLabel","checkbox","label","control","Checkbox","checked","button","marginTop","Footer","year","Date","getFullYear","LastContactContainer","error404Display","EditProfile","s","editProfileWrapper","enableReinitialize","updateProfileTC","formRow","contactText","TextField","inputProps","textField","handleChange","handleBlur","helperText","formRowWithoutMargin","labelPlacement","Events","EventsContainer","SuspendedDialogContainer","lazy","ERROR404","ANY_ROUTE","EVENTS","PHOTOS","appStatus","initializeAppTC","path","UsersContainerFC","ReactDOM","render","getElementById","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","get","profileAPI","getProfile","getStatus","updateStatus","put","uploadAvatar","photoFile","formData","FormData","append","updateProfile","authAPI","me","delete","logout","getFollowers","securityAPI","setStatusAC","SET_STATUS","SET_SOME_USER_PROFILE","SAVE_MY_PROFILE_PHOTO","isMyProfile","a","res","setMyProfileAC","console","log","resultCode","getState","undefined","SET_IS_LOGGED_IN","SET_IS_INITIALIZED","SET_AUTH_DATA","GET_CAPTCHA","SET_AUTH_PROFILE_DATA","setIsLoggedInAC","getCaptchaAC","profileData","getCaptchaTC","subscribers","isShowCloseAlert","ws","alertCounter","closeHandler","alert","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","newMessages","JSON","parse","forEach","openHandler","errorHandler","cleanUp","close","WebSocket","chatAPI","eventName","callback","push","send","SET_MESSAGES","CHANGE_STATUS","SAVE_MESSAGES_COUNT","_newMessageHandler","newMessageHandlerCreator","setMessagesAC","_statusChangedHandler","statusChangedHandlerCreator","changeStatusAC","user1","user2","user3","user5","user6","user7","user8","user9","ADD_POST","DELETE_MY_POST","DELETE_USERS_POST","UserPostsReducer","FOLLOW","u","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROGRESS","followingIsProgress","followSuccessAC","unFollowSuccessAC","setUsersAC","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","dialogsAreaText"],"mappings":"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","file":"static/js/main.955a1ee7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user-4.f2ebe3cd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"myPostForm\":\"MyPosts_myPostForm__2JNfF\",\"newPostHeader\":\"MyPosts_newPostHeader__3Y4vh\",\"posts\":\"MyPosts_posts__2zln9\"};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {myIDSelector} from \"../Selectors/Selectors\";\r\n\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate();\r\n    const myPhoto = useAppSelector<string | undefined>(state => state.Auth.myProfile?.photos?.small);\r\n    const myLoginName = useAppSelector<string | undefined>(state => state.Auth.myProfile?.fullName);\r\n    const userID = useSelector(myIDSelector);\r\n    const navigateToMyMage = () => navigate(`/profile/${userID}`);\r\n\r\n    return (\r\n        <div onClick={navigateToMyMage} className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div >\r\n                <strong>{myLoginName}</strong>\r\n                <div className={styles.jobDescription}>Frontend developer</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport {TextField} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\ntype TexAreaPostType = MyPostsPropsType & {\r\n    webSocketStatusDisabled?: boolean\r\n}\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: TexAreaPostType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n    const onKeyUpHandler = (e:React.KeyboardEvent<HTMLDivElement>) =>{\r\n        if(!props?.webSocketStatusDisabled && e.key===\"Enter\" && e.ctrlKey){\r\n            formik.handleSubmit();\r\n        }\r\n    }\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <TextField  multiline={true} className={styles.textArea}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")} onBlur={() => formik.errors.text = \"\"} onKeyUp={onKeyUpHandler }\r\n            />\r\n                <>\r\n                    {\r\n                        formik.values.text &&\r\n                            <IconButton className={styles.iconButton} type={\"submit\"} disabled={props?.webSocketStatusDisabled }>\r\n                                 <SendIcon/>\r\n                            </IconButton>\r\n                    }\r\n                </>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"avatarAndClose\":\"Post_avatarAndClose__1IB8s\",\"likeBlock\":\"Post_likeBlock__1NyHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\",\"jobDescription\":\"MyProfilePhoto_jobDescription__2ne1o\",\"jobStatus\":\"MyProfilePhoto_jobStatus__1F5Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\",\"iconButton\":\"TextAreaForm_iconButton__odl8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__2BYGT\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LastContactContainer\":\"Footer_LastContactContainer__1Btt1\",\"error404Display\":\"Footer_error404Display__1sOxe\"};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\nimport hardcodedUsersReducer from \"./UserPostsReducer\";\r\nimport {UsersActionsType, userReducer} from \"./UsersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk'\r\nimport {appReducer, AppActionsType} from \"./AppReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogsReducer} from \"./DialogsReducer\";\r\nimport {ChatActionsType, chatReducer} from \"./chatReducer\";\r\n\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nexport type RootActionsType = AuthActionsType | AppActionsType | ProfileActionsType | UsersActionsType | ChatActionsType\r\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\r\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    HardcodedUsers: hardcodedUsersReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer,\r\n    ChatPage: chatReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n","import {v1} from \"uuid\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\"\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport enum ACTIONS_TYPE {\r\n    ADD_DIALOG_MESSAGE = \"DIALOGS/ADD-DIALOG-MESSAGE\",\r\n}\r\nexport type DialogActionsType = ReturnType<typeof addMessageAC>\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Kyle Fisher\",\r\n            avatar: user4,\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: DialogActionsType): DialogsStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text} as const)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editProfileWrapper\":\"EditProfile_editProfileWrapper__2TSxQ\",\"content\":\"EditProfile_content__2osnQ\",\"checkBox\":\"EditProfile_checkBox__1dnFE\",\"formRowWithoutMargin\":\"EditProfile_formRowWithoutMargin__1YvXJ\",\"formRow\":\"EditProfile_formRow__3qTL5\",\"contactText\":\"EditProfile_contactText__3d3vI\",\"textField\":\"EditProfile_textField__29DjQ\",\"checkBoxLabel\":\"EditProfile_checkBoxLabel__1I1n6\",\"button\":\"EditProfile_button__uIPtx\"};","\r\n\r\n//types\r\nexport type NullableType<T> = null | T\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\",\r\n    APP_SET_STATUS = \"APP/SET-STATUS\"\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    error: null as NullableType<string>,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTIONS_TYPE.APP_SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: NullableType<string>) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: ACTIONS_TYPE.APP_SET_STATUS, status} as const);\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesBlock\":\"Messages_messagesBlock__3wqUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"sideWrapper\":\"Header_sideWrapper__3LECh\",\"NavItem\":\"Header_NavItem__11nuk\",\"LastNavItem\":\"Header_LastNavItem__kdxWu\",\"hideForMobile\":\"Header_hideForMobile__3Vr6m\",\"unActiveNavLink\":\"Header_unActiveNavLink__3MLaf\",\"activeNavLink\":\"Header_activeNavLink__1evn6\",\"logo\":\"Header_logo__22GGz\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"logOutIcon\":\"Header_logOutIcon__3ZUfl\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"profilePhoto\":\"Header_profilePhoto__1MshK\",\"loginButton\":\"Header_loginButton__3g8tu\"};","import {AppRootStateType} from \"../../../store/store\";\r\nimport {UserType} from \"../../../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../../../store/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const myIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","import {AxiosError} from \"axios\";\r\nimport {AppThunkDispatch} from \"../store/store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../store/AppReducer\";\r\nimport {RespType} from \"../api/api\";\r\n\r\n\r\nexport const handleNetworkError = (Error: AxiosError<{ error: string }>, dispatch: AppThunkDispatch) =>{\r\n\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n    dispatch(setAppErrorAC(Error.response?.data.error || \"some Error\"));\r\n}\r\n\r\n\r\nexport const handleServerAppError = <D>(data: RespType<D>, dispatch: AppThunkDispatch, ) =>{\r\n    if (data.messages.length) {\r\n        dispatch(setAppErrorAC(data.messages[0]));\r\n    } else {\r\n        dispatch(setAppErrorAC(\"Some error occupied\"));\r\n    }\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\nexport const handleServerNetworkError = (error:Error, dispatch:AppThunkDispatch) =>{\r\n    dispatch(setAppErrorAC(error.message));\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinEarthOnHover\":\"Error404_spinEarthOnHover__34p_y\",\"ErrorWrapper\":\"Error404_ErrorWrapper__2H7Lj\",\"stars\":\"Error404_stars__1zyr2\",\"centralBody\":\"Error404_centralBody__3JkbI\",\"image404\":\"Error404_image404__365YE\",\"btnGoHome\":\"Error404_btnGoHome__um9If\",\"objects\":\"Error404_objects__1CJ2o\",\"objectRocket\":\"Error404_objectRocket__2tCQG\",\"rocketMovement\":\"Error404_rocketMovement__3VPGv\",\"earthMoon\":\"Error404_earthMoon__2J-qW\",\"objectEarth\":\"Error404_objectEarth__ZweLr\",\"spinEarth\":\"Error404_spinEarth__1jBgn\",\"objectMoon\":\"Error404_objectMoon__XPT3J\",\"boxAstronaut\":\"Error404_boxAstronaut__2z5tn\",\"moveAstronaut\":\"Error404_moveAstronaut__B8u3w\",\"objectAstronaut\":\"Error404_objectAstronaut__2Hx5k\",\"rotateAstronaut\":\"Error404_rotateAstronaut__P-qGp\",\"glowingStars\":\"Error404_glowingStars___aWfm\",\"star\":\"Error404_star__PcUWu\",\"glowStar\":\"Error404_glowStar__2oLI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"ContactBlock_contactsBlock__2a9ys\",\"contactsBlockItem\":\"ContactBlock_contactsBlockItem__2IIYV\",\"icon\":\"ContactBlock_icon__1AYiX\",\"lastContactBlockItem\":\"ContactBlock_lastContactBlockItem__1odxh\"};","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../store/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../store/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../components/Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../../components/Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC());\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {myIDSelector, statusSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n    const userId = useAppSelector(state => state.ProfilePage.profile.userId);\r\n    const myID = useAppSelector(myIDSelector);\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if (userId !== myID) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (editMode && userId === myID && !status) {\r\n\r\n        return (\r\n            <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if ((editMode && userId === myID)) {\r\n        return (\r\n            <div className={styles.editableDiv}\r\n                 data-testid=\"editableMyDiv\"\r\n                 onClick={activateEditMode}>\r\n                 {status}\r\n            </div>)\r\n    } else return <input className={styles.input}\r\n                         onChange={changeTitle}\r\n                         onKeyPress={onKeyPressHandler}\r\n                         onBlur={deactivateEditMode}\r\n                         type=\"text\"\r\n                         data-testid=\"input\"\r\n                         value={localStatus}/>\r\n};\r\n\r\n","import * as Yup from \"yup\";\r\n\r\nexport const freeUserId = 1079;\r\nexport const myUserID = 21748;\r\nexport const maxPictureSize = 10000000; //10MB\r\nconst webSiteRegular =  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n\r\nexport const DisplayingErrorMessagesSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n        .min(3, 'User name must be more than 3 symbols')\r\n        .max(50, 'User name must be less than 50 symbols')\r\n        .required('Required'),\r\n    aboutMe: Yup.string()\r\n        .min(3, 'User description text must be more than 3 symbols')\r\n        .max(300, 'User description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    lookingForAJobDescription: Yup.string()\r\n        .min(3, 'Job description text must be more than 3 symbols')\r\n        .max(300, 'Job description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    contacts: Yup.object().shape({\r\n        facebook: Yup.lazy(value => !value ? Yup.string() : Yup.string().matches(\r\n            /(?:https:\\/\\/)?(?:www\\.)?facebook\\.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[\\w]*\\/)*([\\w]*)/,\r\n            'Please enter correct url'\r\n        )),\r\n        website: Yup.string()\r\n            .min(0)\r\n            .nullable()\r\n            .matches(\r\n                webSiteRegular,\r\n                'Please enter correct url'\r\n            ),\r\n        vk: Yup.string()\r\n\r\n            .matches(\r\n                /(?:https:\\/\\/)?[-a-zA-Z0-9@:%_+.~#?&=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&=]*)?/gi,\r\n                'Please enter correct vk url'\r\n            ),\r\n        twitter: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /@([A-Za-z0-9_]{1,15})/,\r\n                'Please enter correct twitter url'\r\n            )\r\n            ,\r\n        instagram: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com|instagr.am|instagr.com)\\/(\\w+)/igm,\r\n                'Please enter correct instagram url'\r\n            )\r\n            ,\r\n        youtube: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /youtu(?:.*\\/v\\/|.*v\\|\\.be\\/)([A-Za-z0-9_-]{11})/,\r\n                'Please enter correct YouTube url'\r\n            )\r\n            ,\r\n        github: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:github.com)\\/(\\w+)/igm,\r\n                'Please enter correct github url'\r\n            )\r\n            ,\r\n        mainLink: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .url(),\r\n\r\n    }),\r\n\r\n\r\n});","import React from 'react';\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {profileSelector} from \"../../Common/Selectors/Selectors\";\r\nimport style from \"./ContactBlock.module.scss\"\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons/faGithub\";\r\nimport {faVk} from \"@fortawesome/free-brands-svg-icons/faVk\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons/faTwitter\";\r\nimport {faFacebook} from \"@fortawesome/free-brands-svg-icons/faFacebook\";\r\nimport {faFirefoxBrowser, faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faInstagram} from \"@fortawesome/free-brands-svg-icons/faInstagram\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons/faGoogle\";\r\n\r\nexport const ContactBlock = () => {\r\n    const profile = useAppSelector(profileSelector);\r\n\r\n    return (\r\n        <div className={style.contactsBlock}>\r\n            <div>\r\n                <strong>Contacts</strong>\r\n            </div>\r\n            {profile.contacts.vk &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faVk}/>\r\n                <a href={profile.contacts.vk}>\r\n                    Vk\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.instagram &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faInstagram}/>\r\n                <a href={profile.contacts.instagram}>\r\n                    Instagram\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.youtube &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faYoutube}/>\r\n                <a href={profile.contacts.youtube}>\r\n                    You tube\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.github &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGithub}/>\r\n                <a href={profile.contacts.github}>\r\n                    GitHub\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.twitter &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faTwitter}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    twitter\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.facebook &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFacebook}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    faceBook\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.website &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFirefoxBrowser}/>\r\n                <a href={profile.contacts.website}>\r\n                    Web site\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.mainLink &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGoogle}/>\r\n                <a href={profile.contacts.website}>\r\n                    Main link\r\n                </a>\r\n            </div>}\r\n            {profile.lookingForAJobDescription &&\r\n            <>\r\n                <div>\r\n                    <strong>Job description</strong>\r\n                </div>\r\n                <div className={style.contactsBlockItem}>\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n            </>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","\r\nimport React from \"react\";\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\ntype OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType, uploadAvatarTC,\r\n} from \"../../../store/ProfileReducer\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../ProfileStatus\";\r\nimport Modal from \"@mui/material/Modal/Modal\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../store/AppReducer\";\r\nimport {myIDSelector} from \"../../Common/Selectors/Selectors\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {maxPictureSize} from \"../../../constants\";\r\nimport {ContactBlock} from \"../ContactBlock/ContactBlock\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport {ChatBlock} from \"../OnlineFriends/ChatBlock\";\r\nimport {OnlineFriendType} from \"../../OldComponents/OldStore\";\r\nimport chatStyles from \"../OnlineFriends/ChatBlock.module.scss\";\r\n\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType | undefined\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 350,\r\n    bgcolor: '#F9F9FE',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: 2,\r\n}\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos?.large);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const myId = useAppSelector(myIDSelector);\r\n    const photoRef = useRef<HTMLInputElement>(null);\r\n    const onlineFriends = useAppSelector<Array<OnlineFriendType>>(state => state.HardcodedUsers.onlineFriends)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\r\n    const [fileAvatar, setFileAvatar] = useState<any>();\r\n    const [openPopover, setOpenPopover] = useState(false)\r\n    const popoverAnchor = useRef(null);\r\n    const show = props.profile && Object.values( props.profile.contacts).every(item => item !== null)\r\n\r\n    const handleCloseModal = () => setOpen(false);\r\n    const handleClosePopover = () => setOpenPopover(false);\r\n    const handleOpenPopover = () => setOpenPopover(true);\r\n    const uploadPhoto = () => photoRef.current && photoRef.current.click();\r\n    const handleSaveAvatar = () => {\r\n        dispatch(uploadAvatarTC(fileAvatar));\r\n        handleCloseModal();\r\n    }\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const reader = new FileReader();\r\n        const file = e.target?.files;\r\n\r\n        if ((file && file[0].type) && (file[0].type === \"image/png\" || file[0].type === \"image/jpeg\")) {\r\n            setFileAvatar(file[0])\r\n            reader.onloadend = function () {\r\n                setLocalAvatar(reader.result)\r\n            }\r\n            if (file[0].size && file[0].size <= maxPictureSize) {\r\n                reader.readAsDataURL(file[0])\r\n            } else {\r\n                dispatch(setAppErrorAC(`Your file size must be less then ${maxPictureSize / 1000000}MB 😕`))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setAppErrorAC(`Your file has not in .png .jpeg format. Please choose the right file`))\r\n        }\r\n\r\n    }\r\n    const onlineFriendsArr = onlineFriends.map((f) =>\r\n        <ChatBlock\r\n            key={f.id}\r\n            id={f.id}\r\n            avatar={f.avatar}/>\r\n    )\r\n    return (\r\n        <div className={styles.profileInfoWrapper}>\r\n\r\n            <div className={styles.profilePhoto}>\r\n                <div className={styles.avatarWrapper}>\r\n                    {props.profile && <img src={props.profile.photos?.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>}\r\n                    {(userId === myId || isNaN(userId)) &&\r\n                    <div className={styles.menu} onClick={() => setOpen(true)}><p>Change photo</p></div>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>\r\n                    {props.profile && <strong>{props.profile.fullName}</strong>}\r\n                    {/*<img src={smallLogo} alt=\"smallLogo\"/>*/}\r\n                    <CheckCircleOutlineIcon\r\n                        className={styles.popover}\r\n                        ref={popoverAnchor}\r\n                        onClick={handleOpenPopover} fontSize={\"small\"}\r\n                        color={props.profile && props.profile.lookingForAJob ? \"success\" : \"error\"}/>\r\n                </div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                {props.profile && <p className={styles.profileDescription}>\r\n                    {props.profile.aboutMe}\r\n                </p>}\r\n            </div>\r\n            {show && <ContactBlock/>}\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriendsArr}\r\n            </div>\r\n            <Modal open={open}\r\n                   onClose={handleCloseModal}\r\n            >\r\n                <Box sx={style}>\r\n                    <Box>\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: 'center',\r\n                            alignItems: \"center\", position: \"relative\"\r\n                        }}><strong>\r\n                            <p style={{fontSize: \"20px\"}}>Uploading profile photo</p>\r\n                        </strong></Box>\r\n                        <IconButton style={{position: \"absolute\", top: \"5px\", right: \"10px\"}}\r\n                                    onClick={handleCloseModal}>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        /*justifyContent: 'space-between',*/\r\n                        alignItems: \"center\"\r\n                    }}>\r\n\r\n                        <Box id=\"outer-container\">\r\n                            <img src={base64Avatar || userPhoto} alt=\"avatar\"\r\n                                 width={\"200px\"} style={{borderRadius: \"8px\", marginBottom: \"10px\"}}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'space-between',\r\n                            width: \"200px\"\r\n                        }}>\r\n                            <input type={\"file\"} style={{display: \"none\"}} id={\"answer\"} ref={photoRef}\r\n                                   accept=\"image/*\" onChange={onChangeAvatar}/>\r\n                            <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                    onClick={uploadPhoto}>\r\n                                Upload photo\r\n                            </Button>\r\n                            <Button sx={{textTransform: \"none\"}} variant={\"contained\"} onClick={handleSaveAvatar}>\r\n                                Save\r\n                            </Button>\r\n                        </Box>\r\n                        <p>You can upload images in JPG or PNG format</p>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n            <Popover open={openPopover}\r\n                     anchorEl={popoverAnchor.current}\r\n                     onClose={handleClosePopover}\r\n                     anchorOrigin={{\r\n                         vertical: 'top',\r\n                         horizontal: 'left',\r\n                     }}\r\n                     transformOrigin={{\r\n                         vertical: 'bottom',\r\n                         horizontal: 'right',\r\n                     }}\r\n            >\r\n                <Typography\r\n                    sx={{p: 1}}>{props.profile && props.profile.lookingForAJob ? \"In search of a job\" : \"Not looking for a job\"}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {deleteMyPostAC} from \"../../../../store/UserPostsReducer\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport const maxLikesCount = 300;\r\ntype MyPostsPropsType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type LikeObjType = {\r\n    likeCount: number\r\n    updated: boolean\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const dispatch = useDispatch();\r\n    const deletePost = (userId: string) => {\r\n        dispatch(deleteMyPostAC(userId))\r\n    }\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () => {\r\n        if (!likeObj.updated) {\r\n            setLikeObj({likeCount: likeObj.likeCount + 1, updated: true})\r\n        } else {\r\n            setLikeObj({likeCount: likeObj.likeCount - 1, updated: false})\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.avatarAndClose}>\r\n                <MyProfilePhoto/>\r\n                <IconButton style={{height: \"40px\"}} onClick={() => deletePost(props.id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> :\r\n                    <FavoriteBorderIcon onClick={addLikeHandler}/>} {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport {TextAreaForm} from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        id={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <div className={styles.myPostForm}>\r\n                <h5 className={styles.newPostHeader}>NEW POST</h5>\r\n                <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./AnyUserPosts.module.scss\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\n\r\nimport {deleteUsersPostAC, UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport {LikeObjType, maxLikesCount} from \"../MyPosts/Post/Post\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst AnyUserPost = ({avatar, name, position, postText, postPhoto, id}: UsersOnWallType) => {\r\n    const dispatch = useDispatch();\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () =>{\r\n        if(!likeObj.updated){\r\n            setLikeObj({likeCount: likeObj.likeCount +1, updated: true})\r\n        } else{\r\n            setLikeObj({likeCount: likeObj.likeCount -1, updated: false})\r\n        }\r\n    }\r\n    const deletePostHandler = (userId: string) =>{\r\n        dispatch(deleteUsersPostAC(userId))\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n    return (\r\n        <div className={styles.anyUserPost}>\r\n            <div className={styles.userWrapper}>\r\n                <div className={styles.userPhotoAndDescriptionBlock}>\r\n                    <img src={avatar} alt={\"avatar\"}/>\r\n                    <div className={styles.userDescription}>\r\n                        <strong>{name}</strong>\r\n                        <div className={styles.userPosition}>{position}</div>\r\n                    </div>\r\n                </div>\r\n                <IconButton onClick={() => deletePostHandler(id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <p>{postText}</p>\r\n            {postPhoto && <img className={styles.postPhoto} src={postPhoto} alt=\"postPhoto\"/>}\r\n\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> : <FavoriteBorderIcon onClick={addLikeHandler}/> } {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPost;","import React from 'react';\r\nimport styles from \"../AnyUserPosts/AnyUserPosts.module.scss\";\r\n\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport AnyUserPost from \"./AnyUserPost\";\r\n\r\n\r\nconst AnyUserPosts = () => {\r\n    const userInfo = useAppSelector<Array<UsersOnWallType>>(state => state.HardcodedUsers.anyUserPostsData);\r\n    const anyPostsElements = userInfo.map(post => <AnyUserPost key={post.id} postPhoto={post.postPhoto} name={post.name}\r\n                                                               id={post.id} avatar={post.avatar}\r\n                                                               position={post.position} postText={post.postText}/>)\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            {\r\n                anyPostsElements\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPosts;","import {ChatMessageAPIType} from \"../../api/chatAPI\";\r\nimport React from \"react\";\r\nimport styles from \"./Message.module.scss\"\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport defaultUserImage from \"../../Images/defaultUserImage.jpg\"\r\ntype MessagePropsType = {\r\n    message: ChatMessageAPIType\r\n    userId: number\r\n}\r\nexport const Message = React.memo(({message, userId}: MessagePropsType) => {\r\n    const myId = useAppSelector<number>(state => state.Auth.data.id);\r\n\r\n    return (\r\n        <div className={styles.devChatMessageBlock}>\r\n            <div className={myId === userId ? styles.myImgAndMessage: styles.someUserImgAndMessage}>\r\n                {myId === userId\r\n                    ? <>\r\n                    <div className={myId === userId ? styles.myNameAndMessage : styles.someUserNameAndMessage}>\r\n                        <div className={styles.userName}>{message.userName}</div>\r\n                        <div>{message.message}</div>\r\n                    </div>\r\n                    <img style={{marginLeft: \"10px\"}} src={message.photo} alt={\"chatUserPhoto\"}/>\r\n                </>\r\n                :<>\r\n                    <img src={message.photo || defaultUserImage} alt={\"chatUserPhoto\"}/>\r\n                    <div className={myId === userId ? styles.myNameAndMessage : styles.someUserNameAndMessage}>\r\n                        <div className={styles.userName}>{message.userName}</div>\r\n                        <div>{message.message}</div>\r\n                    </div>\r\n                </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {Message} from \"./Message\";\r\nimport styles from \"./Messages.module.scss\";\r\n\r\nexport const Messages = React.memo(() => {\r\n\r\n    const[isAutoScroll, setIsAutoScroll] = useState(true);\r\n    const messages = useAppSelector(state => state.ChatPage.messages);\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n    const scrollHandler = (e:React.UIEvent<HTMLDivElement, UIEvent>) =>{\r\n        const element = e.currentTarget;\r\n        if(Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 400){\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n        }\r\n        else {\r\n            isAutoScroll && setIsAutoScroll(false)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(isAutoScroll){\r\n            messagesAnchorRef.current?.scrollIntoView();\r\n        }\r\n\r\n    }, [messages, isAutoScroll])\r\n\r\n    return (\r\n        <div className={styles.messagesBlock} onScroll={scrollHandler}>\r\n            {messages.map(m => <Message message={m} key={m.id} userId = {m.userId} />)}\r\n            <div ref={messagesAnchorRef}/>\r\n        </div>\r\n    );\r\n});","import React, {useEffect} from \"react\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {\r\n    sendMessageTC,\r\n    startMessagesListeningTC,\r\n    StatusType,\r\n    stopMessagesListeningTC\r\n} from \"../../store/chatReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {TextAreaForm} from \"../../components/Common/TextAreaForm/TextAreaForm\";\r\nimport {Messages} from \"./Messages\";\r\n\r\nexport const Chat = React.memo(() => {\r\n\r\n    const status = useAppSelector<StatusType>(state => state.ChatPage.status);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        dispatch(startMessagesListeningTC());\r\n        return () => {\r\n            dispatch(stopMessagesListeningTC())\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    const sendMessageHandler = (message: string) => dispatch(sendMessageTC(message));\r\n\r\n    return (\r\n        <div>\r\n            {status === \"error\" && <div>Some error occurred. Please refresh the gage</div>}\r\n            <>\r\n                <Messages/>\r\n                <TextAreaForm webSocketStatusDisabled={status !== \"ready\"}\r\n                              placeholderText={\"Press Ctrl + Enter to send message\"}\r\n                              callBack={sendMessageHandler}/>\r\n            </>\r\n\r\n        </div>\r\n    );\r\n});","import React, {useEffect, useState} from \"react\";\r\nimport {Chat} from \"./Chat\";\r\nimport styles from \"./ChatPage.module.scss\"\r\nimport {IconButton} from \"@mui/material\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {setStartMessagesCountAC, StatusType} from \"../../store/chatReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nconst ChatPage = React.memo(() => {\r\n    const myId = useAppSelector(state => state.Auth.data.id);\r\n    const messages = useAppSelector(state => state.ChatPage.messages).filter(m => m.userId !== myId);\r\n    const status = useAppSelector<StatusType>(state => state.ChatPage.status);\r\n    const startMessagesCount = useAppSelector<number>(state => state.ChatPage.startMessagesCount);\r\n    const [isChatOpen, setIsChatOpen] = useState<boolean>(false);\r\n    const [startMessagesLength, setStartMessagesLength] = useState<number>(messages.length);\r\n    const newMessagesCount = messages.length - startMessagesCount;\r\n    const dispatch = useDispatch();\r\n\r\n    const collapseChat = () => {\r\n        setIsChatOpen(!isChatOpen);\r\n        dispatch(setStartMessagesCountAC(messages.length)); //удалим флаг новых сообщений, засинхронизировав стейт по клику на кнопку свенуть\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (status === 'ready' && startMessagesLength === 0) {\r\n            setStartMessagesLength(messages.length);\r\n            dispatch(setStartMessagesCountAC(messages.length)); // записать стартовые сообещения в стейт\r\n        }\r\n    }, [status, messages, dispatch]);\r\n\r\n    return (\r\n        <div className={isChatOpen ? styles.chatPageBlockOpen : styles.chatPageBlockCollapsed}>\r\n            <div className={styles.chatTitle}>\r\n                <div>Public chat</div>\r\n                <div className={newMessagesCount > 0 && !isChatOpen ? styles.messageFlag : styles.noMessageFlag}>\r\n                    <div>{newMessagesCount}</div>\r\n                </div>\r\n                <IconButton onClick={collapseChat} className={styles.minimizeIcon}>\r\n                    <MinimizeIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ChatPage","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport AnyUserPosts from \"./AnyUserPosts/AnyUserPosts\";\r\nimport {addPostActionAC} from \"../../store/UserPostsReducer\";\r\nimport ChatPage from \"../../Pages/Chat/ChatPage\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n    userID: number | null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(state => state.HardcodedUsers.myPostsData);\r\n    const profile = useAppSelector(state => state.ProfilePage.profile);\r\n    const dispatch = useDispatch();\r\n    const addMessage = (text: string) => dispatch(addPostActionAC(text));\r\n\r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n\r\n            <ProfileInfo profile={profile}/>\r\n\r\n            <div className={styles.allPostsBlock}>\r\n                <MyPosts\r\n                    placeholderText={placeholderText.profileAreaText}\r\n                    callBack={addMessage}\r\n                    postsData={postsData}/>\r\n                <AnyUserPosts/>\r\n                <ChatPage/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {PATH} from \"../../App\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    let userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector);\r\n    const myUserID = useAppSelector(state => state.Auth.data.id);\r\n    if (isNaN(userId)) {\r\n        userId = myUserID;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userId){\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }\r\n\r\n    }, [userId, dispatch]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\r\n\r\n    return (props:T):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {AlertTitle} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../store/store\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\n\r\n\r\n\r\nexport const ErrorSnackBar = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const error = useAppSelector<NullableType<string>>(state => state.App.error);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert\r\n                onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>{error}</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Logo.559316d0.svg\";","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../store/AuthReducer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector, myIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport logo from \"../../Images/Logo.svg\"\r\nimport {PATH} from \"../../App\";\r\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport {MyProfilePhoto} from \"../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport function Navigation() {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n    const myID = useSelector(myIDSelector);\r\n\r\n    const navigateToMyMage = () => {\r\n        navigate(`/profile/${myID}`)\r\n    }\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <div className={styles.logo}>\r\n                <img src={logo} alt=\"logo\"/>\r\n            </div>\r\n            <nav className={styles.sideWrapper}>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={`${PATH.PROFILE}/${myID}`}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <RssFeedIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Feed</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.DIALOGS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <MessageIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Dialogs</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.USERS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <PeopleAltIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>All Users</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.LastNavItem}>\r\n                    <NavLink to={PATH.EDIT_PROFILE}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <SettingsIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Edit Profile</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <div className={styles.loginBlock}>\r\n                <div className={styles.profilePhoto} onClick={navigateToMyMage}>\r\n                    <MyProfilePhoto/>\r\n                </div>\r\n                {/*<div className={styles.jobStatus}>\r\n                    <div className={styles.userName} onClick={navigateToMyMage}>\r\n                        {myLoginName}\r\n                    </div>\r\n                </div>*/}\r\n                {\r\n                    isLoggedIn &&\r\n                    <>\r\n                        <Button variant={\"outlined\"} className={styles.loginButton} onClick={logOutHandler}>\r\n                            Log out\r\n                        </Button>\r\n\r\n                         <IconButton className={styles.logOutIcon} onClick={logOutHandler}>\r\n                            <LogoutIcon fontSize={\"large\"} />\r\n                        </IconButton>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {Navigation} from \"./Navigation\";\r\n\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <header className={styles.headerWrapper}>\r\n            <Navigation/>\r\n        </header>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Navigate, Outlet, useLocation} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../store/store\";\r\nimport {isLoggedInSelector} from \"./Common/Selectors/Selectors\";\r\nimport {Header} from \"./Header/Header\";\r\n\r\n\r\n\r\nconst PrivateRoutes = () => {\r\n    const location = useLocation();\r\n\r\n    const isLoggedIn = useAppSelector<boolean>(isLoggedInSelector);\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Navigate\r\n                to={`/login?redirectTo=${encodeURIComponent(location.pathname)}`}\r\n                replace\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Outlet/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;","export default __webpack_public_path__ + \"static/media/astronaut.efda7730.svg\";","export default __webpack_public_path__ + \"static/media/earth.e0fbdf02.svg\";","export default __webpack_public_path__ + \"static/media/moon.5a77d87b.svg\";","export default __webpack_public_path__ + \"static/media/rocket.9c039dba.svg\";","export default __webpack_public_path__ + \"static/media/404Text.154db121.svg\";","import React from \"react\";\r\nimport styles from \"./Error404.module.scss\";\r\nimport {NavLink, } from \"react-router-dom\";\r\n\r\nimport astronaut from \"./../../Images/astronaut.svg\";\r\nimport earth from \"./../../Images/earth.svg\";\r\nimport moon from \"./../../Images/moon.svg\";\r\nimport rocket from \"./../../Images/rocket.svg\";\r\nimport errorText from \"./../../Images/404Text.svg\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={styles.ErrorWrapper } >\r\n\r\n            <div className={styles.stars} >\r\n\r\n                <div className={styles.centralBody}>\r\n                    <img className={styles.image404} src={errorText} alt={\"img404\"}/>\r\n                    <NavLink to={`${PATH.HOME}`} className={styles.btnGoHome}>GO BACK HOME</NavLink>\r\n                </div>\r\n                <div className={styles.objects}>\r\n                    <img className={styles.objectRocket} src={rocket} alt={\"imgRocket\"}/>\r\n                    <div className={styles.earthMoon}>\r\n                        <img className={styles.objectEarth} src={earth} alt={\"imgEarth\"}/>\r\n                        <img className={styles.objectMoon} src={moon} alt={\"imgMoon\"}/>\r\n                    </div>\r\n                    <div className={styles.boxAstronaut}>\r\n                        <img className={styles.objectAstronaut} src={astronaut} alt={\"imgAstronaut\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.glowingStars}>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport {loginTC} from \"../../store/AuthReducer\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\nimport styles from \"./login.module.scss\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const captchaUrl = useAppSelector<NullableType<string>>(state => state.Auth.captchaUrl)\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n            captcha: \"\"\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n    useEffect(() => {\r\n        const listener = (event: KeyboardEvent) => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                event.preventDefault();\r\n                formik.handleSubmit()\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n    }, [formik]);\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n    return (\r\n\r\n        <Grid className={styles.loginWrapper} container justifyContent={\"center\"}>\r\n            <Grid className={styles.login} item justifyContent={'center'}>\r\n                <h2 className={styles.h2}>\r\n                    Social network\r\n                </h2>\r\n                <h2 >\r\n                    Sign in\r\n                </h2>\r\n                <FormControl className={styles.textFields}>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup >\r\n                            <FormControl  sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div className={styles.emailError}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div className={styles.passError}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n\r\n                            <FormControlLabel className={styles.checkbox}\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n                            {captchaUrl &&\r\n                            <>\r\n                                <img src={captchaUrl} alt={\"captchaImg\"}/>\r\n                                <FormControl sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Captcha</InputLabel>\r\n                                    <Input {...formik.getFieldProps(\"captcha\")}\r\n\r\n                                    />\r\n                                    {formik.touched.captcha && formik.errors.captcha ?\r\n                                        <div style={{color: \"red\"}}>{formik.errors.captcha}</div> : null}\r\n                                </FormControl>\r\n                            </>\r\n                            }\r\n\r\n                            <div className={styles.button}>\r\n                                <Button style={{marginTop: \" 1rem\", marginBottom: \"1rem\", width: \"200px\"}}\r\n                                       variant={'contained'}\r\n                                       type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\nimport styles from \"./../Footer/Footer.module.scss\"\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nexport const Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    const location = useLocation();\r\n\r\n    const myPortfolioRoute = \"https://dmitrylotkov.github.io/Portfolio/\"\r\n    return (\r\n        <footer className={location.pathname !== \"/404\" ? styles.LastContactContainer: styles.error404Display}>\r\n            <span>© {year} All Rights Reserved. Created for educational purposes by\r\n                <a href={myPortfolioRoute}>\r\n                    <strong> @Dmitry Lotkov</strong>\r\n                </a>\r\n            </span>\r\n        </footer>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./EditProfile.module.scss\"\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Formik} from \"formik\";\r\nimport {updateProfileTC} from \"../../store/ProfileReducer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\n\r\nexport const EditProfile = React.memo(() => {\r\n    const userId = useAppSelector(state => state.Auth.data.id);\r\n    const myProfile = useAppSelector(state => state.Auth.myProfile);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className={s.editProfileWrapper}>\r\n            <div className={s.content}><h3>Edit profile</h3>\r\n\r\n                <Formik enableReinitialize={true}\r\n                        initialValues={{\r\n                            userId: userId,\r\n                            lookingForAJob: myProfile && myProfile.lookingForAJob,\r\n                            lookingForAJobDescription: myProfile &&  myProfile.lookingForAJobDescription,\r\n                            fullName: myProfile &&  myProfile.fullName,\r\n                            aboutMe: myProfile &&  myProfile.aboutMe,\r\n                            contacts: {\r\n                                facebook: myProfile &&  myProfile.contacts.facebook,\r\n                                website: myProfile &&  myProfile.contacts.website,\r\n                                vk: myProfile &&  myProfile.contacts.vk,\r\n                                twitter: myProfile &&  myProfile.contacts.twitter,\r\n                                instagram: myProfile &&  myProfile.contacts.instagram,\r\n                                youtube: myProfile &&  myProfile.contacts.youtube,\r\n                                github: myProfile &&  myProfile.contacts.github,\r\n                                mainLink: myProfile &&  myProfile.contacts.mainLink,\r\n                            }\r\n\r\n                        }}\r\n\r\n                        onSubmit={\r\n                            values => {\r\n                                dispatch(updateProfileTC(values));\r\n                                navigate(`${PATH.PROFILE}/${userId}`);\r\n                            }\r\n                        }>\r\n\r\n                    {props => (\r\n                        <form onSubmit={props.handleSubmit}>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>Github: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.github\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.github}\r\n                                           error={!!props.errors.contacts?.github}\r\n                                           helperText={props.errors.contacts?.github}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>Facebook: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.facebook\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.facebook}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>VK: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.vk\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.vk}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>Instagram: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.instagram\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.instagram}\r\n\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>Twitter: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.twitter\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.twitter}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>YouTube: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.youtube\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>WebSite: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.website\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>Main link: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.mainLink\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <div className={s.contactText}>About me: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"aboutMe\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.aboutMe}\r\n\r\n                                />\r\n\r\n                            </div>\r\n                            <div className={s.formRowWithoutMargin}>\r\n                                <div className={s.contactText}>Full name: </div>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"fullName\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.fullName}\r\n\r\n                                />\r\n                            </div>\r\n                            <div  className={s.formRowWithoutMargin}>\r\n\r\n                                <FormControlLabel\r\n                                    labelPlacement={\"start\"}\r\n\r\n                                    label={'Looking for a job:'}\r\n                                    name={\"lookingForAJob\"}\r\n                                    control={<Checkbox/>}\r\n                                    checked={props.values.lookingForAJob}\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Job description: </p>\r\n                                <TextField inputProps={{ className: s.textField }}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           name={\"lookingForAJobDescription\"}\r\n                                           type=\"text\"\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.lookingForAJobDescription}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className={s.button}>\r\n                                <Button variant={'contained'} type={\"submit\"}>Submit\r\n                                    changes</Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {useAppSelector} from \"./store/store\";\r\nimport UsersContainerFC from './Pages/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport PhotosContainer from \"./Pages/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./store/AuthReducer\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\nimport {RequestStatusType} from \"./store/AppReducer\";\r\nimport {ErrorSnackBar} from \"./components/ErrorSnackBar/ErrorSnackBar\";\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\nimport {Error404} from \"./Pages/Error404/Error404\";\r\nimport {Login} from \"./Pages/Login/Login\";\r\nimport {Footer} from \"./Pages/Footer/Footer\";\r\nimport {EditProfile} from \"./Pages/EditProfile/EditProfile\";\r\nimport {EventsContainer} from \"./Pages/Events/EventsContainer\";\r\n\r\n\r\nconst SuspendedDialogContainer = React.lazy(() => import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE: \"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS: \"/events\",\r\n    PHOTOS: \"/photos\",\r\n    EDIT_PROFILE: \"/edit_profile\"\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={\"App\"}>\r\n            <main className={\"mainContent\"}>\r\n                {appStatus === 'loading' && <Preloader/>}\r\n                <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}`}/>}/>\r\n                    <Route element={<PrivateRoutes />}>\r\n                        <Route path={`${PATH.PROFILE}`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={`${PATH.PROFILE}/:userId`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={PATH.DIALOGS} element={withSuspense(SuspendedDialogContainer)({})}/>\r\n                        <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                        <Route path={PATH.EDIT_PROFILE} element={<EditProfile/>}/>\r\n                    </Route>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>}/>\r\n                    <Route path={`${PATH.ERROR404}`} element={<Error404/>}/>\r\n                </Routes>\r\n                <ErrorSnackBar/>\r\n\r\n            </main>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersPageType} from \"../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../store/ProfileReducer\";\r\nimport {LoginParamsType} from \"../store/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\nexport type RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<RespType>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(photoFile:File){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<RespType<{photos:{small:\"\", large:\"\"}}>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile: ProfileDataType){\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile`, {...profile})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    },\r\n    getFollowers(userID: string | undefined){\r\n        return instance.get(`follow/${userID}`)\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    captcha(){\r\n        return instance.get<{url:string| null}>(`/security/get-captcha-url`)\r\n    }\r\n}\r\n","import {profileAPI} from \"../api/api\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setMyProfileAC} from \"./AuthReducer\";\r\n\r\n//types\r\nenum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    SAVE_MY_PROFILE_PHOTO = \"PROFILE/SAVE-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n\r\n}\r\n\r\nexport type ProfileActionsType =\r\n     ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof savePhotoAC>\r\n    | ReturnType<typeof setStatusAC>\r\n\r\n\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type UserProfileContactType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileDataType = {\r\n    userId: number,\r\n    aboutMe?: string\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    fullName?: string\r\n    contacts: Partial<UserProfileContactType>\r\n    photos?: userProfilePhotosType\r\n}\r\n\r\n//actions\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\r\n    profile\r\n} as const);\r\nexport const savePhotoAC = (photos: userProfilePhotosType) => ({\r\n    type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO,\r\n    photos\r\n} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    status: \"\",\r\n    profile: {\r\n        userId: 0,\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ACTIONS_TYPE.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null, isMyProfile?: boolean) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    try {\r\n        let res = await profileAPI.getProfile(userId);\r\n        if (isMyProfile) {\r\n            dispatch(setMyProfileAC(res.data))\r\n        }\r\n        else {\r\n            dispatch(setUserProfileAC(res.data));\r\n        }\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    try {\r\n        let res = await profileAPI.getStatus(userId);\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    try {\r\n        let res = await profileAPI.updateStatus(status)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const uploadAvatarTC = (photoFile: File) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    const userId = getState().Auth.data.id;\r\n\r\n    try {\r\n        let res = await profileAPI.uploadAvatar(photoFile)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n            await dispatch( getProfileTC(userId))\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try upload avatar\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\nexport const updateProfileTC = (profile: ProfileDataType) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    const userId = getState().Auth.data.id;\r\n    try {\r\n        let res = await profileAPI.updateProfile(profile)\r\n        if (res.data.resultCode === 0) {\r\n            await dispatch( getProfileTC(userId, true))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update profile\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\n","import {authAPI, AuthDataType, securityAPI} from \"../api/api\";\r\nimport {AppThunkDispatch} from \"./store\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {getProfileTC, ProfileDataType} from \"./ProfileReducer\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGGED_IN = \"AUTH/SET-IS-LOGGED-IN\",\r\n    SET_IS_INITIALIZED = \"AUTH/SET-IS-INITIALIZED\",\r\n    SET_AUTH_DATA = \"AUTH/SET-AUTH-DATA\",\r\n    GET_CAPTCHA = \"AUTH/GET-CAPTCHA\",\r\n    SET_AUTH_PROFILE_DATA = \"AUTH/SET-AUTH-PROFILE-DATA\",\r\n}\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n    | ReturnType<typeof getCaptchaAC>\r\n    | ReturnType<typeof setMyProfileAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n    captchaUrl: null | string\r\n    myProfile: undefined | ProfileDataType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: 0,\r\n        email: \"\",\r\n        login: \"\",\r\n\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n    captchaUrl: null,\r\n    myProfile: undefined as undefined | ProfileDataType\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.SET_AUTH_DATA:\r\n            return {...state, data: action.data}\r\n        case ACTIONS_TYPE.GET_CAPTCHA:\r\n            return {...state, captchaUrl: action.captcha}\r\n        case ACTIONS_TYPE.SET_AUTH_PROFILE_DATA:\r\n            return {...state, myProfile: action.profile}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_LOGGED_IN, isLoggedIn} as const);\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_INITIALIZED, isInitialized} as const);\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.SET_AUTH_DATA, data: profileData} as const);\r\nexport const getCaptchaAC = (captcha: string | null) =>\r\n    ({type: ACTIONS_TYPE.GET_CAPTCHA, captcha} as const);\r\nexport const setMyProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_AUTH_PROFILE_DATA, profile\r\n} as const)\r\n\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\r\n    try {\r\n        let res = await authAPI.me();\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n            await dispatch(getProfileTC(res.data.data.id, true)); // этот запрос делается, чтобы записать мои данные в отдельный стейт\r\n            dispatch(setIsLoggedInAC(true));\r\n        } else {\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try initialize app\", error)\r\n        handleNetworkError(error, dispatch);\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\r\n    try {\r\n        let res = await authAPI.login(data);\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(getCaptchaAC(null))\r\n            dispatch(await initializeAppTC())\r\n        } else {\r\n            if (res.data.resultCode === 10) {\r\n                dispatch(await getCaptchaTC())\r\n            }\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to login\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await securityAPI.captcha();\r\n    try {\r\n\r\n        dispatch(getCaptchaAC(res.data.url))\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"AnyUserPosts_itemWrapper__3SAlC\",\"anyUserPost\":\"AnyUserPosts_anyUserPost__1jKw2\",\"userWrapper\":\"AnyUserPosts_userWrapper__2Bib2\",\"userPhotoAndDescriptionBlock\":\"AnyUserPosts_userPhotoAndDescriptionBlock__1pr_E\",\"userDescription\":\"AnyUserPosts_userDescription__jD3qN\",\"userPosition\":\"AnyUserPosts_userPosition__3JImU\",\"postPhoto\":\"AnyUserPosts_postPhoto__3lIfB\",\"likeBlock\":\"AnyUserPosts_likeBlock__1oOiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__iDoIF\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3sygl\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__1II4U\",\"menu\":\"ProfileInfo_menu__4TXbA\",\"statusBlock\":\"ProfileInfo_statusBlock__12kNH\",\"profileName\":\"ProfileInfo_profileName__QENTj\",\"popover\":\"ProfileInfo_popover__3IVNF\",\"profileStatus\":\"ProfileInfo_profileStatus__P1vsw\",\"profileDescription\":\"ProfileInfo_profileDescription__4gsPq\",\"modalMainBox\":\"ProfileInfo_modalMainBox__3RTcD\",\"avatarBlock\":\"ProfileInfo_avatarBlock__3CI4t\",\"avatarImg\":\"ProfileInfo_avatarImg__3-stZ\",\"iconUpload\":\"ProfileInfo_iconUpload__aSS_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"devChatMessageBlock\":\"Message_devChatMessageBlock__xJ-ch\",\"myImgAndMessage\":\"Message_myImgAndMessage__3-JN3\",\"someUserImgAndMessage\":\"Message_someUserImgAndMessage__3apEG\",\"myNameAndMessage\":\"Message_myNameAndMessage__2YUYp\",\"someUserNameAndMessage\":\"Message_someUserNameAndMessage__2NjYl\"};","import {StatusType} from \"../store/chatReducer\";\r\n//types\r\nexport type ChatMessageAPIType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n}\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void;\r\ntype StatusChangedSubscriberType = (status: StatusType) => void;\r\nconst subscribers = {\r\n    \"messageReceived\" : [] as MessagesReceivedSubscriberType[],\r\n    \"statusChanged\": [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nexport type EventNamesType = \"messageReceived\" | \"statusChanged\";\r\n\r\nlet isShowCloseAlert = true;\r\nlet ws: WebSocket | null = null;\r\nlet alertCounter = false;\r\n\r\nconst closeHandler = () => {\r\n    console.log(\"Close ws\");\r\n    if(isShowCloseAlert){\r\n        alert(\"Internet connection was interrupted\");\r\n        isShowCloseAlert = false\r\n    }\r\n    notifySubscribersAboutStatus(\"pending\");\r\n    setTimeout(createChannel, 3000);\r\n    alertCounter = true;\r\n}\r\nlet messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data);\r\n    subscribers[\"messageReceived\"].forEach(s => s(newMessages));\r\n}\r\nlet openHandler = () => {\r\n    if(alertCounter){\r\n        alert(\"Internet connection was restored\")\r\n    }\r\n    notifySubscribersAboutStatus(\"ready\");\r\n}\r\nlet errorHandler = () => {\r\n    notifySubscribersAboutStatus(\"error\");\r\n    console.log(\"Refresh page\")\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener(\"close\", closeHandler); // (проверка на \"если вед сокет был, то удалим\") при реконекте удаляем подписчик на старый веб сокет\r\n    ws?.removeEventListener(\"message\", messageHandler);\r\n    ws?.removeEventListener(\"open\", openHandler);\r\n    ws?.removeEventListener(\"error\", errorHandler);\r\n}\r\n\r\nconst notifySubscribersAboutStatus = (status: StatusType) => subscribers[\"statusChanged\"].forEach(s=>s(status));\r\nexport function createChannel() {\r\n    cleanUp()\r\n    ws?.close(); // при реконекте закрываем старый веб сокет\r\n    ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\");\r\n    notifySubscribersAboutStatus(\"pending\")\r\n    ws.addEventListener(\"close\", closeHandler);\r\n    ws.addEventListener(\"message\", messageHandler);\r\n    ws.addEventListener(\"open\", openHandler);\r\n    ws.addEventListener(\"error\", errorHandler);\r\n}\r\n\r\nexport const chatAPI = {\r\n    subscribe(eventName: EventNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback);\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unSubscribe(eventName: EventNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message);\r\n    },\r\n    start() {\r\n        createChannel();\r\n    },\r\n    stop() {\r\n        subscribers[\"messageReceived\"] = [];\r\n        subscribers[\"statusChanged\"] = [];\r\n        cleanUp();\r\n        ws?.close();\r\n\r\n    }\r\n}","import {AppThunkDispatch} from \"./store\";\r\nimport {chatAPI, ChatMessageAPIType} from \"../api/chatAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_MESSAGES = \"CHAT/SET-MESSAGES\",\r\n    SAVE_MESSAGES_COUNT = \"CHAT/SAVE-MESSAGES-COUNT\",\r\n    CHANGE_STATUS = \"CHAT/CHANGE-STATUS\",\r\n\r\n}\r\n\r\nexport type StatusType = \"pending\" | \"ready\" | \"error\";\r\nexport type ChatActionsType =\r\n    ReturnType<typeof setMessagesAC> |\r\n    ReturnType<typeof changeStatusAC> |\r\n    ReturnType<typeof setStartMessagesCountAC>\r\n\r\n\r\nexport type ChatMessageType = ChatMessageAPIType & { id: string }\r\n\r\ntype InitialStateType = {\r\n    messages: ChatMessageType[];\r\n    startMessagesCount: number;\r\n    status: StatusType;\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    messages: [] as Array<ChatMessageType>,\r\n    startMessagesCount: 0,\r\n    status: \"pending\",\r\n}\r\n\r\n//reducer\r\nexport const chatReducer = (state: InitialStateType = initialState, action: ChatActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_MESSAGES:\r\n            if (action.messages.length === 1) {\r\n                return {\r\n                    ...state, messages: [...state.messages, ...action.messages.map(m => ({...m, id: v1()}))\r\n                    ]/* .filter((m, index, arr) => index >= arr.length - 100)*/\r\n                }\r\n            }\r\n            return {\r\n                ...state, messages: action.messages.map(m => ({...m, id: v1()}))\r\n            }\r\n        case ACTIONS_TYPE.CHANGE_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case ACTIONS_TYPE.SAVE_MESSAGES_COUNT:\r\n            return {\r\n                ...state, startMessagesCount: action.startMessagesCount\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\n\r\nexport const setMessagesAC = (messages: ChatMessageAPIType[]) => ({type: ACTIONS_TYPE.SET_MESSAGES, messages}) as const;\r\nexport const setStartMessagesCountAC = (startMessagesCount: number) => ({type: ACTIONS_TYPE.SAVE_MESSAGES_COUNT,\r\n    startMessagesCount\r\n}) as const;\r\nexport const changeStatusAC = (status: StatusType) => ({type: ACTIONS_TYPE.CHANGE_STATUS, status}) as const;\r\n\r\n\r\n//thunks\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null;\r\n\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) { // это мемоизация\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(setMessagesAC(messages))\r\n        }\r\n\r\n    }\r\n    return _newMessageHandler\r\n\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null;\r\n\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) { // это мемоизация\r\n        _statusChangedHandler = (status) => dispatch(changeStatusAC(status))\r\n    }\r\n    return _statusChangedHandler\r\n\r\n}\r\nexport const startMessagesListeningTC = () => async (dispatch: AppThunkDispatch) => {\r\n\r\n    try {\r\n        chatAPI.start();\r\n        chatAPI.subscribe(\"messageReceived\", newMessageHandlerCreator(dispatch));\r\n        chatAPI.subscribe(\"statusChanged\", statusChangedHandlerCreator(dispatch));\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\nexport const stopMessagesListeningTC = () => async (dispatch: AppThunkDispatch) => {\r\n    try {\r\n        chatAPI.unSubscribe(\"messageReceived\", newMessageHandlerCreator(dispatch));\r\n        chatAPI.unSubscribe(\"statusChanged\", statusChangedHandlerCreator(dispatch));\r\n        chatAPI.stop();\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\nexport const sendMessageTC = (message: string) => async () => {\r\n    try {\r\n        chatAPI.sendMessage(message)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"login_loginWrapper__1Ppoc\",\"login\":\"login_login__1TlgP\",\"h2\":\"login_h2__2n8hR\",\"newPassTextFields\":\"login_newPassTextFields__26pX1\",\"textFields\":\"login_textFields__3WILw\",\"emailError\":\"login_emailError__1N7bD\",\"passError\":\"login_passError__hgQ0s\",\"checkbox\":\"login_checkbox__3xhjc\",\"button\":\"login_button__hE4vW\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","import {v1} from \"uuid\";\r\nimport user1 from \"./../Images/Users/user-1.jpg\";\r\nimport user2 from \"./../Images/Users/user-2.jpg\";\r\nimport user3 from \"./../Images/Users/user-3.jpg\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\";\r\nimport user5 from \"./../Images/Users/user-5.jpg\";\r\nimport user6 from \"./../Images/Users/user-6.jpg\";\r\nimport user7 from \"./../Images/Users/user-7.jpg\";\r\nimport user8 from \"./../Images/Users/user-8.jpg\";\r\nimport user9 from \"./../Images/Users/user-9.jpg\";\r\nimport postPhoto from \"./../Images/Post photo.png\";\r\nimport {\r\n    PostType,\r\n} from \"./ProfileReducer\";\r\n\r\n\r\nexport type OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\n\r\nenum ACTIONS_TYPE {\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    DELETE_MY_POST = \"PROFILE/DELETE-MY-POST\",\r\n    DELETE_USERS_POST = \"PROFILE/DELETE-USERS-POST\"\r\n}\r\n\r\nexport type UsersOnWallType = {\r\n    id: string\r\n    avatar: string\r\n    name: string\r\n    position: string\r\n    postText: string\r\n    postPhoto: string | undefined\r\n\r\n}\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionAC>\r\n    | ReturnType<typeof deleteMyPostAC>\r\n    | ReturnType<typeof deleteUsersPostAC>\r\n\r\nexport type PostsType = {\r\n    onlineFriends: Array<OnlineFriendType>\r\n    anyUserPostsData: Array<UsersOnWallType>\r\n    myPostsData: Array<PostType>\r\n}\r\nconst initialState: PostsType = {\r\n    myPostsData: [\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n    ],\r\n    onlineFriends: [\r\n        {id: v1(), avatar: user1},\r\n        {id: v1(), avatar: user2},\r\n        {id: v1(), avatar: user3},\r\n        {id: v1(), avatar: user4},\r\n        {id: v1(), avatar: user5},\r\n        {id: v1(), avatar: user6},\r\n        {id: v1(), avatar: user7},\r\n        {id: v1(), avatar: user8},\r\n        {id: v1(), avatar: user9},\r\n    ],\r\n    anyUserPostsData: [\r\n\r\n        {\r\n            id: v1(),\r\n            avatar: user5,\r\n            name: \"Theresa Steward\",\r\n            position: \"iOS developer\",\r\n            postPhoto: undefined,\r\n            postText: \"What did the Dursleys care if Harry lost his place on the House Quidditch team because he hadn’t practiced all summer? \" +\r\n                \"What was it to the Dursleys if Harry went back to school without any of his homework done? \" +\r\n                \"The Dursleys were what wizards called Muggles (not a drop of magical blood in their veins).\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user4,\r\n            name: \"Kyle Fisher\",\r\n            position: \"Product manager\",\r\n            postPhoto: postPhoto,\r\n            postText: \"How's your day going, guys?\",\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user7,\r\n            name: \"Audrey Alexander\",\r\n            position: \"Android developer\",\r\n            postPhoto: undefined,\r\n            postText: \"The bun runs along the road and meets a wolf. «Little bun, little bun, I want to eat you!» says the wolf. \" +\r\n                \"«I ran away from Grandfather, I ran away from Grandmother, I ran away from the hare. \" +\r\n                \"And I can run away from you, grey wolf!» says the bun and runs away.\",\r\n        },\r\n    ]\r\n}\r\nconst UserPostsReducer = (state: PostsType = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                myPostsData: [...state.myPostsData, {id: v1(), message: action.message, likesCount: 0}]\r\n            };\r\n        case ACTIONS_TYPE.DELETE_MY_POST:\r\n            return {...state, myPostsData: state.myPostsData.filter(post => post.id !== action.id)}\r\n        case ACTIONS_TYPE.DELETE_USERS_POST:\r\n            return {...state, anyUserPostsData: state.anyUserPostsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (message: string) => ({type: ACTIONS_TYPE.ADD_POST, message} as const)\r\nexport const deleteMyPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_MY_POST, id} as const);\r\nexport const deleteUsersPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_USERS_POST, id} as const);\r\n\r\nexport default UserPostsReducer;","export default __webpack_public_path__ + \"static/media/user-1.bad1de9b.jpg\";","export default __webpack_public_path__ + \"static/media/user-2.39d014b5.jpg\";","export default __webpack_public_path__ + \"static/media/user-3.5c342bb7.jpg\";","export default __webpack_public_path__ + \"static/media/user-5.95d001b9.jpg\";","export default __webpack_public_path__ + \"static/media/user-6.f8a10ddf.jpg\";","export default __webpack_public_path__ + \"static/media/user-7.aed715d8.jpg\";","export default __webpack_public_path__ + \"static/media/user-8.ae463966.jpg\";","export default __webpack_public_path__ + \"static/media/user-9.aa6a890d.jpg\";","export default __webpack_public_path__ + \"static/media/Post photo.0bd8ec12.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__3kVe4\",\"usersBlock\":\"users_usersBlock__q5Osx\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__1LKWy\",\"avatar\":\"users_avatar__1CvUM\",\"nameAndStatus\":\"users_nameAndStatus__12WF_\",\"status\":\"users_status__2SBCe\",\"name\":\"users_name__3qcYj\"};","import {authAPI, userAPI} from \"../api/api\";\r\nimport {handleNetworkError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./AppReducer\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"USERS/FOLLOW\",\r\n    UNFOLLOW = \"USERS/UNFOLLOW\",\r\n    SET_USERS = \"USERS/SET-USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"USERS/SET-TOTAL-USERS-COUNT\",\r\n    IS_FETCHING = \"USERS/IS-FETCHING\",\r\n    IS_FOLLOWING_PROGRESS = \"USERS/IS-FOLLOWING-PROGRESS\"\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followSuccessAC> |\r\n    ReturnType<typeof unFollowSuccessAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC> |\r\n    ReturnType<typeof toggleIsFetchingAC>|\r\n    ReturnType < typeof toggleFollowingProgressAC>\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\nexport type UsersPageType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nconst initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state: UsersPageType = initialState, action: UsersActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case ACTIONS_TYPE.UNFOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case ACTIONS_TYPE.SET_USERS:\r\n            return {...state, items: action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case ACTIONS_TYPE.IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.FOLLOW, userID: userID} as const)\r\nexport const unFollowSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: ACTIONS_TYPE.SET_USERS, users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: ACTIONS_TYPE.IS_FETCHING,\r\n    isFetching: isFetching,\r\n} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = () => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    let {currentPage, pageSize} = getState().UsersPage\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let res = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get users\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let res = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try change page\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccessAC(userID));\r\n        } else{\r\n            dispatch(setAppErrorAC(\"Some error occupied\"));\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try follow user\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__by2mZ\",\"allPostsBlock\":\"Profile_allPostsBlock__1N_zG\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__37M42\",\"Title\":\"ChatBlock_Title__2dsU1\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__v9ogG\",\"OnlineDot\":\"ChatBlock_OnlineDot__OsHxk\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__1nHEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatPageBlockOpen\":\"ChatPage_chatPageBlockOpen__3A-cK\",\"chatPageBlockCollapsed\":\"ChatPage_chatPageBlockCollapsed__UhUfB\",\"chatTitle\":\"ChatPage_chatTitle__1kt_G\",\"messageFlag\":\"ChatPage_messageFlag__1Imy0\",\"noMessageFlag\":\"ChatPage_noMessageFlag__3qSw9\",\"minimizeIcon\":\"ChatPage_minimizeIcon__1Yudw\"};","export const placeholderText = {\r\n    profileAreaText: \"What's on your mind?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;"],"sourceRoot":""}