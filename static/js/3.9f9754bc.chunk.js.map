{"version":3,"sources":["Pages/Dialogs/Dialogs.module.scss","Pages/Dialogs/DialogItem/DialogItem.tsx","Pages/Dialogs/Message/Message.tsx","Pages/Dialogs/Dialogs.tsx","Pages/Dialogs/DialogContainerFC.tsx"],"names":["module","exports","DialogItem","dialogItem","DialogPage","dialogs","map","m","className","styles","userAvatarAndName","src","avatar","alt","name","jobDescription","message","id","Message","React","memo","props","messagesWrapper","MyProfilePhoto","Dialogs","dispatch","useDispatch","messagesElements","messages","addMessage","useCallback","text","addMessageAC","dialogsWrapper","TextAreaForm","callBack","placeholderText","dialogsAreaText","DialogContainerFC","dialogPage","useSelector","state"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,WAAa,4BAA4B,kBAAoB,mCAAmC,eAAiB,gCAAgC,gBAAkB,mC,uHCQzNC,EAE4B,SAAC,GAED,IACjCC,EADgC,EADtCC,WAAcC,QAEaC,KAAI,SAAAC,GAAC,OAC9B,sBAAKC,UAAWC,IAAON,WAAvB,UACE,sBAAKK,UAAWC,IAAOC,kBAAvB,UACE,qBAAKC,IAAKJ,EAAEK,OAAQC,IAAI,iBACxB,iCAASN,EAAEO,OACX,qBAAKN,UAAWC,IAAOM,eAAvB,gCAEF,8BAAMR,EAAES,YAN8BT,EAAEU,OAS5C,OAAO,mCAAGd,K,SCfCe,EAAUC,IAAMC,MAAK,SAACC,GAAD,OAChC,sBAAKb,UAAWC,IAAOa,gBAAvB,UACE,mBAAGd,UAAWC,IAAON,WAArB,SAAkCkB,EAAML,UACxC,cAACO,EAAA,EAAD,UCISC,EAAUL,IAAMC,MAAK,SAACC,GACjC,IAAMI,EAAWC,cACXC,EAAmBN,EAAMjB,WAAWwB,SAAStB,KAAI,SAAAC,GAAC,OACtD,cAACW,EAAD,CAAoBF,QAAST,EAAES,SAAjBT,EAAEU,OAEZY,EAAaC,uBACjB,SAACC,GACCN,EAASO,YAAaD,MAExB,CAACN,IAGH,OACE,sBAAKjB,UAAWC,IAAOwB,eAAvB,UACE,cAAC,EAAD,CAAY7B,WAAYiB,EAAMjB,aAC7BuB,EACD,cAACO,EAAA,EAAD,CACEC,SAAUN,EACVO,gBAAiBA,IAAgBC,wBCX1BC,UAde,WAC5B,IAAMC,EAAaC,aACjB,SAAAC,GAAK,OAAIA,EAAMrC,cAIjB,OAEE,aADA,CACCoB,EAAD,CAASpB,WAAYmC","file":"static/js/3.9f9754bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__1HkcH\",\"dialogItem\":\"Dialogs_dialogItem__dJY9j\",\"userAvatarAndName\":\"Dialogs_userAvatarAndName__ufZ9k\",\"jobDescription\":\"Dialogs_jobDescription__7KKTK\",\"messagesWrapper\":\"Dialogs_messagesWrapper__1vOsV\"};","import React from 'react';\n\nimport { DialogsStateType } from '../../../store/DialogsReducer';\nimport styles from '../Dialogs.module.scss';\n\ntype DialogItemPropsType = {\n  DialogPage: DialogsStateType;\n};\n\nexport const DialogItem: ({\n  DialogPage: { dialogs },\n}: DialogItemPropsType) => JSX.Element = ({\n  DialogPage: { dialogs },\n}: DialogItemPropsType): JSX.Element => {\n  const dialogItem = dialogs.map(m => (\n    <div className={styles.dialogItem} key={m.id}>\n      <div className={styles.userAvatarAndName}>\n        <img src={m.avatar} alt=\"friendAvatar\" />\n        <strong>{m.name}</strong>\n        <div className={styles.jobDescription}>Product manager</div>\n      </div>\n      <div>{m.message}</div>\n    </div>\n  ));\n  return <>{dialogItem}</>;\n};\n","import React from 'react';\n\nimport { MyProfilePhoto } from '../../../components/Common/MyProfilePhoto/MyProfilePhoto';\nimport styles from '../Dialogs.module.scss';\n\nexport type MessageType = {\n  message: string;\n};\n\nexport const Message = React.memo((props: MessageType) => (\n  <div className={styles.messagesWrapper}>\n    <p className={styles.dialogItem}>{props.message}</p>\n    <MyProfilePhoto />\n  </div>\n));\n","import React, { useCallback } from 'react';\n\nimport { useDispatch } from 'react-redux';\n\nimport { placeholderText } from '../../components/Common/TextAreaForm/textAreaData';\nimport { TextAreaForm } from '../../components/Common/TextAreaForm/TextAreaForm';\nimport { addMessageAC, DialogsStateType } from '../../store/DialogsReducer';\n\nimport { DialogItem } from './DialogItem/DialogItem';\nimport styles from './Dialogs.module.scss';\nimport { Message } from './Message/Message';\n\ntype DialogsPropsType = {\n  DialogPage: DialogsStateType;\n};\n\nexport const Dialogs = React.memo((props: DialogsPropsType) => {\n  const dispatch = useDispatch();\n  const messagesElements = props.DialogPage.messages.map(m => (\n    <Message key={m.id} message={m.message} />\n  ));\n  const addMessage = useCallback(\n    (text: string) => {\n      dispatch(addMessageAC(text));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={styles.dialogsWrapper}>\n      <DialogItem DialogPage={props.DialogPage} />\n      {messagesElements}\n      <TextAreaForm\n        callBack={addMessage}\n        placeholderText={placeholderText.dialogsAreaText}\n      />\n    </div>\n  );\n});\n","import React, { FC } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { DialogsStateType } from '../../store/DialogsReducer';\nimport { AppRootStateType } from '../../store/store';\n\nimport { Dialogs } from './Dialogs';\n\nconst DialogContainerFC: FC = () => {\n  const dialogPage = useSelector<AppRootStateType, DialogsStateType>(\n    state => state.DialogPage,\n  );\n\n  // const Redirect = WithAuthRedirect(Dialogs);\n  return (\n    /* <Redirect DialogPage={dialogPage}/> */\n    <Dialogs DialogPage={dialogPage} />\n  );\n};\n/* compose<React.ComponentType>(\n    WithAuthRedirect\n)(DialogContainerFC); */\nexport default DialogContainerFC;\n"],"sourceRoot":""}