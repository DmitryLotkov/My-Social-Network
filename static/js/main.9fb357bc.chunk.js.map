{"version":3,"sources":["Images/Users/user-4.jpg","components/Profile/MyPosts.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.tsx","components/Profile/MyPosts/Post/Post.module.scss","components/Common/MyProfilePhoto/MyProfilePhoto.module.scss","components/Common/Preloader/Preloader.module.scss","components/Common/TextAreaForm/TextAreaForm.module.scss","components/Footer/Footer.module.scss","store/store.ts","store/DialogsReducer.tsx","store/AppReducer.tsx","components/Common/TextAreaForm/TextAreaForm.tsx","components/EditProfile/EditProfile.module.scss","components/Header/Header.module.scss","components/Common/Selectors/Selectors.ts","utils/error.utils.ts","components/Error404/Error404.module.scss","components/Profile/ContactBlock/ContactBlock.module.scss","components/Users/Users.tsx","components/Common/Preloader/Preloader.tsx","components/Users/UsersContainerFC.tsx","components/Profile/ProfileStatus.tsx","constants.ts","components/Profile/ContactBlock/ContactBlock.tsx","components/Profile/OnlineFriends/ChatBlock.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts.tsx","components/Profile/AnyUserPosts/AnyUserPost.tsx","components/Profile/AnyUserPosts/AnyUserPosts.tsx","components/Profile/ProfileFC.tsx","components/Profile/ProfileContainerFC.tsx","components/Events/Events.tsx","components/Events/EventsContainer.tsx","components/Photos/Photos.tsx","components/Photos/PhotosContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspense.tsx","components/ErrorSnackBar/ErrorSnackBar.tsx","components/EditProfile/EditProfile.tsx","Images/Logo.svg","components/Header/Navigation.tsx","components/Header/Header.tsx","components/PrivateRoutes.tsx","Images/astronaut.svg","Images/earth.svg","Images/moon.svg","Images/rocket.svg","Images/404Text.svg","components/Error404/Error404.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx","components/api.tsx","store/ProfileReducer.tsx","store/AuthReducer.tsx","components/Profile/AnyUserPosts/AnyUserPosts.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","store/UserPostsReducer.tsx","Images/Users/user-1.jpg","Images/Users/user-2.jpg","Images/Users/user-3.jpg","Images/Users/user-5.jpg","Images/Users/user-6.jpg","Images/Users/user-7.jpg","Images/Users/user-8.jpg","Images/Users/user-9.jpg","Images/Post photo.png","components/Users/users.module.scss","components/Login/login.module.scss","store/UsersReducer.tsx","components/Profile/Profile.module.scss","components/Profile/OnlineFriends/ChatBlock.module.scss","Images/defaultUserImage.jpg","components/Common/TextAreaForm/textAreaData.ts"],"names":["module","exports","MyProfilePhoto","React","memo","navigate","useNavigate","myPhoto","useAppSelector","state","Auth","myProfile","photos","small","myLoginName","fullName","userID","useSelector","myIDSelector","onClick","className","styles","myProfilePhotoWrapper","mySmallPhoto","src","defaultUserPhoto","alt","jobDescription","useAppDispatch","useDispatch","rootReducer","combineReducers","ProfilePage","profileReducer","DialogPage","dialogsReducer","HardcodedUsers","hardcodedUsersReducer","UsersPage","userReducer","authReducer","App","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ACTIONS_TYPE","initialState","dialogs","id","v1","name","avatar","user4","message","messages","action","type","ADD_DIALOG_MESSAGE","text","addMessageAC","error","status","APP_SET_ERROR","APP_SET_STATUS","setAppErrorAC","setAppStatusAC","TextAreaForm","props","formik","useFormik","initialValues","validate","values","errors","length","maxMessageLength","onSubmit","resetForm","callBack","handleSubmit","formWrapper","multiline","textArea","placeholder","placeholderText","getFieldProps","onBlur","variant","style","color","statusSelector","data","profileSelector","profile","isLoggedInSelector","isLoggedIn","isInitializedSelector","isInitialized","isFetchingSelector","isFetching","usersSelector","items","pageSizeSelector","pageSize","currentPageSelector","currentPage","totalUserCountSelector","totalCount","followingArrSelector","following","handleNetworkError","Error","dispatch","response","handleServerAppError","handleServerNetworkError","Users","users","totalUserCount","onPageChanged","followingInProgress","unfollowTC","followTC","pagesCount","Math","ceil","userPhoto","usersWrapper","Pagination","onChange","event","page","size","shape","count","data-testid","map","user","usersBlock","avatarAndFollowButton","followed","Button","disabled","some","nameAndStatus","Preloader","main","progress","CircularProgress","UserContainerFC","followingArr","useEffect","getUsersTC","pageNumber","onPageChangedTC","follow","unfollow","ProfileStatus","useState","localStatus","setLocalStatus","editMode","setEditMode","userId","myID","activateEditMode","deactivateEditMode","updateUserStatusTC","editableDiv","input","e","currentTarget","value","onKeyPress","key","maxPictureSize","Yup","min","max","required","aboutMe","lookingForAJobDescription","contacts","facebook","matches","website","nullable","vk","twitter","instagram","youtube","github","mainLink","url","ContactBlock","contactsBlock","contactsBlockItem","icon","faVk","href","faInstagram","faYoutube","faGithub","faTwitter","faFacebook","faFirefoxBrowser","faGoogle","ChatBlock","chatStyles","onlineFriendsWrapper","imgProfilePhoto","OnlineDot","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","ProfileInfo","large","Number","useParams","myId","photoRef","useRef","onlineFriends","open","setOpen","base64Avatar","setLocalAvatar","fileAvatar","setFileAvatar","openPopover","setOpenPopover","popoverAnchor","show","Object","every","item","handleCloseModal","onlineFriendsArr","f","profileInfoWrapper","profilePhoto","avatarWrapper","menu","statusBlock","profileName","popover","ref","fontSize","lookingForAJob","profileStatus","profileDescription","Title","Modal","onClose","Box","sx","display","flexDirection","justifyContent","alignItems","IconButton","right","Close","marginBottom","accept","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","textTransform","current","click","uploadAvatarTC","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Post","likeCount","updated","likeObj","setLikeObj","addLikeHandler","likeGenerator","round","random","generateLike","itemWrapper","avatarAndClose","height","deleteMyPostAC","likeBlock","MyPosts","postsElements","postsData","likesCount","reverse","postBlock","myPostForm","newPostHeader","posts","AnyUserPost","postText","postPhoto","anyUserPost","userWrapper","userPhotoAndDescriptionBlock","userDescription","userPosition","deleteUsersPostAC","AnyUserPosts","anyPostsElements","anyUserPostsData","post","ProfileFC","myPostsData","profileWrapper","allPostsBlock","profileAreaText","addPostActionAC","ProfileContainerFC","myUserID","isNaN","getProfileTC","getUserStatusTC","to","PATH","LOGIN","Events","EventsContainer","Photos","PhotosContainer","content","Login","serverError","captchaUrl","isPassType","setIsPassType","email","test","password","rememberMe","captcha","loginTC","HOME","Grid","loginWrapper","container","login","FormControl","textFields","FormLabel","rel","FormGroup","mTop","InputLabel","htmlFor","Input","onFocus","touched","emailError","endAdornment","InputAdornment","aria-label","onMouseDown","preventDefault","VisibilityOff","Visibility","passError","FormControlLabel","checkbox","label","control","Checkbox","checked","button","marginTop","withSuspense","Component","Suspense","fallback","ErrorSnackBar","handleClose","reason","Snackbar","autoHideDuration","Alert","severity","AlertTitle","EditProfile","s","editProfileWrapper","enableReinitialize","updateProfileTC","PROFILE","formRow","contactText","TextField","background","handleChange","handleBlur","helperText","labelPlacement","Navigation","logOutHandler","logOutTC","headerContent","logo","sideWrapper","NavItem","isActive","activeNavLink","unActiveNavLink","hideForMobile","DIALOGS","USERS","LastNavItem","EDIT_PROFILE","loginBlock","loginButton","logOutIcon","Header","headerWrapper","PrivateRoutes","location","useLocation","encodeURIComponent","pathname","replace","Error404","ErrorWrapper","stars","centralBody","image404","errorText","btnGoHome","objects","objectRocket","rocket","earthMoon","objectEarth","earth","objectMoon","moon","boxAstronaut","objectAstronaut","astronaut","glowingStars","star","Footer","year","Date","getFullYear","LastContactContainer","error404Display","DialogContainerFC","lazy","ERROR404","ANY_ROUTE","EVENTS","PHOTOS","appStatus","initializeAppTC","path","element","UsersContainerFC","ReactDOM","render","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","get","profileAPI","getProfile","getStatus","updateStatus","put","uploadAvatar","photoFile","formData","FormData","append","updateProfile","authAPI","me","delete","logout","getFollowers","securityAPI","setStatusAC","SET_STATUS","SET_SOME_USER_PROFILE","SAVE_MY_PROFILE_PHOTO","isMyProfile","a","res","setMyProfileAC","console","log","resultCode","getState","undefined","SET_IS_LOGGED_IN","SET_IS_INITIALIZED","SET_AUTH_DATA","GET_CAPTCHA","SET_AUTH_PROFILE_DATA","setIsLoggedInAC","getCaptchaAC","profileData","getCaptchaTC","user1","user2","user3","user5","user6","user7","user8","user9","ADD_POST","DELETE_MY_POST","DELETE_USERS_POST","UserPostsReducer","filter","FOLLOW","u","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROGRESS","followingIsProgress","followSuccessAC","unFollowSuccessAC","setUsersAC","setUsersTotalCountAC","serverTotalUsersCount","toggleIsFetchingAC","toggleFollowingProgressAC","dialogsAreaText"],"mappings":"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","file":"static/js/main.9fb357bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user-4.f2ebe3cd.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__sox7b\",\"myPostForm\":\"MyPosts_myPostForm__2JNfF\",\"newPostHeader\":\"MyPosts_newPostHeader__3Y4vh\",\"posts\":\"MyPosts_posts__2zln9\"};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport styles from \"./MyProfilePhoto.module.scss\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {myIDSelector} from \"../Selectors/Selectors\";\r\n\r\n\r\nexport const MyProfilePhoto = React.memo(() =>{\r\n    const navigate = useNavigate();\r\n    const myPhoto = useAppSelector<string | undefined>(state => state.Auth.myProfile?.photos?.small);\r\n    const myLoginName = useAppSelector<string | undefined>(state => state.Auth.myProfile?.fullName);\r\n    const userID = useSelector(myIDSelector);\r\n    const navigateToMyMage = () => navigate(`/profile/${userID}`);\r\n\r\n    return (\r\n        <div onClick={navigateToMyMage} className={styles.myProfilePhotoWrapper}>\r\n            <img className={styles.mySmallPhoto} src={myPhoto || defaultUserPhoto} alt={\"userPhoto\"}/>\r\n            <div >\r\n                <strong>{myLoginName}</strong>\r\n                <div className={styles.jobDescription}>Frontend developer</div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"Post_itemWrapper__1z8ce\",\"avatarAndClose\":\"Post_avatarAndClose__1IB8s\",\"likeBlock\":\"Post_likeBlock__1NyHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfilePhotoWrapper\":\"MyProfilePhoto_myProfilePhotoWrapper__3ZNPd\",\"mySmallPhoto\":\"MyProfilePhoto_mySmallPhoto__v9qAS\",\"jobDescription\":\"MyProfilePhoto_jobDescription__2ne1o\",\"jobStatus\":\"MyProfilePhoto_jobStatus__1F5Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__2BYGT\",\"progress\":\"Preloader_progress__Q1DsD\",\"scaling\":\"Preloader_scaling__13g5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"TextAreaForm_formWrapper__2lVua\",\"textArea\":\"TextAreaForm_textArea__2ZXO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LastContactContainer\":\"Footer_LastContactContainer__W5QZE\",\"error404Display\":\"Footer_error404Display__1l1el\"};","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\n\r\n\r\nimport hardcodedUsersReducer from \"./UserPostsReducer\";\r\nimport {UsersActionsType, userReducer} from \"./UsersReducer\";\r\nimport {AuthActionsType, authReducer} from \"./AuthReducer\";\r\nimport thunkMiddleware, {ThunkDispatch} from 'redux-thunk'\r\nimport {appReducer, AppActionsType} from \"./AppReducer\";\r\nimport {ProfileActionsType, profileReducer} from \"./ProfileReducer\";\r\nimport {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\r\nimport {dialogsReducer} from \"./DialogsReducer\";\r\n\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType <typeof rootReducer>\r\nexport type RootActionsType = AuthActionsType | AppActionsType | ProfileActionsType | UsersActionsType\r\nexport type AppThunkDispatch = ThunkDispatch<AppStoreType, null, RootActionsType>;\r\nexport const useAppDispatch: () => AppThunkDispatch = useDispatch;\r\nconst rootReducer = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    DialogPage: dialogsReducer,\r\n    HardcodedUsers: hardcodedUsersReducer,\r\n    UsersPage: userReducer,\r\n    Auth: authReducer,\r\n    App: appReducer\r\n})\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nexport type AppStoreType = ReturnType<typeof rootReducer>;\r\nexport const useAppSelector: TypedUseSelectorHook<AppStoreType> = useSelector;\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import {v1} from \"uuid\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\"\r\n\r\n\r\n\r\n//types\r\nexport type MessagesType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport enum ACTIONS_TYPE {\r\n    ADD_DIALOG_MESSAGE = \"DIALOGS/ADD-DIALOG-MESSAGE\",\r\n}\r\nexport type DialogActionsType = ReturnType<typeof addMessageAC>\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n    avatar: string\r\n    message: string\r\n}\r\nexport type DialogsStateType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessagesType>\r\n}\r\nconst initialState: DialogsStateType = {\r\n\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: \"Kyle Fisher\",\r\n            avatar: user4,\r\n            message: \"What is the weather forecast for tomorrow?\"\r\n        },\r\n\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: \"Looks like it will be sunny tomorrow=)\"}\r\n    ]\r\n}\r\n//reducer\r\nexport const dialogsReducer = (state: DialogsStateType = initialState, action: DialogActionsType): DialogsStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_DIALOG_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: v1(), message: action.text}]\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n//action creators\r\nexport const addMessageAC = (text: string) => ({type: ACTIONS_TYPE.ADD_DIALOG_MESSAGE, text} as const)\r\n\r\n","\r\n\r\n//types\r\nexport type NullableType<T> = null | T\r\nexport enum ACTIONS_TYPE {\r\n    APP_SET_ERROR = \"APP-SET-ERROR\",\r\n    APP_SET_STATUS = \"APP/SET-STATUS\"\r\n}\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType = ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>\r\n\r\ntype InitialStateType = typeof initialState\r\nconst initialState = {\r\n    error: null as NullableType<string>,\r\n    status: \"idle\" as RequestStatusType,\r\n}\r\n\r\n//reducer\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.APP_SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTIONS_TYPE.APP_SET_STATUS:\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setAppErrorAC = (error: NullableType<string>) => ({type: ACTIONS_TYPE.APP_SET_ERROR, error} as const);\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({ type: ACTIONS_TYPE.APP_SET_STATUS, status} as const);\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport styles from \"./TextAreaForm.module.scss\";\r\nimport {MyPostsPropsType} from \"../../Profile/MyPosts\";\r\nimport {maxMessageLength} from \"./textAreaData\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {TextField} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\n\r\nexport const TextAreaForm = React.memo((props: MyPostsPropsType) => {\r\n    type FormikErrorType = {\r\n        text?: string\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: \"\",\r\n        },\r\n        validate: values => {\r\n            const errors: FormikErrorType = {};\r\n            if(!values.text){\r\n                errors.text = \"Enter a message\"\r\n            }\r\n            if(values.text.length >= maxMessageLength){\r\n                errors.text = `Max length of message is ${maxMessageLength} symbols.`\r\n            }\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values, {resetForm}) => {\r\n            if (values.text !== \"\")\r\n                props.callBack(values.text)\r\n            resetForm();\r\n        },\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <form  onSubmit={formik.handleSubmit}>\r\n            <div className={styles.formWrapper}>\r\n                <TextField  multiline={true} className={styles.textArea}\r\n                         placeholder={props.placeholderText}\r\n                         {...formik.getFieldProps(\"text\")} onBlur={() => formik.errors.text = \"\"}\r\n            />\r\n                <div>\r\n                    <Button variant={\"outlined\"} type={\"submit\"}>\r\n                        <SendIcon/>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {formik.errors.text &&  <div style={{color: \"red\"}}> {formik.errors.text}</div>}\r\n        </form>\r\n    )\r\n\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editProfileWrapper\":\"EditProfile_editProfileWrapper__30i2D\",\"content\":\"EditProfile_content___ZHRn\",\"formRow\":\"EditProfile_formRow__nKvXR\",\"contactText\":\"EditProfile_contactText___RyRo\",\"checkBoxLabel\":\"EditProfile_checkBoxLabel__3Yx_B\",\"button\":\"EditProfile_button__1wtrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2JC-5\",\"sideWrapper\":\"Header_sideWrapper__3LECh\",\"NavItem\":\"Header_NavItem__11nuk\",\"LastNavItem\":\"Header_LastNavItem__kdxWu\",\"hideForMobile\":\"Header_hideForMobile__3Vr6m\",\"unActiveNavLink\":\"Header_unActiveNavLink__3MLaf\",\"activeNavLink\":\"Header_activeNavLink__1evn6\",\"logo\":\"Header_logo__22GGz\",\"headerContent\":\"Header_headerContent__1KPAQ\",\"logOutIcon\":\"Header_logOutIcon__3ZUfl\",\"loginBlock\":\"Header_loginBlock__1rezt\",\"profilePhoto\":\"Header_profilePhoto__1MshK\",\"loginButton\":\"Header_loginButton__3g8tu\"};","import {AppRootStateType} from \"../../../store/store\";\r\nimport {UserType} from \"../../../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../../../store/ProfileReducer\";\r\n\r\nexport const statusSelector = (state:AppRootStateType):string =>{\r\n    return state.ProfilePage.status;\r\n}\r\nexport const myIDSelector = (state:AppRootStateType):number =>{\r\n    return state.Auth.data.id;\r\n}\r\nexport const profileSelector = (state:AppRootStateType):ProfileDataType =>{\r\n    return state.ProfilePage.profile;\r\n}\r\nexport const isLoggedInSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isLoggedIn;\r\n}\r\nexport const isInitializedSelector = (state:AppRootStateType):boolean =>{\r\n    return state.Auth.isInitialized;\r\n}\r\nexport const isFetchingSelector = (state:AppRootStateType):boolean =>{\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const usersSelector = (state:AppRootStateType):UserType[] =>{\r\n    return state.UsersPage.items;\r\n}\r\nexport const pageSizeSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const currentPageSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const totalUserCountSelector = (state:AppRootStateType):number =>{\r\n    return state.UsersPage.totalCount;\r\n}\r\nexport const followingArrSelector = (state:AppRootStateType):Array<string> =>{\r\n    return state.UsersPage.following;\r\n}\r\n\r\n","import {AxiosError} from \"axios\";\r\nimport {AppThunkDispatch} from \"../store/store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../store/AppReducer\";\r\nimport {RespType} from \"../components/api\";\r\n\r\n\r\nexport const handleNetworkError = (Error: AxiosError<{ error: string }>, dispatch: AppThunkDispatch) =>{\r\n\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n    dispatch(setAppErrorAC(Error.response?.data.error || \"some Error\"));\r\n}\r\n\r\n\r\nexport const handleServerAppError = <D>(data: RespType<D>, dispatch: AppThunkDispatch, ) =>{\r\n    if (data.messages.length) {\r\n        dispatch(setAppErrorAC(data.messages[0]));\r\n    } else {\r\n        dispatch(setAppErrorAC(\"Some error occupied\"));\r\n    }\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\nexport const handleServerNetworkError = (error:Error, dispatch:AppThunkDispatch) =>{\r\n    dispatch(setAppErrorAC(error.message));\r\n    dispatch(setAppStatusAC(\"failed\"));\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinEarthOnHover\":\"Error404_spinEarthOnHover__e2isj\",\"ErrorWrapper\":\"Error404_ErrorWrapper__1pf8y\",\"stars\":\"Error404_stars__SQd2w\",\"centralBody\":\"Error404_centralBody__1JEWd\",\"image404\":\"Error404_image404__3kdlv\",\"btnGoHome\":\"Error404_btnGoHome__1aZp-\",\"objects\":\"Error404_objects__1c8KN\",\"objectRocket\":\"Error404_objectRocket__Dl0sG\",\"rocketMovement\":\"Error404_rocketMovement__1jP2b\",\"earthMoon\":\"Error404_earthMoon__2Oh1x\",\"objectEarth\":\"Error404_objectEarth__1Upwt\",\"spinEarth\":\"Error404_spinEarth__1em9y\",\"objectMoon\":\"Error404_objectMoon__jD2Jg\",\"boxAstronaut\":\"Error404_boxAstronaut__2allS\",\"moveAstronaut\":\"Error404_moveAstronaut__3vQwN\",\"objectAstronaut\":\"Error404_objectAstronaut__34-08\",\"rotateAstronaut\":\"Error404_rotateAstronaut__2OcHy\",\"glowingStars\":\"Error404_glowingStars__3cRJl\",\"star\":\"Error404_star__1VYV1\",\"glowStar\":\"Error404_glowStar__3cklv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsBlock\":\"ContactBlock_contactsBlock__2a9ys\",\"contactsBlockItem\":\"ContactBlock_contactsBlockItem__2IIYV\",\"icon\":\"ContactBlock_icon__1AYiX\",\"lastContactBlockItem\":\"ContactBlock_lastContactBlockItem__1odxh\"};","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./users.module.scss\";\r\nimport userPhoto from \"../../Images/defaultUserImage.jpg\";\r\nimport {UserType} from \"../../store/UsersReducer\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n\r\ntype usersPropsType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UserType[]\r\n    followingInProgress: Array<string>\r\n    followTC: (userID: string) => void\r\n    unfollowTC: (userID: string) => void\r\n}\r\n\r\nexport function Users({users, totalUserCount, currentPage, pageSize, onPageChanged, followingInProgress,\r\n                          unfollowTC, followTC}: usersPropsType) {\r\n    const navigate = useNavigate();\r\n    const pagesCount = Math.ceil(totalUserCount / pageSize);\r\n    const defaultUserPhoto: string = userPhoto;\r\n    const onPageHandler = (event: ChangeEvent<unknown>, page: number) => {\r\n        onPageChanged(page);\r\n    }\r\n\r\n\r\n    return <div className={style.usersWrapper}>\r\n        <Pagination color={\"primary\"}\r\n                    onChange={onPageHandler}\r\n                    size={\"small\"}\r\n                    variant={\"outlined\"}\r\n                    shape=\"rounded\"\r\n                    count={pagesCount}\r\n                    page={currentPage}\r\n                    data-testid=\"pagination\"\r\n        />\r\n        {users.map(user =>\r\n\r\n            <div key={user.id} data-testid=\"userArr\">\r\n                <div className={style.usersBlock}>\r\n                    <div className={style.avatarAndFollowButton}>\r\n                        <img onClick={() => navigate(`/profile/${user.id}`)}\r\n                             className={style.avatar} src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             alt={\"user\"}/>\r\n                        <span>\r\n                            {user.followed ?\r\n                                <Button disabled={followingInProgress\r\n                                    .some(id => id === user.id)}\r\n                                        onClick={() => {\r\n                                            //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                            unfollowTC(user.id)\r\n                                        }\r\n                                        }>Unfollow</Button>\r\n\r\n                                : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                          onClick={\r\n                                              () => {\r\n                                                  //ниже вызывается thunk creator из пропсов, в userContainerFC unfollowTC оборачивается dispatch\r\n                                                  //thunk creator нужен для связи DAL и BLL минуя UI\r\n                                                  followTC(user.id)\r\n                                              }\r\n                                          }>Follow</Button>\r\n                            }\r\n                            </span>\r\n                    </div>\r\n                    <div className={style.nameAndStatus}>\r\n                        <h3 className={style.name}>\r\n                            <div>{user.name}</div>\r\n                        </h3>\r\n                        <div className={style.status}>{`Status:  ${user.status ?? \"no status\"}`}</div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n","import React from \"react\"\r\nimport styles from \"./Preloader.module.scss\"\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport function Preloader (){\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.progress}>\r\n                <CircularProgress size={50}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import {useDispatch} from \"react-redux\";\r\nimport {\r\n    follow, getUsersTC, onPageChangedTC, unfollow\r\n} from \"../../store/UsersReducer\";\r\nimport React, {FC, useEffect} from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    currentPageSelector, followingArrSelector,\r\n    isFetchingSelector,\r\n    pageSizeSelector,\r\n    totalUserCountSelector,\r\n    usersSelector\r\n} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\n\r\nconst UserContainerFC: FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useAppSelector(usersSelector);\r\n    const isFetching = useAppSelector(isFetchingSelector);\r\n    const pageSize = useAppSelector(pageSizeSelector);\r\n    const currentPage = useAppSelector(currentPageSelector);\r\n    const totalUserCount = useAppSelector(totalUserCountSelector);\r\n    const followingArr = useAppSelector(followingArrSelector);\r\n    // let Redirect= WithAuthRedirect(Users);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersTC());\r\n    }, [currentPage, pageSize, dispatch])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(onPageChangedTC(pageSize, pageNumber));\r\n    }\r\n\r\n    const unfollowTC = (userID: string) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n    const followTC = (userID: string) => {\r\n        dispatch(follow(userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isFetching ?\r\n                    <Preloader/> :\r\n                    <Users onPageChanged={onPageChanged}\r\n                                            currentPage={currentPage}\r\n                                            totalUserCount={totalUserCount}\r\n                                            pageSize={pageSize}\r\n                                            users={users}\r\n                                            followTC={followTC}\r\n                                            unfollowTC={unfollowTC}\r\n                                            followingInProgress={followingArr}/>\r\n            }\r\n        </>\r\n    )\r\n})\r\nexport default UserContainerFC\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from \"./Profile.module.scss\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {myIDSelector, statusSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\n\r\n\r\nexport const ProfileStatus = () => {\r\n    const dispatch = useDispatch();\r\n    const status = useAppSelector(statusSelector);\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n    const [editMode, setEditMode] = useState<boolean>(true);\r\n    const userId = useAppSelector(state => state.ProfilePage.profile.userId);\r\n    const myID = useAppSelector(myIDSelector);\r\n\r\n    const activateEditMode = () => {\r\n        setLocalStatus(status);\r\n        setEditMode(false);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        dispatch(updateUserStatusTC(localStatus));\r\n        setEditMode(true);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.currentTarget.value);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    if ( userId !== myID ) {\r\n\r\n        return (\r\n            <div data-testid=\"editableDiv\">\r\n                {status}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(editMode && userId === myID && !status){\r\n\r\n        return (\r\n        <div\r\n                className={styles.editableDiv}\r\n                onClick={activateEditMode}>\r\n                Set status\r\n        </div>\r\n        )\r\n    }\r\n\r\n    if((editMode && userId === myID) ){\r\n        return (\r\n        <div className={styles.editableDiv}\r\n             data-testid=\"editableMyDiv\"\r\n            onClick={activateEditMode}>\r\n            {status}\r\n        </div>)\r\n    }\r\n\r\n    else return <input className={styles.input}\r\n                       onChange={changeTitle}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={deactivateEditMode}\r\n                       type=\"text\"\r\n                       data-testid=\"input\"\r\n                       value={localStatus}/>\r\n};\r\n\r\n","import * as Yup from \"yup\";\r\n\r\nexport const freeUserId = 1079;\r\nexport const myUserID = 21748;\r\nexport const maxPictureSize = 10000000; //10MB\r\nconst webSiteRegular =  /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/;\r\n\r\nexport const DisplayingErrorMessagesSchema = Yup.object().shape({\r\n    fullName: Yup.string()\r\n        .min(3, 'User name must be more than 3 symbols')\r\n        .max(50, 'User name must be less than 50 symbols')\r\n        .required('Required'),\r\n    aboutMe: Yup.string()\r\n        .min(3, 'User description text must be more than 3 symbols')\r\n        .max(300, 'User description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    lookingForAJobDescription: Yup.string()\r\n        .min(3, 'Job description text must be more than 3 symbols')\r\n        .max(300, 'Job description text must be less than 300 symbols')\r\n        .required('Required'),\r\n    contacts: Yup.object().shape({\r\n        facebook: Yup.lazy(value => !value ? Yup.string() : Yup.string().matches(\r\n            /(?:https:\\/\\/)?(?:www\\.)?facebook\\.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[\\w]*\\/)*([\\w]*)/,\r\n            'Please enter correct url'\r\n        )),\r\n        website: Yup.string()\r\n            .min(0)\r\n            .nullable()\r\n            .matches(\r\n                webSiteRegular,\r\n                'Please enter correct url'\r\n            ),\r\n        vk: Yup.string()\r\n\r\n            .matches(\r\n                /(?:https:\\/\\/)?[-a-zA-Z0-9@:%_+.~#?&=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_+.~#?&=]*)?/gi,\r\n                'Please enter correct vk url'\r\n            ),\r\n        twitter: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /@([A-Za-z0-9_]{1,15})/,\r\n                'Please enter correct twitter url'\r\n            )\r\n            ,\r\n        instagram: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:instagram.com|instagr.am|instagr.com)\\/(\\w+)/igm,\r\n                'Please enter correct instagram url'\r\n            )\r\n            ,\r\n        youtube: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /youtu(?:.*\\/v\\/|.*v\\|\\.be\\/)([A-Za-z0-9_-]{11})/,\r\n                'Please enter correct YouTube url'\r\n            )\r\n            ,\r\n        github: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .matches(\r\n                /(?:(?:http|https):\\/\\/)?(?:www.)?(?:github.com)\\/(\\w+)/igm,\r\n                'Please enter correct github url'\r\n            )\r\n            ,\r\n        mainLink: Yup.string()\r\n            .min(0)\r\n            .nullable(true)\r\n            .url(),\r\n\r\n    }),\r\n\r\n\r\n});","import React from 'react';\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {profileSelector} from \"../../Common/Selectors/Selectors\";\r\nimport style from \"./ContactBlock.module.scss\"\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faGithub} from \"@fortawesome/free-brands-svg-icons/faGithub\";\r\nimport {faVk} from \"@fortawesome/free-brands-svg-icons/faVk\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons/faTwitter\";\r\nimport {faFacebook} from \"@fortawesome/free-brands-svg-icons/faFacebook\";\r\nimport {faFirefoxBrowser, faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faInstagram} from \"@fortawesome/free-brands-svg-icons/faInstagram\";\r\nimport {faGoogle} from \"@fortawesome/free-brands-svg-icons/faGoogle\";\r\n\r\nexport const ContactBlock = () => {\r\n    const profile = useAppSelector(profileSelector);\r\n\r\n    return (\r\n        <div className={style.contactsBlock}>\r\n            <div>\r\n                <strong>Contacts</strong>\r\n            </div>\r\n            {profile.contacts.vk &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faVk}/>\r\n                <a href={profile.contacts.vk}>\r\n                    Vk\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.instagram &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faInstagram}/>\r\n                <a href={profile.contacts.instagram}>\r\n                    Instagram\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.youtube &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faYoutube}/>\r\n                <a href={profile.contacts.youtube}>\r\n                    You tube\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.github &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGithub}/>\r\n                <a href={profile.contacts.github}>\r\n                    GitHub\r\n                </a>\r\n            </div>}\r\n\r\n            {profile.contacts.twitter &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faTwitter}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    twitter\r\n                </a>\r\n            </div>\r\n            }\r\n            {profile.contacts.facebook &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFacebook}/>\r\n                <a href={profile.contacts.twitter}>\r\n                    faceBook\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.website &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faFirefoxBrowser}/>\r\n                <a href={profile.contacts.website}>\r\n                    Web site\r\n                </a>\r\n            </div>}\r\n            {profile.contacts.mainLink &&\r\n            <div className={style.contactsBlockItem}>\r\n                <FontAwesomeIcon className={style.icon} icon={faGoogle}/>\r\n                <a href={profile.contacts.website}>\r\n                    Main link\r\n                </a>\r\n            </div>}\r\n            {profile.lookingForAJobDescription &&\r\n            <>\r\n                <div>\r\n                    <strong>Job description</strong>\r\n                </div>\r\n                <div className={style.contactsBlockItem}>\r\n                    {profile.lookingForAJobDescription}\r\n                </div>\r\n            </>}\r\n        </div>\r\n    );\r\n};\r\n\r\n","\r\nimport React from \"react\";\r\nimport chatStyles from \"./ChatBlock.module.scss\"\r\ntype OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\nexport function ChatBlock(props: OnlineFriendType) {\r\n\r\n    return (\r\n            <div className={chatStyles.onlineFriendsWrapper}>\r\n                <img className={chatStyles.imgProfilePhoto} src={props.avatar} alt={\"onlineFriendAvatar\"}/>\r\n                <span className={chatStyles.OnlineDot}/>\r\n            </div>\r\n\r\n    );\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport styles from \"./ProfileInfo.module.scss\"\r\nimport {\r\n    ProfileDataType, uploadAvatarTC,\r\n} from \"../../../store/ProfileReducer\";\r\nimport defaultUserPhoto from \"../../../Images/defaultUserImage.jpg\";\r\nimport {ProfileStatus} from \"../ProfileStatus\";\r\nimport Modal from \"@mui/material/Modal/Modal\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setAppErrorAC} from \"../../../store/AppReducer\";\r\nimport {myIDSelector} from \"../../Common/Selectors/Selectors\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {maxPictureSize} from \"../../../constants\";\r\nimport {ContactBlock} from \"../ContactBlock/ContactBlock\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport {ChatBlock} from \"../OnlineFriends/ChatBlock\";\r\nimport {OnlineFriendType} from \"../../OldComponents/OldStore\";\r\nimport chatStyles from \"../OnlineFriends/ChatBlock.module.scss\";\r\n\r\n\r\ntype profileInfoPropsType = {\r\n    profile: ProfileDataType | undefined\r\n\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 350,\r\n    bgcolor: '#F9F9FE',\r\n    boxShadow: 24,\r\n    p: 4,\r\n    borderRadius: 2,\r\n}\r\nexport const ProfileInfo = React.memo((props: profileInfoPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userPhoto = useAppSelector(state => state.ProfilePage.profile.photos?.large);\r\n    const userId = Number(useParams<'userId'>().userId)\r\n    const myId = useAppSelector(myIDSelector);\r\n    const photoRef = useRef<HTMLInputElement>(null);\r\n    const onlineFriends = useAppSelector<Array<OnlineFriendType>>(state => state.HardcodedUsers.onlineFriends)\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [base64Avatar, setLocalAvatar] = useState<any>(userPhoto);\r\n    const [fileAvatar, setFileAvatar] = useState<any>();\r\n    const [openPopover, setOpenPopover] = useState(false)\r\n    const popoverAnchor = useRef(null);\r\n    const show = props.profile && Object.values( props.profile.contacts).every(item => item !== null)\r\n\r\n    const handleCloseModal = () => setOpen(false);\r\n    const handleClosePopover = () => setOpenPopover(false);\r\n    const handleOpenPopover = () => setOpenPopover(true);\r\n    const uploadPhoto = () => photoRef.current && photoRef.current.click();\r\n\r\n    const handleSaveAvatar = () => {\r\n        dispatch(uploadAvatarTC(fileAvatar));\r\n        handleCloseModal();\r\n    }\r\n    const onChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const reader = new FileReader();\r\n        const file = e.target?.files;\r\n\r\n        if ((file && file[0].type) && (file[0].type === \"image/png\" || file[0].type === \"image/jpeg\")) {\r\n            setFileAvatar(file[0])\r\n            reader.onloadend = function () {\r\n                setLocalAvatar(reader.result)\r\n            }\r\n            if (file[0].size && file[0].size <= maxPictureSize) {\r\n                reader.readAsDataURL(file[0])\r\n            } else {\r\n                dispatch(setAppErrorAC(`Your file size must be less then ${maxPictureSize / 1000000}MB 😕`))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setAppErrorAC(`Your file has not in .png .jpeg format. Please choose the right file`))\r\n        }\r\n\r\n    }\r\n    const onlineFriendsArr = onlineFriends.map((f) =>\r\n        <ChatBlock\r\n            key={f.id}\r\n            id={f.id}\r\n            avatar={f.avatar}/>\r\n    )\r\n    return (\r\n        <div className={styles.profileInfoWrapper}>\r\n\r\n            <div className={styles.profilePhoto}>\r\n                <div className={styles.avatarWrapper}>\r\n                    {props.profile && <img src={props.profile.photos?.large ?? defaultUserPhoto} alt={\"userPhoto\"}/>}\r\n                    {userId === myId &&\r\n                    <div className={styles.menu} onClick={() => setOpen(true)}><p>Change photo</p></div>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.statusBlock}>\r\n                <div className={styles.profileName}>\r\n                    {props.profile && <strong>{props.profile.fullName}</strong>}\r\n                    {/*<img src={smallLogo} alt=\"smallLogo\"/>*/}\r\n                    <CheckCircleOutlineIcon\r\n                        className={styles.popover}\r\n                        ref={popoverAnchor}\r\n                        onClick={handleOpenPopover} fontSize={\"small\"}\r\n                        color={props.profile && props.profile.lookingForAJob ? \"success\" : \"error\"}/>\r\n                </div>\r\n                <div className={styles.profileStatus}>\r\n                    <ProfileStatus/>\r\n                </div>\r\n                {props.profile && <p className={styles.profileDescription}>\r\n                    {props.profile.aboutMe}\r\n                </p>}\r\n            </div>\r\n            {show && <ContactBlock/>}\r\n\r\n            <div className={chatStyles.ChatBlock}>\r\n                <span className={chatStyles.Title}>Chat online</span>\r\n                {onlineFriendsArr}\r\n            </div>\r\n            <Modal open={open}\r\n                   onClose={handleCloseModal}\r\n            >\r\n                <Box sx={style}>\r\n                    <Box>\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: 'center',\r\n                            alignItems: \"center\", position: \"relative\"\r\n                        }}><strong>\r\n                            <p style={{fontSize: \"20px\"}}>Uploading profile photo</p>\r\n                        </strong></Box>\r\n                        <IconButton style={{position: \"absolute\", top: \"5px\", right: \"10px\"}}\r\n                                    onClick={handleCloseModal}>\r\n                            <Close/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        /*justifyContent: 'space-between',*/\r\n                        alignItems: \"center\"\r\n                    }}>\r\n\r\n                        <Box id=\"outer-container\">\r\n                            <img src={base64Avatar || userPhoto} alt=\"avatar\"\r\n                                 width={\"200px\"} style={{borderRadius: \"8px\", marginBottom: \"10px\"}}\r\n                            />\r\n                        </Box>\r\n\r\n                        <Box style={{\r\n                            display: \"flex\",\r\n                            justifyContent: 'space-between',\r\n                            width: \"200px\"\r\n                        }}>\r\n                            <input type={\"file\"} style={{display: \"none\"}} id={\"answer\"} ref={photoRef}\r\n                                   accept=\"image/*\" onChange={onChangeAvatar}/>\r\n                            <Button sx={{textTransform: \"none\"}} variant={\"contained\"}\r\n                                    onClick={uploadPhoto}>\r\n                                Upload photo\r\n                            </Button>\r\n                            <Button sx={{textTransform: \"none\"}} variant={\"contained\"} onClick={handleSaveAvatar}>\r\n                                Save\r\n                            </Button>\r\n                        </Box>\r\n                        <p>You can upload images in JPG or PNG format</p>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n            <Popover open={openPopover}\r\n                     anchorEl={popoverAnchor.current}\r\n                     onClose={handleClosePopover}\r\n                     anchorOrigin={{\r\n                         vertical: 'top',\r\n                         horizontal: 'left',\r\n                     }}\r\n                     transformOrigin={{\r\n                         vertical: 'bottom',\r\n                         horizontal: 'right',\r\n                     }}\r\n            >\r\n                <Typography\r\n                    sx={{p: 1}}>{props.profile && props.profile.lookingForAJob ? \"In search of a job\" : \"Not looking for a job\"}</Typography>\r\n            </Popover>\r\n        </div>\r\n    );\r\n})","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./Post.module.scss\"\r\nimport {MyProfilePhoto} from \"../../../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {deleteMyPostAC} from \"../../../../store/UserPostsReducer\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport const maxLikesCount = 300;\r\ntype MyPostsPropsType = {\r\n    id: string\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type LikeObjType = {\r\n    likeCount: number\r\n    updated: boolean\r\n}\r\n\r\nexport function Post(props: MyPostsPropsType) {\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const dispatch = useDispatch();\r\n    const deletePost = (userId: string) => {\r\n        dispatch(deleteMyPostAC(userId))\r\n    }\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () => {\r\n        if (!likeObj.updated) {\r\n            setLikeObj({likeCount: likeObj.likeCount + 1, updated: true})\r\n        } else {\r\n            setLikeObj({likeCount: likeObj.likeCount - 1, updated: false})\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            <div className={styles.avatarAndClose}>\r\n                <MyProfilePhoto/>\r\n                <IconButton style={{height: \"40px\"}} onClick={() => deletePost(props.id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n\r\n            </div>\r\n            <p>\r\n                {props.message}\r\n            </p>\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> :\r\n                    <FavoriteBorderIcon onClick={addLikeHandler}/>} {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {Post} from \"./MyPosts/Post/Post\";\r\nimport styles from \"./MyPosts.module.scss\"\r\nimport {PostType} from \"../OldComponents/OldStore\";\r\nimport {TextAreaForm} from \"../Common/TextAreaForm/TextAreaForm\";\r\n\r\n\r\nexport type MyPostsPropsType = {\r\n    postsData?: Array<PostType>\r\n    callBack: (text: string) => void\r\n    placeholderText: string\r\n}\r\n\r\nexport const MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let postsElements = props.postsData?.map(p => <Post key={p.id}\r\n                                                        id={p.id}\r\n                                                        message={p.message}\r\n                                                        likeCount={p.likesCount}/>).reverse()\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <div className={styles.myPostForm}>\r\n                <h5 className={styles.newPostHeader}>NEW POST</h5>\r\n                <TextAreaForm placeholderText={props.placeholderText} callBack={props.callBack}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport styles from \"./AnyUserPosts.module.scss\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\n\r\nimport {deleteUsersPostAC, UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport {LikeObjType, maxLikesCount} from \"../MyPosts/Post/Post\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {IconButton} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst AnyUserPost = ({avatar, name, position, postText, postPhoto, id}: UsersOnWallType) => {\r\n    const dispatch = useDispatch();\r\n    const [likeObj, setLikeObj] = useState<LikeObjType>({likeCount: 5, updated: false});\r\n    const generateLike = () => {\r\n        let likeGenerator = Math.round(Math.random() * maxLikesCount)\r\n        setLikeObj({likeCount: likeGenerator, updated: false});\r\n    };\r\n    const addLikeHandler = () =>{\r\n        if(!likeObj.updated){\r\n            setLikeObj({likeCount: likeObj.likeCount +1, updated: true})\r\n        } else{\r\n            setLikeObj({likeCount: likeObj.likeCount -1, updated: false})\r\n        }\r\n    }\r\n    const deletePostHandler = (userId: string) =>{\r\n        dispatch(deleteUsersPostAC(userId))\r\n    }\r\n    useEffect(() => {\r\n        generateLike()\r\n    }, []);\r\n    return (\r\n        <div className={styles.anyUserPost}>\r\n            <div className={styles.userWrapper}>\r\n                <div className={styles.userPhotoAndDescriptionBlock}>\r\n                    <img src={avatar} alt={\"avatar\"}/>\r\n                    <div className={styles.userDescription}>\r\n                        <strong>{name}</strong>\r\n                        <div className={styles.userPosition}>{position}</div>\r\n                    </div>\r\n                </div>\r\n                <IconButton onClick={() => deletePostHandler(id)}>\r\n                    <CloseIcon/>\r\n                </IconButton>\r\n            </div>\r\n            <p>{postText}</p>\r\n            {postPhoto && <img className={styles.postPhoto} src={postPhoto} alt=\"postPhoto\"/>}\r\n\r\n            <div className={styles.likeBlock}>\r\n                {likeObj.updated ? <FavoriteIcon onClick={addLikeHandler}/> : <FavoriteBorderIcon onClick={addLikeHandler}/> } {likeObj.likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPost;","import React from 'react';\r\nimport styles from \"../AnyUserPosts/AnyUserPosts.module.scss\";\r\n\r\nimport {useAppSelector} from \"../../../store/store\";\r\nimport {UsersOnWallType} from \"../../../store/UserPostsReducer\";\r\nimport AnyUserPost from \"./AnyUserPost\";\r\n\r\n\r\nconst AnyUserPosts = () => {\r\n    const userInfo = useAppSelector<Array<UsersOnWallType>>(state => state.HardcodedUsers.anyUserPostsData);\r\n    const anyPostsElements = userInfo.map(post => <AnyUserPost key={post.id} postPhoto={post.postPhoto} name={post.name}\r\n                                                               id={post.id} avatar={post.avatar}\r\n                                                               position={post.position} postText={post.postText}/>)\r\n    return (\r\n        <div className={styles.itemWrapper}>\r\n            {\r\n                anyPostsElements\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnyUserPosts;","import React from \"react\";\r\nimport styles from \"./Profile.module.scss\"\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {placeholderText} from \"../Common/TextAreaForm/textAreaData\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport AnyUserPosts from \"./AnyUserPosts/AnyUserPosts\";\r\nimport {addPostActionAC} from \"../../store/UserPostsReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    userID: number | null\r\n}\r\n\r\nexport const ProfileFC = React.memo((props: ProfilePropsType) => {\r\n    const postsData = useAppSelector(state => state.HardcodedUsers.myPostsData);\r\n    const profile = useAppSelector(state => state.ProfilePage.profile);\r\n    const dispatch = useDispatch();\r\n    const addMessage = (text: string) => dispatch(addPostActionAC(text));\r\n\r\n    return (\r\n        <div className={styles.profileWrapper}>\r\n            <ProfileInfo profile={profile}/>\r\n\r\n            <div className={styles.allPostsBlock}>\r\n                <MyPosts\r\n                    placeholderText={placeholderText.profileAreaText}\r\n                    callBack={addMessage}\r\n                    postsData={postsData}/>\r\n                <AnyUserPosts/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})","import React, {FC, useEffect} from \"react\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {ProfileFC} from \"./ProfileFC\";\r\nimport {isLoggedInSelector} from \"../Common/Selectors/Selectors\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {PATH} from \"../../App\";\r\nimport {getProfileTC, getUserStatusTC} from \"../../store/ProfileReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const ProfileContainerFC: FC = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    let userId = Number(useParams<'userId'>().userId);//эта id взялась из компоненты app из роута <Route path={\"/profile/:userId\"}\r\n    const isLoggedIn = useAppSelector(isLoggedInSelector);\r\n    const myUserID = useAppSelector(state => state.Auth.data.id);\r\n    if (isNaN(userId)) {\r\n        userId = myUserID;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userId){\r\n            dispatch(getProfileTC(userId));\r\n            dispatch(getUserStatusTC(userId));\r\n        }\r\n\r\n    }, [userId, dispatch]);\r\n\r\n    if (!isLoggedIn) {\r\n        return <Navigate to={PATH.LOGIN}/>\r\n    }\r\n    return <ProfileFC userID={userId}/>\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nexport function Events(){\r\n    return(\r\n        <div >\r\n            <div>Events</div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport {Events} from \"./Events\";\r\n\r\nexport function EventsContainer(){\r\n   /* const Redirect = WithAuthRedirect(Events);*/\r\n    return(\r\n        <div>\r\n            {/*<Redirect/>*/}\r\n            <Events/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            Photos\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","import React from 'react';\r\nimport styles from \"./Photos.module.scss\";\r\n\r\nimport Photos from \"./Photos\";\r\n\r\n\r\nfunction PhotosContainer() {\r\n    /*const Redirect = WithAuthRedirect(Photos)*/\r\n    return(\r\n        <div className={styles.content}>\r\n            {/*<Redirect/>*/}\r\n            <Photos/>\r\n        </div>\r\n    );\r\n}\r\n/*compose<React.ComponentType>(WithAuthRedirect)(PhotosContainer);*/\r\nexport default PhotosContainer","import React, {useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, } from \"react-redux\";\r\nimport {loginTC} from \"../../store/AuthReducer\";\r\nimport {useAppSelector} from \"../../store/store\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport {PATH} from \"../../App\";\r\nimport {Visibility, VisibilityOff} from \"@mui/icons-material\";\r\nimport {InputAdornment} from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Input from \"@mui/material/Input\";\r\nimport styles from \"./login.module.scss\";\r\n\r\ntype FormikErrorType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\nexport const Login = React.memo(() => {\r\n    const isLoggedIn = useAppSelector<boolean>(state => state.Auth.isLoggedIn);\r\n    const serverError = useAppSelector<NullableType<string>>(state => state.App.error);\r\n    const captchaUrl = useAppSelector<NullableType<string>>(state => state.Auth.captchaUrl)\r\n    const dispatch = useDispatch();\r\n    const [isPassType, setIsPassType] = useState<boolean>(true);\r\n\r\n    const formik = useFormik({\r\n        validate: (values) => {\r\n            const errors: Partial<FormikErrorType> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (values.password.length < 3) {\r\n                errors.password = \"Invalid password length\"\r\n            }\r\n            if (!values.password) {\r\n                errors.password = \"Password required\"\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: true,\r\n            captcha: \"\"\r\n        },\r\n\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values));\r\n        }\r\n    })\r\n    if (isLoggedIn) {\r\n        return <Navigate to={PATH.HOME}/>\r\n    }\r\n\r\n    const removeError = () => {\r\n        serverError && dispatch(setAppErrorAC(\"\"));\r\n    }\r\n    const handleClickShowPassword = () => {\r\n        setIsPassType(!isPassType);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid className={styles.loginWrapper} container justifyContent={\"center\"}>\r\n            <Grid className={styles.login} item justifyContent={'center'}>\r\n                <h2 >\r\n                    Social network\r\n                </h2>\r\n                <h2 >\r\n                    Sign in\r\n                </h2>\r\n                <FormControl className={styles.textFields}>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               rel=\"noreferrer\" target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup >\r\n                            <FormControl  sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-email\">Email</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"email\")} onFocus={removeError}\r\n                                />\r\n                            </FormControl>\r\n                            {formik.touched.email && formik.errors.email ?\r\n                                <div className={styles.emailError}>{formik.errors.email}</div> : null}\r\n\r\n                            <FormControl sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                                <Input {...formik.getFieldProps(\"password\")}\r\n                                       id=\"standard-adornment-password\"\r\n                                       type={isPassType ? 'password' : 'text'}\r\n                                       endAdornment={\r\n                                           <InputAdornment position=\"end\">\r\n                                               <IconButton\r\n                                                   aria-label=\"toggle password visibility\"\r\n                                                   onClick={handleClickShowPassword}\r\n                                                   onMouseDown={handleMouseDownPassword}\r\n                                               >\r\n                                                   {isPassType ? <VisibilityOff/> : <Visibility/>}\r\n                                               </IconButton>\r\n                                           </InputAdornment>\r\n                                       }\r\n                                />\r\n                                {formik.touched.password && formik.errors.password ?\r\n                                    <div className={styles.passError}>{formik.errors.password}</div> : null}\r\n                            </FormControl>\r\n\r\n                            <FormControlLabel className={styles.checkbox}\r\n                                label={'Remember me'}\r\n                                control={<Checkbox/>}\r\n                                {...formik.getFieldProps(\"rememberMe\")}\r\n                                checked={formik.getFieldProps(\"rememberMe\").value}\r\n                            />\r\n\r\n                            {captchaUrl &&\r\n                            <>\r\n                                <img src={captchaUrl} alt={\"captchaImg\"}/>\r\n                                <FormControl sx={{mTop: 2, width: '30ch'}} variant=\"standard\">\r\n                                    <InputLabel htmlFor=\"standard-adornment-password\">Captcha</InputLabel>\r\n                                    <Input {...formik.getFieldProps(\"captcha\")}\r\n\r\n                                    />\r\n                                    {formik.touched.captcha && formik.errors.captcha ?\r\n                                        <div style={{color: \"red\"}}>{formik.errors.captcha}</div> : null}\r\n                                </FormControl>\r\n                            </>\r\n                            }\r\n\r\n                            <div className={styles.button}>\r\n                                <Button style={{marginTop: \" 1rem\", marginBottom: \"1rem\", width: \"200px\"}}\r\n                                       variant={'contained'}\r\n                                       type={\"submit\"}>\r\n                                Login\r\n                            </Button>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </form>\r\n                </FormControl>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\n","import React, {ReactElement} from 'react';\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\nfunction withSuspense<T>(Component: React.ComponentType<T>) {\r\n\r\n    return (props:T):ReactElement => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n}\r\nexport default withSuspense\r\n","import React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {AlertTitle} from \"@mui/material\";\r\nimport {useAppDispatch, useAppSelector} from \"../../store/store\";\r\nimport {NullableType, setAppErrorAC} from \"../../store/AppReducer\";\r\n\r\n\r\n\r\nexport const ErrorSnackBar = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const error = useAppSelector<NullableType<string>>(state => state.App.error);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch(setAppErrorAC(null))\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={error !== null} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert\r\n                onClose={handleClose} severity=\"error\" sx={{width: '100%'}}>\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>{error}</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport s from \"./EditProfile.module.scss\"\r\nimport {useAppSelector} from \"../../store/store\";\r\n\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Formik} from \"formik\";\r\nimport {updateProfileTC} from \"../../store/ProfileReducer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport {useDispatch} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {PATH} from \"../../App\";\r\n\r\n\r\n\r\nexport const EditProfile = React.memo(() => {\r\n    const userId = useAppSelector(state => state.Auth.data.id);\r\n    const myProfile = useAppSelector(state => state.Auth.myProfile);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <div className={s.editProfileWrapper}>\r\n            <div className={s.content}><h3>Edit profile</h3>\r\n                <p>Contacts: </p>\r\n                <Formik enableReinitialize={true}\r\n                        initialValues={{\r\n                            userId: userId,\r\n                            lookingForAJob: myProfile && myProfile.lookingForAJob,\r\n                            lookingForAJobDescription: myProfile &&  myProfile.lookingForAJobDescription,\r\n                            fullName: myProfile &&  myProfile.fullName,\r\n                            aboutMe: myProfile &&  myProfile.aboutMe,\r\n                            contacts: {\r\n                                facebook: myProfile &&  myProfile.contacts.facebook,\r\n                                website: myProfile &&  myProfile.contacts.website,\r\n                                vk: myProfile &&  myProfile.contacts.vk,\r\n                                twitter: myProfile &&  myProfile.contacts.twitter,\r\n                                instagram: myProfile &&  myProfile.contacts.instagram,\r\n                                youtube: myProfile &&  myProfile.contacts.youtube,\r\n                                github: myProfile &&  myProfile.contacts.github,\r\n                                mainLink: myProfile &&  myProfile.contacts.mainLink,\r\n                            }\r\n\r\n                        }}\r\n\r\n                        onSubmit={\r\n                            values => {\r\n                                dispatch(updateProfileTC(values));\r\n                                navigate(`${PATH.PROFILE}/${userId}`);\r\n                            }\r\n                        }>\r\n\r\n                    {props => (\r\n                        <form onSubmit={props.handleSubmit}>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Github: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.github\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.github}\r\n                                           error={!!props.errors.contacts?.github}\r\n                                           helperText={props.errors.contacts?.github}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Facebook: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.facebook\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.facebook}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>VK: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.vk\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.vk}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Instagram: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.instagram\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.instagram}\r\n\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Twitter: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.twitter\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.contacts.twitter}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>YouTube: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.youtube\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Your WebSite: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.website\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Main link: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"contacts.mainLink\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>About me: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"aboutMe\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.aboutMe}\r\n\r\n                                />\r\n\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Full name: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           size={\"small\"}\r\n                                           type=\"text\"\r\n                                           name={\"fullName\"}\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.fullName}\r\n\r\n                                />\r\n                            </div>\r\n                            <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n\r\n                                <FormControlLabel\r\n                                    labelPlacement={\"start\"}\r\n                                    className={s.contactText}\r\n                                    label={'Looking for a job:'}\r\n                                    name={\"lookingForAJob\"}\r\n                                    control={<Checkbox/>}\r\n                                    checked={props.values.lookingForAJob}\r\n                                    onChange={props.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className={s.formRow}>\r\n                                <p className={s.contactText}>Job description: </p>\r\n                                <TextField style={{background: \"#FFFFFF\", width: \"300px\"}}\r\n                                           multiline={true}\r\n                                           size={\"small\"}\r\n                                           name={\"lookingForAJobDescription\"}\r\n                                           type=\"text\"\r\n                                           onChange={props.handleChange}\r\n                                           onBlur={props.handleBlur}\r\n                                           value={props.values.lookingForAJobDescription}\r\n                                />\r\n                            </div>\r\n\r\n\r\n                            <div className={s.button}>\r\n                                <Button variant={'contained'} type={\"submit\"}>Submit\r\n                                    changes</Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/Logo.559316d0.svg\";","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logOutTC} from \"../../store/AuthReducer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {isLoggedInSelector, myIDSelector} from \"../Common/Selectors/Selectors\";\r\nimport logo from \"./../../Images/Logo.svg\"\r\nimport {PATH} from \"../../App\";\r\nimport RssFeedIcon from '@mui/icons-material/RssFeed';\r\nimport MessageIcon from '@mui/icons-material/Message';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport {MyProfilePhoto} from \"../Common/MyProfilePhoto/MyProfilePhoto\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport {IconButton} from \"@mui/material\";\r\n\r\nexport function Navigation() {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector(isLoggedInSelector);\r\n    const logOutHandler = () => {\r\n        dispatch(logOutTC());\r\n        navigate(\"/login\")\r\n    }\r\n    const myID = useSelector(myIDSelector);\r\n\r\n    const navigateToMyMage = () => {\r\n        navigate(`/profile/${myID}`)\r\n    }\r\n    return (\r\n        <div className={styles.headerContent}>\r\n            <div className={styles.logo}><img src={logo} alt=\"logo\"/></div>\r\n            <nav className={styles.sideWrapper}>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={`${PATH.PROFILE}/${myID}`}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <RssFeedIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Feed</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.DIALOGS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <MessageIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Messages</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className={styles.NavItem}>\r\n                    <NavLink to={PATH.USERS}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <PeopleAltIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>All Users</div>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.LastNavItem}>\r\n                    <NavLink to={PATH.EDIT_PROFILE}\r\n                             className={({isActive}) => isActive ? `${styles.activeNavLink}` : `${styles.unActiveNavLink}`}>\r\n                        <SettingsIcon fontSize={'large'}/>\r\n                        <div className={styles.hideForMobile}>Edit Profile</div>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n\r\n            <div className={styles.loginBlock}>\r\n                <div className={styles.profilePhoto} onClick={navigateToMyMage}>\r\n                    <MyProfilePhoto/>\r\n                </div>\r\n                {/*<div className={styles.jobStatus}>\r\n                    <div className={styles.userName} onClick={navigateToMyMage}>\r\n                        {myLoginName}\r\n                    </div>\r\n                </div>*/}\r\n                {\r\n                    isLoggedIn &&\r\n                    <>\r\n                        <Button variant={\"outlined\"} className={styles.loginButton} onClick={logOutHandler}>\r\n                            Log out\r\n                        </Button>\r\n\r\n                         <IconButton className={styles.logOutIcon} onClick={logOutHandler}>\r\n                            <LogoutIcon fontSize={\"large\"} />\r\n                        </IconButton>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./Header.module.scss\"\r\nimport {Navigation} from \"./Navigation\";\r\n\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <header className={styles.headerWrapper}>\r\n            <Navigation/>\r\n        </header>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport {Navigate, Outlet, useLocation} from \"react-router-dom\";\r\nimport {useAppSelector} from \"../store/store\";\r\nimport {isLoggedInSelector} from \"./Common/Selectors/Selectors\";\r\nimport {Header} from \"./Header/Header\";\r\n\r\nconst PrivateRoutes = () => {\r\n    const location = useLocation();\r\n\r\n    const isLoggedIn = useAppSelector<boolean>(isLoggedInSelector);\r\n\r\n    if (!isLoggedIn) {\r\n        return (\r\n            <Navigate\r\n                to={`/login?redirectTo=${encodeURIComponent(location.pathname)}`}\r\n                replace\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Outlet/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;","export default __webpack_public_path__ + \"static/media/astronaut.efda7730.svg\";","export default __webpack_public_path__ + \"static/media/earth.e0fbdf02.svg\";","export default __webpack_public_path__ + \"static/media/moon.5a77d87b.svg\";","export default __webpack_public_path__ + \"static/media/rocket.9c039dba.svg\";","export default __webpack_public_path__ + \"static/media/404Text.154db121.svg\";","import React from \"react\";\r\nimport styles from \"./Error404.module.scss\";\r\nimport {NavLink, } from \"react-router-dom\";\r\n\r\nimport astronaut from \"./../../Images/astronaut.svg\";\r\nimport earth from \"./../../Images/earth.svg\";\r\nimport moon from \"./../../Images/moon.svg\";\r\nimport rocket from \"./../../Images/rocket.svg\";\r\nimport errorText from \"./../../Images/404Text.svg\";\r\nimport {PATH} from \"../../App\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={styles.ErrorWrapper } >\r\n\r\n            <div className={styles.stars} >\r\n\r\n                <div className={styles.centralBody}>\r\n                    <img className={styles.image404} src={errorText} alt={\"img404\"}/>\r\n                    <NavLink to={`${PATH.HOME}`} className={styles.btnGoHome}>GO BACK HOME</NavLink>\r\n                </div>\r\n                <div className={styles.objects}>\r\n                    <img className={styles.objectRocket} src={rocket} alt={\"imgRocket\"}/>\r\n                    <div className={styles.earthMoon}>\r\n                        <img className={styles.objectEarth} src={earth} alt={\"imgEarth\"}/>\r\n                        <img className={styles.objectMoon} src={moon} alt={\"imgMoon\"}/>\r\n                    </div>\r\n                    <div className={styles.boxAstronaut}>\r\n                        <img className={styles.objectAstronaut} src={astronaut} alt={\"imgAstronaut\"}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.glowingStars}>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                    <div className={styles.star}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styles from \"./../Footer/Footer.module.scss\"\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nexport const Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    const location = useLocation();\r\n\r\n    const myPortfolioRoute = \"https://dmitrylotkov.github.io/Portfolio/\"\r\n    return (\r\n        <footer className={location.pathname !== \"/404\" ? styles.LastContactContainer: styles.error404Display}>\r\n            <span>© {year} All Rights Reserved. Created for educational purposes by\r\n                <a href={myPortfolioRoute}>\r\n                    <strong> @Dmitry Lotkov</strong>\r\n                </a>\r\n            </span>\r\n        </footer>\r\n    );\r\n};\r\n\r\n\r\n","import React, {FC, useEffect} from 'react';\r\nimport './App.scss';\r\nimport {Route, Routes, Navigate} from \"react-router-dom\";\r\nimport {useAppSelector} from \"./store/store\";\r\nimport UsersContainerFC from './components/Users/UsersContainerFC';\r\nimport {ProfileContainerFC} from \"./components/Profile/ProfileContainerFC\";\r\nimport {EventsContainer} from \"./components/Events/EventsContainer\";\r\nimport PhotosContainer from \"./components/Photos/PhotosContainer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {initializeAppTC} from \"./store/AuthReducer\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Preloader} from \"./components/Common/Preloader/Preloader\";\r\nimport {isInitializedSelector} from \"./components/Common/Selectors/Selectors\";\r\nimport withSuspense from \"./components/HOC/withSuspense\";\r\nimport {RequestStatusType} from \"./store/AppReducer\";\r\nimport {ErrorSnackBar} from \"./components/ErrorSnackBar/ErrorSnackBar\";\r\nimport {EditProfile} from \"./components/EditProfile/EditProfile\";\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\nimport {Error404} from \"./components/Error404/Error404\";\r\nimport {Footer} from \"./components/Footer/Footer\";\r\n\r\n\r\n\r\n\r\nconst DialogContainerFC = React.lazy(() => import(\"./components/Dialogs/DialogContainerFC\"));\r\n\r\nexport const PATH = {\r\n    HOME: \"/\",\r\n    LOGIN: \"/login\",\r\n    PROFILE: \"/profile\",\r\n    USERS: \"/users\",\r\n    ERROR404: \"/404\",\r\n    ANY_ROUTE: \"*\",\r\n    DIALOGS: \"/dialogs\",\r\n    EVENTS: \"/events\",\r\n    PHOTOS: \"/photos\",\r\n    EDIT_PROFILE: \"/edit_profile\"\r\n}\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const appStatus = useAppSelector<RequestStatusType>(state => state.App.status);\r\n    const dispatch = useDispatch();\r\n    const isInitialized = useAppSelector(isInitializedSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (!isInitialized) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div className={\"App\"}>\r\n            <main className={\"mainContent\"}>\r\n                {appStatus === 'loading' && <Preloader/>}\r\n                <Routes>\r\n                    <Route path={PATH.HOME} element={<Navigate to={`${PATH.PROFILE}`}/>}/>\r\n                    <Route element={<PrivateRoutes />}>\r\n                        <Route path={`${PATH.PROFILE}`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={`${PATH.PROFILE}/:userId`} element={<ProfileContainerFC/>}/>\r\n                        <Route path={PATH.DIALOGS} element={withSuspense(DialogContainerFC)({})}/>\r\n                        <Route path={PATH.USERS} element={<UsersContainerFC/>}/>\r\n                        <Route path={PATH.EDIT_PROFILE} element={<EditProfile/>}/>\r\n                    </Route>\r\n                    <Route path={PATH.LOGIN} element={<Login/>}/>\r\n                    <Route path={PATH.EVENTS} element={<EventsContainer/>}/>\r\n                    <Route path={PATH.PHOTOS} element={<PhotosContainer/>}/>\r\n                    <Route path={PATH.ANY_ROUTE} element={<Navigate to={PATH.ERROR404}/>}/>\r\n                    <Route path={`${PATH.ERROR404}`} element={<Error404/>}/>\r\n                </Routes>\r\n                <ErrorSnackBar/>\r\n            </main>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import './index.scss';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport {store} from \"./store/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n// @ts-ignore\nwindow.store = store\n\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Provider>,\n        document.getElementById('root')\n    );\n\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {UsersPageType} from \"../store/UsersReducer\";\r\nimport {ProfileDataType} from \"../store/ProfileReducer\";\r\nimport {LoginParamsType} from \"../store/AuthReducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"c3728aab-6f62-411f-9e90-c03d8ff7b899\",\r\n    }\r\n})\r\nexport type AuthDataType = {\r\n    id:number,\r\n    email: string\r\n    login:string\r\n}\r\nexport type RespType<T = {}> = {\r\n    resultCode: 0\r\n    data: T\r\n    fieldsErrors: Array<string>\r\n    messages: Array<string>\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<UsersPageType>(`users?page=${currentPage}&count=${pageSize}`);\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userID: number | null) {\r\n        return instance.get<ProfileDataType>(`profile/${userID}`);\r\n    },\r\n    getStatus(userID: number | null) {\r\n        return instance.get<AxiosResponse<RespType>, any>(`profile/status/${userID}`);\r\n    },\r\n    updateStatus(status: string | null) {\r\n\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile/status`, {status})\r\n    },\r\n    uploadAvatar(photoFile:File){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<RespType<{photos:{small:\"\", large:\"\"}}>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    updateProfile(profile: ProfileDataType){\r\n        return instance.put<AxiosResponse<RespType>,any>(`profile`, {...profile})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<RespType<AuthDataType>>(`auth/me`);\r\n    },\r\n    follow(userID: string | undefined) {\r\n        return instance.post<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    unfollow(userID: string | undefined) {\r\n        return instance.delete<RespType<AuthDataType>>(`follow/${userID}`);\r\n    },\r\n    login(data: LoginParamsType){\r\n        return instance.post<RespType<AuthDataType>>(`auth/login`, data);\r\n    },\r\n    logout(){\r\n        return instance.delete<RespType>('/auth/login');\r\n    },\r\n    getFollowers(userID: string | undefined){\r\n        return instance.get(`follow/${userID}`)\r\n    }\r\n\r\n}\r\nexport const securityAPI = {\r\n    captcha(){\r\n        return instance.get<{url:string| null}>(`/security/get-captcha-url`)\r\n    }\r\n}\r\n","import {profileAPI} from \"../components/api\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setMyProfileAC} from \"./AuthReducer\";\r\n\r\n//types\r\nenum ACTIONS_TYPE {\r\n    SET_PROFILE = \"PROFILE/SET-PROFILE\",\r\n    SAVE_MY_PROFILE_PHOTO = \"PROFILE/SAVE-MY-PROFILE_PHOTO\",\r\n    UPDATE_NEW_POST_TEXT = \"PROFILE/UPDATE-NEW-POST-TEXT\",\r\n    SET_SOME_USER_PROFILE = \"PROFILE/SET-SOME-USER-PROFILE\",\r\n    SET_STATUS = \"PROFILE/SET-STATUS\",\r\n\r\n}\r\n\r\nexport type ProfileActionsType =\r\n     ReturnType<typeof updateNewPostTextAC>\r\n    | ReturnType<typeof setUserProfileAC>\r\n    | ReturnType<typeof savePhotoAC>\r\n    | ReturnType<typeof setStatusAC>\r\n\r\n\r\n\r\nexport type PostTextType = {\r\n    text: string\r\n}\r\nexport type ProfilePageType = {\r\n\r\n    profile: ProfileDataType\r\n    status: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type UserProfileContactType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n}\r\nexport type userProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileDataType = {\r\n    userId: number,\r\n    aboutMe?: string\r\n    lookingForAJob?: boolean\r\n    lookingForAJobDescription?: string\r\n    fullName?: string\r\n    contacts: Partial<UserProfileContactType>\r\n    photos?: userProfilePhotosType\r\n}\r\n\r\n//actions\r\nexport const updateNewPostTextAC = (text: PostTextType) => ({type: ACTIONS_TYPE.UPDATE_NEW_POST_TEXT, text} as const)\r\nexport const setUserProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_SOME_USER_PROFILE,\r\n    profile\r\n} as const);\r\nexport const savePhotoAC = (photos: userProfilePhotosType) => ({\r\n    type: ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO,\r\n    photos\r\n} as const);\r\nexport const setStatusAC = (status: string) => ({type: ACTIONS_TYPE.SET_STATUS, status} as const);\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    status: \"\",\r\n    profile: {\r\n        userId: 0,\r\n        fullName: \"\",\r\n        lookingForAJob: true,\r\n        lookingForAJobDescription: \"\",\r\n        aboutMe: \"\",\r\n        contacts: {\r\n            facebook: \"\",\r\n            github: \"\",\r\n            instagram: \"\",\r\n            mainLink: \"\",\r\n            twitter: \"\",\r\n            vk: \"\",\r\n            website: \"\",\r\n            youtube: \"\",\r\n        },\r\n        photos:\r\n            {\r\n                small: \"\",\r\n                large: \"\",\r\n            }\r\n    }\r\n}\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionsType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_SOME_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case ACTIONS_TYPE.SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case ACTIONS_TYPE.SAVE_MY_PROFILE_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//thunks\r\nexport const getProfileTC = (userId: number | null, isMyProfile?: boolean) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    try {\r\n        let res = await profileAPI.getProfile(userId);\r\n        if (isMyProfile) {\r\n            dispatch(setMyProfileAC(res.data))\r\n        }\r\n        else {\r\n            dispatch(setUserProfileAC(res.data));\r\n        }\r\n        dispatch(setAppStatusAC(\"succeeded\"));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n\r\n}\r\n\r\nexport const getUserStatusTC = (userId: number | null) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    try {\r\n        let res = await profileAPI.getStatus(userId);\r\n        if (res.status === 200) {\r\n            dispatch(setStatusAC(res.data));\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserStatusTC = (status: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    try {\r\n        let res = await profileAPI.updateStatus(status)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setStatusAC(status))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update user status\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const uploadAvatarTC = (photoFile: File) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n    const userId = getState().Auth.data.id;\r\n\r\n    try {\r\n        let res = await profileAPI.uploadAvatar(photoFile)\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n            await dispatch( getProfileTC(userId))\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try upload avatar\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\nexport const updateProfileTC = (profile: ProfileDataType) => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n\r\n    dispatch(setAppStatusAC(\"loading\"));\r\n\r\n    const userId = getState().Auth.data.id;\r\n    try {\r\n        let res = await profileAPI.updateProfile(profile)\r\n        if (res.data.resultCode === 0) {\r\n            await dispatch( getProfileTC(userId, true))\r\n            dispatch(setAppStatusAC(\"succeeded\"));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try update profile\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\n","import {authAPI, AuthDataType, securityAPI} from \"../components/api\";\r\nimport {AppThunkDispatch} from \"./store\";\r\nimport {handleNetworkError, handleServerAppError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {setAppStatusAC} from \"./AppReducer\";\r\nimport {getProfileTC, ProfileDataType} from \"./ProfileReducer\";\r\n\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGGED_IN = \"AUTH/SET-IS-LOGGED-IN\",\r\n    SET_IS_INITIALIZED = \"AUTH/SET-IS-INITIALIZED\",\r\n    SET_AUTH_DATA = \"AUTH/SET-AUTH-DATA\",\r\n    GET_CAPTCHA = \"AUTH/GET-CAPTCHA\",\r\n    SET_AUTH_PROFILE_DATA = \"AUTH/SET-AUTH-PROFILE-DATA\",\r\n}\r\n\r\nexport type AuthActionsType =\r\n    ReturnType<typeof setIsLoggedInAC>\r\n    | ReturnType<typeof setInitializedAC>\r\n    | ReturnType<typeof setAuthProfileAC>\r\n    | ReturnType<typeof getCaptchaAC>\r\n    | ReturnType<typeof setMyProfileAC>\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype InitialStateType = {\r\n    data: AuthDataType,\r\n    isInitialized: boolean\r\n    isLoggedIn: boolean,\r\n    captchaUrl: null | string\r\n    myProfile: undefined | ProfileDataType\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    data: {\r\n        id: 0,\r\n        email: \"\",\r\n        login: \"\",\r\n\r\n    },\r\n    isInitialized: false,\r\n    isLoggedIn: false,\r\n    captchaUrl: null,\r\n    myProfile: undefined as undefined | ProfileDataType\r\n}\r\n\r\n//reducer\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        case ACTIONS_TYPE.SET_IS_INITIALIZED:\r\n            return {...state, isInitialized: action.isInitialized}\r\n        case ACTIONS_TYPE.SET_AUTH_DATA:\r\n            return {...state, data: action.data}\r\n        case ACTIONS_TYPE.GET_CAPTCHA:\r\n            return {...state, captchaUrl: action.captcha}\r\n        case ACTIONS_TYPE.SET_AUTH_PROFILE_DATA:\r\n            return {...state, myProfile: action.profile}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const setIsLoggedInAC = (isLoggedIn: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_LOGGED_IN, isLoggedIn} as const);\r\nexport const setInitializedAC = (isInitialized: boolean) =>\r\n    ({type: ACTIONS_TYPE.SET_IS_INITIALIZED, isInitialized} as const);\r\nexport const setAuthProfileAC = (profileData: AuthDataType) =>\r\n    ({type: ACTIONS_TYPE.SET_AUTH_DATA, data: profileData} as const);\r\nexport const getCaptchaAC = (captcha: string | null) =>\r\n    ({type: ACTIONS_TYPE.GET_CAPTCHA, captcha} as const);\r\nexport const setMyProfileAC = (profile: ProfileDataType) => ({\r\n    type: ACTIONS_TYPE.SET_AUTH_PROFILE_DATA, profile\r\n} as const)\r\n\r\n\r\n//thunks\r\nexport const initializeAppTC = () => async (dispatch: AppThunkDispatch) => {\r\n    try {\r\n        let res = await authAPI.me();\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setAuthProfileAC(res.data.data));\r\n            await dispatch(getProfileTC(res.data.data.id, true)); // этот запрос делается, чтобы записать мои данные в отдельный стейт\r\n            dispatch(setIsLoggedInAC(true));\r\n        } else {\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try initialize app\", error)\r\n        handleNetworkError(error, dispatch);\r\n    } finally {\r\n        dispatch(setInitializedAC(true));\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const loginTC = (data: LoginParamsType) => async (dispatch: AppThunkDispatch) => {\r\n    try {\r\n        let res = await authAPI.login(data);\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(true));\r\n            dispatch(getCaptchaAC(null))\r\n            dispatch(await initializeAppTC())\r\n        } else {\r\n            if (res.data.resultCode === 10) {\r\n                dispatch(await getCaptchaTC())\r\n            }\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to login\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n\r\n}\r\nexport const logOutTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await authAPI.logout();\r\n    try {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(setIsLoggedInAC(false));\r\n        } else {\r\n            handleServerAppError(res.data, dispatch);\r\n        }\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => async (dispatch: AppThunkDispatch) => {\r\n    let res = await securityAPI.captcha();\r\n    try {\r\n\r\n        dispatch(getCaptchaAC(res.data.url))\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try to logout\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"AnyUserPosts_itemWrapper__3SAlC\",\"anyUserPost\":\"AnyUserPosts_anyUserPost__1jKw2\",\"userWrapper\":\"AnyUserPosts_userWrapper__2Bib2\",\"userPhotoAndDescriptionBlock\":\"AnyUserPosts_userPhotoAndDescriptionBlock__1pr_E\",\"userDescription\":\"AnyUserPosts_userDescription__jD3qN\",\"userPosition\":\"AnyUserPosts_userPosition__3JImU\",\"postPhoto\":\"AnyUserPosts_postPhoto__3lIfB\",\"likeBlock\":\"AnyUserPosts_likeBlock__1oOiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__iDoIF\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3sygl\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__1II4U\",\"menu\":\"ProfileInfo_menu__4TXbA\",\"statusBlock\":\"ProfileInfo_statusBlock__12kNH\",\"profileName\":\"ProfileInfo_profileName__QENTj\",\"popover\":\"ProfileInfo_popover__3IVNF\",\"profileStatus\":\"ProfileInfo_profileStatus__P1vsw\",\"profileDescription\":\"ProfileInfo_profileDescription__4gsPq\",\"modalMainBox\":\"ProfileInfo_modalMainBox__3RTcD\",\"avatarBlock\":\"ProfileInfo_avatarBlock__3CI4t\",\"avatarImg\":\"ProfileInfo_avatarImg__3-stZ\",\"iconUpload\":\"ProfileInfo_iconUpload__aSS_N\"};","import {v1} from \"uuid\";\r\nimport user1 from \"./../Images/Users/user-1.jpg\";\r\nimport user2 from \"./../Images/Users/user-2.jpg\";\r\nimport user3 from \"./../Images/Users/user-3.jpg\";\r\nimport user4 from \"./../Images/Users/user-4.jpg\";\r\nimport user5 from \"./../Images/Users/user-5.jpg\";\r\nimport user6 from \"./../Images/Users/user-6.jpg\";\r\nimport user7 from \"./../Images/Users/user-7.jpg\";\r\nimport user8 from \"./../Images/Users/user-8.jpg\";\r\nimport user9 from \"./../Images/Users/user-9.jpg\";\r\nimport postPhoto from \"./../Images/Post photo.png\";\r\nimport {\r\n    PostType,\r\n} from \"./ProfileReducer\";\r\n\r\n\r\nexport type OnlineFriendType = {\r\n    id: string\r\n    avatar: string\r\n}\r\n\r\nenum ACTIONS_TYPE {\r\n    ADD_POST = \"PROFILE/ADD-POST\",\r\n    DELETE_MY_POST = \"PROFILE/DELETE-MY-POST\",\r\n    DELETE_USERS_POST = \"PROFILE/DELETE-USERS-POST\"\r\n}\r\n\r\nexport type UsersOnWallType = {\r\n    id: string\r\n    avatar: string\r\n    name: string\r\n    position: string\r\n    postText: string\r\n    postPhoto: string | undefined\r\n\r\n}\r\nexport type ProfileActionsType = ReturnType<typeof addPostActionAC>\r\n    | ReturnType<typeof deleteMyPostAC>\r\n    | ReturnType<typeof deleteUsersPostAC>\r\n\r\nexport type PostsType = {\r\n    onlineFriends: Array<OnlineFriendType>\r\n    anyUserPostsData: Array<UsersOnWallType>\r\n    myPostsData: Array<PostType>\r\n}\r\nconst initialState: PostsType = {\r\n    myPostsData: [\r\n        {id: v1(), message: \"I want to be a serious frontend developer.\", likesCount: 0},\r\n    ],\r\n    onlineFriends: [\r\n        {id: v1(), avatar: user1},\r\n        {id: v1(), avatar: user2},\r\n        {id: v1(), avatar: user3},\r\n        {id: v1(), avatar: user4},\r\n        {id: v1(), avatar: user5},\r\n        {id: v1(), avatar: user6},\r\n        {id: v1(), avatar: user7},\r\n        {id: v1(), avatar: user8},\r\n        {id: v1(), avatar: user9},\r\n    ],\r\n    anyUserPostsData: [\r\n\r\n        {\r\n            id: v1(),\r\n            avatar: user5,\r\n            name: \"Theresa Steward\",\r\n            position: \"iOS developer\",\r\n            postPhoto: undefined,\r\n            postText: \"What did the Dursleys care if Harry lost his place on the House Quidditch team because he hadn’t practiced all summer? \" +\r\n                \"What was it to the Dursleys if Harry went back to school without any of his homework done? \" +\r\n                \"The Dursleys were what wizards called Muggles (not a drop of magical blood in their veins).\"\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user4,\r\n            name: \"Kyle Fisher\",\r\n            position: \"Product manager\",\r\n            postPhoto: postPhoto,\r\n            postText: \"How's your day going, guys?\",\r\n        },\r\n        {\r\n            id: v1(),\r\n            avatar: user7,\r\n            name: \"Audrey Alexander\",\r\n            position: \"Android developer\",\r\n            postPhoto: undefined,\r\n            postText: \"The bun runs along the road and meets a wolf. «Little bun, little bun, I want to eat you!» says the wolf. \" +\r\n                \"«I ran away from Grandfather, I ran away from Grandmother, I ran away from the hare. \" +\r\n                \"And I can run away from you, grey wolf!» says the bun and runs away.\",\r\n        },\r\n    ]\r\n}\r\nconst UserPostsReducer = (state: PostsType = initialState, action: ProfileActionsType) => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.ADD_POST:\r\n            return {\r\n                ...state,\r\n                myPostsData: [...state.myPostsData, {id: v1(), message: action.message, likesCount: 0}]\r\n            };\r\n        case ACTIONS_TYPE.DELETE_MY_POST:\r\n            return {...state, myPostsData: state.myPostsData.filter(post => post.id !== action.id)}\r\n        case ACTIONS_TYPE.DELETE_USERS_POST:\r\n            return {...state, anyUserPostsData: state.anyUserPostsData.filter(post => post.id !== action.id)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const addPostActionAC = (message: string) => ({type: ACTIONS_TYPE.ADD_POST, message} as const)\r\nexport const deleteMyPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_MY_POST, id} as const);\r\nexport const deleteUsersPostAC = (id: string) => ({type: ACTIONS_TYPE.DELETE_USERS_POST, id} as const);\r\n\r\nexport default UserPostsReducer;","export default __webpack_public_path__ + \"static/media/user-1.bad1de9b.jpg\";","export default __webpack_public_path__ + \"static/media/user-2.39d014b5.jpg\";","export default __webpack_public_path__ + \"static/media/user-3.5c342bb7.jpg\";","export default __webpack_public_path__ + \"static/media/user-5.95d001b9.jpg\";","export default __webpack_public_path__ + \"static/media/user-6.f8a10ddf.jpg\";","export default __webpack_public_path__ + \"static/media/user-7.aed715d8.jpg\";","export default __webpack_public_path__ + \"static/media/user-8.ae463966.jpg\";","export default __webpack_public_path__ + \"static/media/user-9.aa6a890d.jpg\";","export default __webpack_public_path__ + \"static/media/Post photo.0bd8ec12.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"users_usersWrapper__2NhZI\",\"usersBlock\":\"users_usersBlock__30vL-\",\"avatarAndFollowButton\":\"users_avatarAndFollowButton__3flk2\",\"avatar\":\"users_avatar__3IP3J\",\"nameAndStatus\":\"users_nameAndStatus__nYsqe\",\"status\":\"users_status__2gbbh\",\"name\":\"users_name__3sX1D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"login_loginWrapper__d7o73\",\"login\":\"login_login__2aP7k\",\"newPassTextFields\":\"login_newPassTextFields__lu9Lq\",\"textFields\":\"login_textFields__2VRdP\",\"emailError\":\"login_emailError__3eHZj\",\"passError\":\"login_passError__3kW8S\",\"checkbox\":\"login_checkbox__17trK\",\"button\":\"login_button__3MRSz\"};","import {authAPI, userAPI} from \"../components/api\";\r\nimport {handleNetworkError, handleServerNetworkError} from \"../utils/error.utils\";\r\nimport {AppStoreType, AppThunkDispatch} from \"./store\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./AppReducer\";\r\n\r\n//types\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = \"USERS/FOLLOW\",\r\n    UNFOLLOW = \"USERS/UNFOLLOW\",\r\n    SET_USERS = \"USERS/SET-USERS\",\r\n    SET_CURRENT_PAGE = \"USERS/SET-CURRENT-PAGE\",\r\n    SET_TOTAL_USERS_COUNT = \"USERS/SET-TOTAL-USERS-COUNT\",\r\n    IS_FETCHING = \"USERS/IS-FETCHING\",\r\n    IS_FOLLOWING_PROGRESS = \"USERS/IS-FOLLOWING-PROGRESS\"\r\n}\r\n\r\nexport type UsersActionsType =\r\n    ReturnType<typeof followSuccessAC> |\r\n    ReturnType<typeof unFollowSuccessAC> |\r\n    ReturnType<typeof setUsersAC> |\r\n    ReturnType<typeof setCurrentPageAC> |\r\n    ReturnType<typeof setUsersTotalCountAC> |\r\n    ReturnType<typeof toggleIsFetchingAC>|\r\n    ReturnType < typeof toggleFollowingProgressAC>\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserType = {\r\n    id: string,\r\n    name: string\r\n    status: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\nexport type UsersPageType = {\r\n    items: UserType[]\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    following: Array<string>\r\n}\r\n\r\n\r\nconst initialState: UsersPageType = {\r\n    items: [],\r\n    pageSize: 7,\r\n    totalCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    following: [],\r\n}\r\nexport const userReducer = (state: UsersPageType = initialState, action: UsersActionsType): UsersPageType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: true} : u)}\r\n        case ACTIONS_TYPE.UNFOLLOW:\r\n            return {...state, items: state.items.map(u => u.id === action.userID ? {...u, followed: false} : u)}\r\n        case ACTIONS_TYPE.SET_USERS:\r\n            return {...state, items: action.users}\r\n        case ACTIONS_TYPE.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case ACTIONS_TYPE.SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalCount: action.totalCount}\r\n        case ACTIONS_TYPE.IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case ACTIONS_TYPE.IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                following: action.followingIsProgress\r\n                    ? [...state.following, action.userID]\r\n                    : state.following.filter(id => id !== action.userID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const followSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.FOLLOW, userID: userID} as const)\r\nexport const unFollowSuccessAC = (userID: string) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\nexport const setUsersAC = (users: UserType[]) => ({type: ACTIONS_TYPE.SET_USERS, users: users} as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({\r\n    type: ACTIONS_TYPE.SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n} as const)\r\nexport const setUsersTotalCountAC = (serverTotalUsersCount: number) => ({\r\n    type: ACTIONS_TYPE.SET_TOTAL_USERS_COUNT,\r\n    totalCount: serverTotalUsersCount\r\n} as const)\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: ACTIONS_TYPE.IS_FETCHING,\r\n    isFetching: isFetching,\r\n} as const)\r\nexport const toggleFollowingProgressAC = (followingIsProgress: boolean, userID: string) => ({\r\n    type: ACTIONS_TYPE.IS_FOLLOWING_PROGRESS,\r\n    followingIsProgress: followingIsProgress,\r\n    userID: userID,\r\n} as const)\r\n\r\n//thunks\r\nexport const getUsersTC = () => async (dispatch: AppThunkDispatch, getState: () => AppStoreType) => {\r\n    let {currentPage, pageSize} = getState().UsersPage\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let res = await userAPI.getUsers(currentPage, pageSize)\r\n    try {\r\n        dispatch(toggleIsFetchingAC(false));\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try get users\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n}\r\n\r\nexport const onPageChangedTC = (pageSize: number, pageNumber: number) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    dispatch(setCurrentPageAC(pageNumber));\r\n    let res = await userAPI.getUsers(pageNumber, pageSize)\r\n    try {\r\n        dispatch(setUsersAC(res.data.items));\r\n        dispatch(setUsersTotalCountAC(res.data.totalCount));\r\n        dispatch(toggleIsFetchingAC(false));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try change page\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n\r\n    let response = await authAPI.follow(userID)\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(followSuccessAC(userID));\r\n        } else{\r\n            dispatch(setAppErrorAC(\"Some error occupied\"));\r\n            dispatch(setAppStatusAC(\"failed\"));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        console.log(\"Error when you try follow user\", error)\r\n        handleServerNetworkError(error, dispatch)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const unfollow = (userID: string) => async (dispatch: AppThunkDispatch) => {\r\n    dispatch(toggleFollowingProgressAC(true, userID));\r\n    let response = await authAPI.unfollow(userID);\r\n    try {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unFollowSuccessAC(userID));\r\n        }\r\n        dispatch(toggleFollowingProgressAC(false, userID));\r\n    } catch (error: any) {\r\n        handleNetworkError(error, dispatch);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__by2mZ\",\"allPostsBlock\":\"Profile_allPostsBlock__1N_zG\",\"editableDiv\":\"Profile_editableDiv__GFY9u\",\"input\":\"Profile_input__1jMdf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBlock\":\"ChatBlock_ChatBlock__37M42\",\"Title\":\"ChatBlock_Title__2dsU1\",\"imgProfilePhoto\":\"ChatBlock_imgProfilePhoto__v9ogG\",\"OnlineDot\":\"ChatBlock_OnlineDot__OsHxk\",\"onlineFriendsWrapper\":\"ChatBlock_onlineFriendsWrapper__1nHEO\"};","export default __webpack_public_path__ + \"static/media/defaultUserImage.ed37b80a.jpg\";","export const placeholderText = {\r\n    profileAreaText: \"What's on your mind?\",\r\n    dialogsAreaText: \"Type a message\"\r\n}\r\nexport const maxMessageLength:number = 500;"],"sourceRoot":""}